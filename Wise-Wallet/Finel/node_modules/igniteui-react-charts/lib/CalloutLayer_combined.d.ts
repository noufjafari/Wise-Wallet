import { AnnotationLayer } from "./AnnotationLayer";
import { DependencyProperty } from "igniteui-react-core";
import { IFastItemColumn$1 } from "igniteui-react-core";
import { Base, Type, Point } from "igniteui-react-core";
import { Series } from "./Series";
import { CalloutPlacementPositionsCollection } from "./CalloutPlacementPositionsCollection";
import { LabelCollisionPlacementPositions } from "igniteui-react-core";
import { AutoCalloutVisibilityMode } from "./AutoCalloutVisibilityMode";
import { Brush } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { CalloutCollisionMode } from "./CalloutCollisionMode";
import { FontInfo } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { CalloutLayerFrame } from "./CalloutLayerFrame";
import { CalloutAnnotationWrapper } from "./CalloutAnnotationWrapper";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { CalloutLabelUpdatingEventArgs } from "./CalloutLabelUpdatingEventArgs";
import { CalloutSeriesSelectingEventArgs } from "./CalloutSeriesSelectingEventArgs";
import { CalloutStyleUpdatingEventArgs } from "./CalloutStyleUpdatingEventArgs";
import { CalloutRenderStyleUpdatingEventArgs } from "./CalloutRenderStyleUpdatingEventArgs";
import { SeriesView } from "./SeriesView";
import { Frame } from "./Frame";
import { Size } from "igniteui-react-core";
import { CalloutContentUpdatingEventArgs } from "./CalloutContentUpdatingEventArgs";
import { DataContext } from "igniteui-react-core";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { HashPool$2 } from "igniteui-react-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { RenderingContext } from "igniteui-react-core";
import { TextBlock } from "igniteui-react-core";
import { Visibility } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class CalloutLayer extends AnnotationLayer {
    static $t: Type;
    protected get_c9(): boolean;
    constructor();
    private wh;
    private wq;
    private wi;
    protected k5(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    er(a: boolean): boolean;
    private um;
    private wv;
    private ww;
    calloutStyleUpdating: (sender: any, args: CalloutStyleUpdatingEventArgs) => void;
    calloutRenderStyleUpdating: (sender: any, args: CalloutRenderStyleUpdatingEventArgs) => void;
    v1: string;
    h1(a: any, b: string): any;
    get t0(): IFastItemColumn$1<any>;
    set t0(a: IFastItemColumn$1<any>);
    private tv;
    wc: string;
    get t1(): IFastItemColumn$1<any>;
    set t1(a: IFastItemColumn$1<any>);
    private tw;
    wf: string;
    get t2(): IFastItemColumn$1<any>;
    set t2(a: IFastItemColumn$1<any>);
    private tx;
    vy: string;
    get tz(): IFastItemColumn$1<any>;
    set tz(a: IFastItemColumn$1<any>);
    private tu;
    uf: boolean;
    vr: string;
    get ty(): IFastItemColumn$1<any>;
    set ty(a: IFastItemColumn$1<any>);
    private tt;
    private un;
    private uq;
    private wk;
    protected by(): SeriesView;
    l4(a: SeriesView): void;
    protected tk: CalloutLayerView;
    private ur;
    v3: string;
    tq: Series;
    vo: string;
    private tl;
    get tm(): CalloutPlacementPositionsCollection;
    set tm(a: CalloutPlacementPositionsCollection);
    tb: LabelCollisionPlacementPositions[];
    ue: boolean;
    ui: boolean;
    uj: boolean;
    uk: boolean;
    get tf(): AutoCalloutVisibilityMode;
    set tf(a: AutoCalloutVisibilityMode);
    get te(): AutoCalloutVisibilityMode;
    set te(a: AutoCalloutVisibilityMode);
    static readonly xb: DependencyProperty;
    uu: number;
    uh: boolean;
    ug: boolean;
    u3: number;
    xv: Brush;
    xs: Brush;
    u4: number;
    xu: Brush;
    xt: Brush;
    get xz(): Thickness;
    uw: number;
    uy: number;
    ux: number;
    uv: number;
    th: CalloutCollisionMode;
    uz: number;
    u0: number;
    v6: string;
    private tr;
    get ts(): FontInfo;
    protected r3(a: Series, b: boolean): void;
    protected r5(a: Frame, b: SeriesView): void;
    private uo;
    private ul;
    private t3;
    private xx;
    protected nb(a: Rect, b: Rect): void;
    protected na(a: Rect, b: Rect): void;
    private ua;
    private u2;
    private xw;
    get xy(): Rect;
    set xy(a: Rect);
    private t8;
    private wr;
    private wm;
    private t4;
    private u5;
    private u6;
    private t5;
    private wj;
    private t6;
    private u1;
    private us;
    private u7;
    protected qw(a: Series): boolean;
    lx(): void;
    private t9;
    wp(): void;
    calloutContentUpdating: (sender: any, args: CalloutContentUpdatingEventArgs) => void;
    calloutLabelUpdating: (sender: any, args: CalloutLabelUpdatingEventArgs) => void;
    calloutSeriesSelecting: (sender: any, args: CalloutSeriesSelectingEventArgs) => void;
    private up;
    private ws;
    private uc;
    private ud;
    private ut;
    private ub;
    protected bq(): SeriesHitTestMode;
    au(a: Point, b: boolean): DataContext;
    ez(a: Point, b: boolean): boolean;
    protected wu(a: CalloutLayerFrame, b: boolean): void;
    protected r8(a: Frame, b: SeriesView): void;
    protected ep(): boolean;
    protected l9(a: any, b: string, c: any, d: any): void;
    private tg;
    private tc;
    private wt;
    private t7;
    private td;
    private wn;
    private wl;
    private wo;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CalloutLayerView extends AnnotationLayerView {
    static $t: Type;
    constructor(a: CalloutLayer);
    protected b4: CalloutLayer;
    private b9;
    as(): void;
    private b6;
    private cc;
    private ce;
    private cd;
    b8: HashPool$2<CalloutAnnotationWrapper, CalloutView>;
    cm(a: Brush): Brush;
    protected a6(a: RenderingContext, b: boolean): void;
    protected b7(): FontInfo;
    al(a: any): void;
    private ca;
    co(a: TextBlock): Size;
    private cb;
    private b5;
    cn(a: any, b: Thickness): Size;
    cg(a: CalloutView, b: number, c: number): void;
    ch(a: CalloutView, b: CalloutAnnotationWrapper, c: any): void;
    ci(a: Series): Brush;
    cl(): Brush;
    ck(a: Series): Brush;
    cj(a: Series): Brush;
    cf(): void;
}
/**
 * @hidden
 */
export declare class CalloutView extends Base {
    static $t: Type;
    constructor(a: CalloutLayerView);
    private a;
    y: Visibility;
    j(a: RenderingContext): void;
    private l;
    private t;
    private q;
    private s;
    get r(): Point;
    set r(a: Point);
    get p(): Brush;
    set p(a: Brush);
    get o(): Brush;
    set o(a: Brush);
    get n(): Brush;
    set n(a: Brush);
    get m(): Brush;
    set m(a: Brush);
    get e(): number;
    set e(a: number);
    private w;
    private v;
    get x(): Thickness;
    set x(a: Thickness);
    private c;
    get d(): number;
    set d(a: number);
    get h(): any;
    set h(a: any);
    f: number;
    g: number;
    u(): Size;
    private b;
    k(a: Series, b: CalloutAnnotationWrapper, c: any): void;
    i(a: CalloutLayer, b: FontInfo, c: any): void;
}
