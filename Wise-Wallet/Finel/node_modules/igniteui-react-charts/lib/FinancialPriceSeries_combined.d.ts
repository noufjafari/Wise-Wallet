import { FinancialSeries } from "./FinancialSeries";
import { ITrendLineSeries } from "./ITrendLineSeries";
import { TrendLineType } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { PenLineCap } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { PriceDisplayType } from "./PriceDisplayType";
import { SeriesView } from "./SeriesView";
import { Type, Point } from "igniteui-react-core";
import { CategoryFrame } from "./CategoryFrame";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { FinancialSeriesView } from "./FinancialSeriesView";
import { FinancialBucketCalculator } from "./FinancialBucketCalculator";
import { ITrendLineManager } from "./ITrendLineManager";
import { Axis } from "./Axis";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { Rect } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { Pool$1 } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { SeriesPlotAreaMarginHorizontalMode } from "./SeriesPlotAreaMarginHorizontalMode";
import { SeriesPlotAreaMarginVerticalMode } from "./SeriesPlotAreaMarginVerticalMode";
import { GeometryGroup } from "igniteui-react-core";
import { LegendItemBadgeShape } from "igniteui-react-core";
import { ValueLayerValueMode } from "./ValueLayerValueMode";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class FinancialPriceSeries extends FinancialSeries implements ITrendLineSeries {
    static $t: Type;
    protected get_dv(): boolean;
    protected gz(): number;
    protected by(): SeriesView;
    l4(a: SeriesView): void;
    tv: FinancialPriceSeriesView;
    constructor();
    trendLineType: TrendLineType;
    trendLineBrush: Brush;
    get u7(): Brush;
    set u7(a: Brush);
    static readonly up: DependencyProperty;
    trendLineThickness: number;
    va: PenLineCap;
    u9: DoubleCollection;
    trendLinePeriod: number;
    t2: number;
    protected k5(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    tw: PriceDisplayType;
    protected bq(): SeriesHitTestMode;
    p3(a: Point): Rect;
    private tu;
    ak(a: Point): Rect[];
    ez(a: Point, b: boolean): boolean;
    protected e2(a: Point, b: boolean): boolean;
    protected l9(a: any, b: string, c: any, d: any): void;
    private uo;
    aq(a: Axis): AxisRange;
    ar(a: Rect): AxisRange;
    gg(): number;
    eq(a: any): boolean;
    fd(a: Rect, b: Rect, c: SeriesView): boolean;
    tb(a: CategoryFrame, b: FinancialSeriesView): void;
    k2(a: boolean, b: SeriesView): void;
    protected na(a: Rect, b: Rect): void;
    p9(a: SeriesPlotAreaMarginHorizontalMode, b: SeriesPlotAreaMarginVerticalMode): Thickness;
    protected get_c3(): boolean;
    td(a: CategoryFrame, b: FinancialSeriesView): void;
    ge(): number;
    private um;
    private t0;
    private ul;
    h4(a: any, b: Point): any;
    protected m1(): void;
    protected lc(a: any): void;
    u8: Brush;
    pg(): Brush;
    ms(a: Brush, b: Brush): void;
    protected bb(a: LegendItemBadgeShape): LegendItemBadgeShape;
    uc: string;
    t8: string;
    t3: string;
    uh: string;
    ue: string;
    ua: string;
    t5: string;
    uj: string;
    getDataLegendSeriesContextAt(a: number, b: number): any;
    private tx;
    private ty;
    tz: number;
    private un;
    am(a: ValueLayerValueMode): number[];
    pv(a: ValueLayerValueMode): Point;
    pw(a: number[]): Point;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class FinancialPriceSeriesView extends FinancialSeriesView {
    static $t: Type;
    protected b3: FinancialPriceSeries;
    constructor(a: FinancialPriceSeries);
    b6: Pool$1<Path>;
    co(): Path;
    protected b9: List$1<Path>;
    ce(a: Path): void;
    cg(a: Path): void;
    cf(a: Path): void;
    protected by(): FinancialBucketCalculator;
    as(): void;
    private cn;
    private cm;
    private b4;
    get b5(): ITrendLineManager;
    set b5(a: ITrendLineManager);
    get b7(): boolean;
    ch(): void;
    cb(): void;
    ca(): void;
    ck(): GeometryGroup;
    cj(): GeometryGroup;
    ci(): void;
    protected bb(): void;
    protected bc(): void;
    protected ac(a: number): any;
    private cl;
    protected ab(a: number): any;
    protected a6(a: RenderingContext, b: boolean): void;
    protected a5(a: RenderingContext, b: boolean): void;
    al(a: any): void;
    cc(): void;
    b8: boolean;
    cd(): void;
}
