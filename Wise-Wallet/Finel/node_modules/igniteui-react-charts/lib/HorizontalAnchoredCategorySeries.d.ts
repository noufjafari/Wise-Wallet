import { AnchoredCategorySeries } from "./AnchoredCategorySeries";
import { IHorizontalAnchoredCategorySeriesInteractionManager } from "./IHorizontalAnchoredCategorySeriesInteractionManager";
import { Type, Point } from "igniteui-react-core";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { NumericYAxis } from "./NumericYAxis";
import { NumericAxisBase } from "./NumericAxisBase";
import { CategoryMode } from "./CategoryMode";
import { SeriesPlotAreaMarginHorizontalMode } from "./SeriesPlotAreaMarginHorizontalMode";
import { SeriesPlotAreaMarginVerticalMode } from "./SeriesPlotAreaMarginVerticalMode";
import { Axis } from "./Axis";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { FastItemsSourceEventAction } from "igniteui-react-core";
/**
 * @hidden
 */
export declare abstract class HorizontalAnchoredCategorySeries extends AnchoredCategorySeries {
    static $t: Type;
    private u4;
    get u5(): IHorizontalAnchoredCategorySeriesInteractionManager;
    kz(): void;
    bw(): SeriesPlotAreaMarginHorizontalMode;
    bx(): SeriesPlotAreaMarginVerticalMode;
    xAxis: CategoryAxisBase;
    yAxis: NumericYAxis;
    protected bq(): SeriesHitTestMode;
    rw(): CategoryAxisBase;
    sh(): NumericAxisBase;
    p5(a: Point): Rect;
    private vi;
    protected va(a: Point, b: Point, c: boolean): boolean;
    ah(a: Point): Point[][];
    ai(a: Point): Point[][];
    ez(a: Point, b: boolean): boolean;
    getOffsetValue(): number;
    getCategoryWidth(): number;
    gn(a: Point, b: boolean, c: boolean): number;
    ho(a: Point, b: boolean): number;
    hm(a: Point, b: boolean): number;
    f7(a: Point, b: number, c: Axis, d: ScalerParams, e: number): number;
    ps(a: Point, b: boolean, c: boolean): Point;
    fetchXAxis(): Axis;
    fetchYAxis(): Axis;
    uf(a: Axis): void;
    ug(a: Axis): void;
    sr(): boolean;
    protected u0: CategoryAxisBase;
    protected u6: NumericAxisBase;
    ve(a: CategoryAxisBase): void;
    vf(a: NumericYAxis): void;
    rq(a: number, b: number): any[];
    protected l9(a: any, b: string, c: any, d: any): void;
    protected k5(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    u8(a: any): boolean;
    u9(a: any): boolean;
    private u2;
    get u3(): CategoryMode;
    set u3(a: CategoryMode);
    get useHighMarkerFidelity(): boolean;
    static $$p: string[];
}
