/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { Base, INotifyPropertyChanged_$type, BaseError, Type, PropertyChangedEventArgs, Delegate_$type, fromEnum, String_$type, runOn, delegateCombine, EnumUtil, enumGetBox, typeCast, delegateRemove, markType, TypeRegistrar, getInstanceType } from "igniteui-react-core";
import { IDataLegendTarget_$type } from "igniteui-react-core";
import { IToolbarTarget_$type } from "igniteui-react-core";
import { ArrayExtension } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { XamDataChart } from "./XamDataChart";
import { DataSeriesType_$type } from "igniteui-react-core";
import { MarkerType_$type } from "./MarkerType";
import { Color } from "igniteui-react-core";
import { ColorUtil } from "igniteui-react-core";
import { DVContainer } from "igniteui-react-core";
import { DataToolTipLayerGroupingMode_$type } from "igniteui-react-core";
import { DataTooltipGroupedPositionX_$type } from "igniteui-react-core";
import { DataTooltipGroupedPositionY_$type } from "igniteui-react-core";
import { DataAbbreviationMode_$type } from "igniteui-react-core";
import { DataLegendValueMode_$type } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { DataLegendHeaderDateMode_$type } from "igniteui-react-core";
import { DataLegendHeaderTimeMode_$type } from "igniteui-react-core";
import { DataLegendSummaryType_$type } from "igniteui-react-core";
import { LegendItemBadgeShape_$type } from "igniteui-react-core";
import { DataLegendUnitsMode_$type } from "igniteui-react-core";
import { DataLegendLabelMode_$type } from "igniteui-react-core";
import { ChartSortDescriptionCollection } from "./ChartSortDescriptionCollection";
import { FilterExpressionCollection } from "igniteui-react-core";
import { ChartSummaryDescriptionCollection } from "./ChartSummaryDescriptionCollection";
import { SortGroupParser } from "igniteui-react-core";
import { SummaryParser } from "igniteui-react-core";
import { BrushCollection } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { HorizontalAlignment_$type } from "igniteui-react-core";
import { UnknownValuePlotting_$type } from "igniteui-react-core";
import { SeriesOutlineMode_$type } from "./SeriesOutlineMode";
import { MarkerOutlineMode_$type } from "./MarkerOutlineMode";
import { MarkerFillMode_$type } from "./MarkerFillMode";
import { MarkerAutomaticBehavior_$type } from "./MarkerAutomaticBehavior";
import { TrendLineType_$type } from "igniteui-react-core";
import { ComputedPlotAreaMarginMode_$type } from "./ComputedPlotAreaMarginMode";
import { SeriesPlotAreaMarginHorizontalMode_$type } from "./SeriesPlotAreaMarginHorizontalMode";
import { SeriesPlotAreaMarginVerticalMode_$type } from "./SeriesPlotAreaMarginVerticalMode";
import { SeriesHighlightingMode_$type } from "./SeriesHighlightingMode";
import { SeriesHighlightingBehavior_$type } from "./SeriesHighlightingBehavior";
import { LegendHighlightingMode_$type } from "./LegendHighlightingMode";
import { LegendItemBadgeMode_$type } from "igniteui-react-core";
import { ToolTipType_$type } from "./ToolTipType";
import { CrosshairsDisplayMode_$type } from "./CrosshairsDisplayMode";
import { SeriesViewerScrollbarMode_$type } from "./SeriesViewerScrollbarMode";
import { SeriesViewerHorizontalScrollbarPosition_$type } from "./SeriesViewerHorizontalScrollbarPosition";
import { SeriesViewerVerticalScrollbarPosition_$type } from "./SeriesViewerVerticalScrollbarPosition";
import { Defaults } from "./Defaults";
import { Series } from "./Series";
import { ICommandStateChangedListener_$type } from "igniteui-react-core";
import { DeviceUtils } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { DataSeriesAdapter } from "igniteui-react-core";
import { ChartSortDescription } from "./ChartSortDescription";
import { ChartSummaryDescription } from "./ChartSummaryDescription";
import { ObservableCollection$1 } from "igniteui-react-core";
import { Random } from "igniteui-react-core";
import { ValueLayerValueMode_$type } from "./ValueLayerValueMode";
import { ObservableColorCollection } from "igniteui-react-core";
import { BrushCollectionUtil } from "igniteui-react-core";
import { ChartSeriesEventArgs } from "./ChartSeriesEventArgs";
import { DomainChartSeriesPointerEventArgs } from "./DomainChartSeriesPointerEventArgs";
import { BrushUtil } from "igniteui-react-core";
import { IUnknownValuePlotting_$type } from "igniteui-react-core";
import { ITrendLineSeries_$type } from "./ITrendLineSeries";
import { isNaN_ } from "igniteui-react-core";
import { stringIsNullOrEmpty, stringEmpty, stringStartsWith } from "igniteui-react-core";
/**
 * @hidden
 */
var DomainChart = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DomainChart, _super);
    function DomainChart() {
        var _this = _super.call(this) || this;
        _this.j8 = null;
        _this.j6 = null;
        _this.gl = null;
        _this.hd = NaN;
        _this.j5 = null;
        _this.hq = 0;
        _this.hr = 0;
        _this.hs = 0;
        _this.hp = 0;
        _this.hl = 0;
        _this.hn = 0;
        _this.hm = 0;
        _this.hk = 0;
        _this.uf = null;
        _this.ug = null;
        _this.ha = NaN;
        _this.ht = NaN;
        _this.hj = NaN;
        _this.gx = NaN;
        _this.jt = 0;
        _this.d2 = null;
        _this.jk = null;
        _this.ga = false;
        _this.b9 = null;
        _this.k2 = null;
        _this.k4 = null;
        _this.dv = null;
        _this.gp = null;
        _this.propertyChanged = null;
        _this.js = 0;
        _this.f3 = false;
        _this.b2 = null;
        _this.gk = null;
        _this.b6 = null;
        _this.e4 = false;
        _this.b7 = null;
        _this.gi = new List$1(ICommandStateChangedListener_$type, 0);
        _this.bu = 0;
        _this.g1 = NaN;
        _this.g2 = NaN;
        _this.gz = DeviceUtils.g(10);
        _this.g0 = DeviceUtils.g(10);
        _this.bq = 0;
        _this.bs = 0;
        _this.ex = true;
        _this.e = null;
        _this.b = null;
        _this.d = null;
        _this.a = null;
        _this.ba = 0;
        _this.jo = -1;
        _this.jp = -1;
        _this.bo = 0;
        _this.ku = stringEmpty();
        _this.ey = true;
        _this.kv = null;
        _this.f = null;
        _this.vn = new Thickness(0, DeviceUtils.g(5));
        _this.ez = true;
        _this.kw = "N/A";
        _this.e0 = false;
        _this.vo = new Thickness(1, DeviceUtils.g(2), DeviceUtils.g(0), DeviceUtils.g(2), DeviceUtils.g(0));
        _this.ua = null;
        _this.ec = null;
        _this.ko = null;
        _this.c = null;
        _this.kn = stringEmpty();
        _this.be = 0;
        _this.bg = 0;
        _this.kp = null;
        _this.t2 = null;
        _this.vh = new Thickness(1, DeviceUtils.g(2), DeviceUtils.g(0), DeviceUtils.g(0), DeviceUtils.g(0));
        _this.vg = new Thickness(0, DeviceUtils.g(5));
        _this.ew = true;
        _this.d4 = null;
        _this.t5 = null;
        _this.d7 = null;
        _this.bk = 0;
        _this.kr = null;
        _this.vk = new Thickness(1, DeviceUtils.g(2), DeviceUtils.g(0), DeviceUtils.g(0), DeviceUtils.g(0));
        _this.vj = new Thickness(0, DeviceUtils.g(5));
        _this.t7 = null;
        _this.d9 = null;
        _this.kq = null;
        _this.t4 = null;
        _this.d6 = null;
        _this.ks = null;
        _this.t6 = null;
        _this.d8 = null;
        _this.vf = new Thickness(0, DeviceUtils.g(0));
        _this.cf = 0;
        _this.bm = 0;
        _this.kt = null;
        _this.t9 = null;
        _this.vm = new Thickness(0, DeviceUtils.g(0));
        _this.eb = null;
        _this.vl = new Thickness(0, DeviceUtils.g(0));
        _this.t8 = null;
        _this.ea = null;
        _this.bi = 0;
        _this.t3 = null;
        _this.vi = new Thickness(1, DeviceUtils.g(8), DeviceUtils.g(0), DeviceUtils.g(0), DeviceUtils.g(0));
        _this.d5 = null;
        _this.seriesAdded = null;
        _this.seriesRemoved = null;
        _this.seriesPointerEnter = null;
        _this.seriesPointerLeave = null;
        _this.seriesPointerMove = null;
        _this.seriesPointerDown = null;
        _this.seriesPointerUp = null;
        _this.calloutStyleUpdating = null;
        _this.calloutRenderStyleUpdating = null;
        _this.go = null;
        _this.en = null;
        _this.eq = false;
        _this.gh = new Dictionary$2(String_$type, Base.$, 0);
        _this.gj = new List$1(String_$type, 0);
        _this.au = null;
        _this.aq = null;
        _this.ap = null;
        _this.dx = null;
        _this.a2 = null;
        _this.d0 = null;
        _this.d1 = null;
        _this.fc = true;
        _this.fb = true;
        _this.fd = true;
        _this.fa = true;
        _this.at = null;
        _this.as = null;
        _this.ar = null;
        _this.dy = null;
        _this.a1 = null;
        _this.kz = null;
        _this.kx = null;
        _this.ky = null;
        _this.k0 = null;
        _this.j4 = null;
        _this.j3 = null;
        _this.h = null;
        _this.g = null;
        _this.t = null;
        _this.w = null;
        _this.r = null;
        _this.s = null;
        _this.b4 = null;
        _this.e3 = true;
        _this.e6 = true;
        _this.e8 = false;
        _this.fe = false;
        _this.e5 = false;
        _this.vc = new Rect(0, 0, 0, 1, 1);
        _this.k3 = null;
        _this.k1 = null;
        _this.tt = 1;
        _this.ts = 1;
        _this.dr = 0;
        _this.hi = NaN;
        _this.ho = NaN;
        _this.c8 = 0;
        _this.cn = 0;
        _this.cl = 0;
        _this.hb = NaN;
        _this.hc = NaN;
        _this.ct = null;
        _this.cj = 4;
        _this.u = null;
        _this.v = null;
        _this.jr = 400;
        _this.gw = NaN;
        _this.ep = false;
        _this.x = null;
        _this.dp = 0;
        _this.hu = DeviceUtils.g(1.5);
        _this.eo = true;
        _this.hf = NaN;
        _this.hh = NaN;
        _this.hg = NaN;
        _this.he = NaN;
        _this.a5 = 0;
        _this.da = 0;
        _this.dc = 0;
        _this.c6 = 0;
        _this.c4 = 0;
        _this.cb = 0;
        _this.cg = 0;
        _this.cd = 0;
        _this.ju = 7;
        _this.dm = 4;
        _this.a8 = 0;
        _this.ev = false;
        _this.t1 = null;
        _this.gy = NaN;
        _this.t0 = null;
        _this.eu = true;
        _this.tw = null;
        _this.ty = null;
        _this.tx = null;
        _this.tz = null;
        _this.jm = -1;
        _this.jn = -1;
        _this.e7 = false;
        _this.e9 = true;
        _this.e1 = false;
        _this.ub = null;
        _this.uc = null;
        _this.jq = -1;
        _this.er = false;
        _this.et = false;
        _this.es = false;
        _this.gt = null;
        _this.aj = null;
        _this.kl = null;
        _this.km = null;
        _this.kk = "CalloutLabel";
        _this.kj = "CalloutContent";
        _this.dt = null;
        _this.y = null;
        _this.hv = NaN;
        _this.dg = 0;
        _this.dh = 0;
        _this.de = 0;
        _this.dk = 0;
        _this.ud = null;
        _this.ue = null;
        _this.g7 = NaN;
        _this.g6 = NaN;
        _this.g3 = NaN;
        _this.g4 = NaN;
        _this.g5 = NaN;
        _this.g9 = NaN;
        _this.g8 = NaN;
        _this.e2 = true;
        _this.uh = null;
        _this.ui = null;
        _this.hz = NaN;
        _this.hy = NaN;
        _this.hw = NaN;
        _this.h2 = NaN;
        _this.hx = NaN;
        _this.h1 = NaN;
        _this.h0 = NaN;
        _this.ff = true;
        _this.h4 = NaN;
        _this.h3 = NaN;
        _this.h6 = NaN;
        _this.h5 = NaN;
        _this.go = new List$1(Delegate_$type, 0);
        _this.r7();
        _this.rn();
        return _this;
    }
    DomainChart.prototype.provideContainer = function (a) {
        if (a == null) {
            this.sn(function (b) {
                b.destroy();
                b.provideContainer(null);
            });
            return;
        }
        var b = this.j8;
        this.j8 = a;
        if (this.en != null && this.j8 != null && b == null) {
            this.j8.setTimeout(this.en, 0);
            this.en = null;
        }
        var c = ((function () {
            var $ret = new XamDataChart();
            $ret.ef = true;
            return $ret;
        })());
        c.provideContainer(a);
        this.dataChart = c;
        this.r8();
    };
    DomainChart.prototype.destroy = function () {
        this.provideContainer(null);
    };
    DomainChart.prototype.r8 = function () {
        if (this.dataChart == null) {
            return;
        }
        var a = this.dataChart.cu.j.e();
        this.ab = a.a;
        this.af = a.f;
        this.ad = a.b;
        this.ae = a.c;
        this.ah = a.g;
        this.h9 = Defaults.j;
        this.r9();
    };
    DomainChart.prototype.r9 = function () {
    };
    DomainChart.prototype.r5 = function (a) {
        if (a == null) {
            return;
        }
        a.ha = this.i5;
        a.g8 = this.i3;
        a.g9 = this.i4;
        a.g7 = this.i2;
        a.sw = this.u8;
        a.g4 = this.iy;
        a.g6 = this.i0;
        a.g5 = this.iz;
        a.g3 = this.ix;
        a.sv = this.u7;
        if (!isNaN_(this.iq)) {
            a.gy = this.iq;
        }
    };
    DomainChart.prototype.r2 = function () {
    };
    DomainChart.prototype.sb = function (a, b) {
        a.hr = this.j1;
        a.cg = this.d3;
    };
    DomainChart.prototype.sy = function (a, b, c) {
        var _this = this;
        switch (a) {
            case "TitleTopMargin":
                if (this.dataChart != null) {
                    this.dataChart.ha = this.i5;
                }
                break;
            case "TitleLeftMargin":
                if (this.dataChart != null) {
                    this.dataChart.g8 = this.i3;
                }
                break;
            case "PixelScalingRatio":
                if (this.dataChart != null) {
                    this.sn(function (d) { return d.gy = _this.iq; });
                }
                break;
            case "TitleRightMargin":
                if (this.dataChart != null) {
                    this.dataChart.g9 = this.i4;
                }
                break;
            case "TitleBottomMargin":
                if (this.dataChart != null) {
                    this.dataChart.g7 = this.i2;
                }
                break;
            case "TitleTextColor":
                if (this.dataChart != null) {
                    this.dataChart.sw = this.u8;
                }
                break;
            case "SubtitleLeftMargin":
                if (this.dataChart != null) {
                    this.dataChart.g4 = this.iy;
                }
                break;
            case "SubtitleTopMargin":
                if (this.dataChart != null) {
                    this.dataChart.g6 = this.i0;
                }
                break;
            case "SubtitleRightMargin":
                if (this.dataChart != null) {
                    this.dataChart.g5 = this.iz;
                }
                break;
            case "SubtitleBottomMargin":
                if (this.dataChart != null) {
                    this.dataChart.g3 = this.ix;
                }
                break;
            case "SubtitleTextColor":
                if (this.dataChart != null) {
                    this.dataChart.sv = this.u7;
                }
                break;
            case "LeftMargin":
                if (this.dataChart != null) {
                    this.dataChart.gx = this.im;
                }
                break;
            case "TopMargin":
                if (this.dataChart != null) {
                    this.dataChart.hb = this.i6;
                }
                break;
            case "RightMargin":
                if (this.dataChart != null) {
                    this.dataChart.g2 = this.iw;
                }
                break;
            case "BottomMargin":
                if (this.dataChart != null) {
                    this.dataChart.gk = this.h8;
                }
                break;
            case "TransitionDuration":
                this.ry(function (d) { return d.hr = _this.j1; });
                break;
            case "TransitionEasingFunction":
                this.ry(function (d) { return d.cg = _this.d3; });
                break;
        }
    };
    Object.defineProperty(DomainChart.prototype, "tooltipTemplate", {
        get: function () {
            return ArrayExtension.getModulus$1(Base.$, this.tooltipTemplates, 0);
        },
        set: function (a) {
            this.tooltipTemplates = a == null ? null : new List$1(Base.$, 1, [a]);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tooltipTemplates", {
        get: function () {
            return this.gl;
        },
        set: function (a) {
            var b = this.tooltipTemplates;
            if (a != b) {
                this.gl = a;
                this.sv("TooltipTemplates", b, this.tooltipTemplates);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "iq", {
        get: function () {
            return this.hd;
        },
        set: function (a) {
            var b = this.hd;
            if (a != b) {
                this.hd = a;
                this.sv("PixelScalingRatio", b, this.iq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "toolTip", {
        get: function () {
            return this.j5;
        },
        set: function (a) {
            var b = this.toolTip;
            if (b != a) {
                this.j5 = a;
                this.sv("ToolTip", b, this.toolTip);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i3", {
        get: function () {
            return this.hq;
        },
        set: function (a) {
            var b = this.i3;
            if (a != b) {
                this.hq = a;
                this.sv("TitleLeftMargin", b, this.i3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i4", {
        get: function () {
            return this.hr;
        },
        set: function (a) {
            var b = this.i4;
            if (a != b) {
                this.hr = a;
                this.sv("TitleRightMargin", b, this.i4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i5", {
        get: function () {
            return this.hs;
        },
        set: function (a) {
            var b = this.i5;
            if (a != b) {
                this.hs = a;
                this.sv("TitleTopMargin", b, this.i5);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i2", {
        get: function () {
            return this.hp;
        },
        set: function (a) {
            var b = this.i2;
            if (a != b) {
                this.hp = a;
                this.sv("TitleBottomMargin", b, this.i2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "iy", {
        get: function () {
            return this.hl;
        },
        set: function (a) {
            var b = this.iy;
            if (a != b) {
                this.hl = a;
                this.sv("SubtitleLeftMargin", b, this.iy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i0", {
        get: function () {
            return this.hn;
        },
        set: function (a) {
            var b = this.i0;
            if (a != b) {
                this.hn = a;
                this.sv("SubtitleTopMargin", b, this.i0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "iz", {
        get: function () {
            return this.hm;
        },
        set: function (a) {
            var b = this.iz;
            if (a != b) {
                this.hm = a;
                this.sv("SubtitleRightMargin", b, this.iz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ix", {
        get: function () {
            return this.hk;
        },
        set: function (a) {
            var b = this.ix;
            if (a != b) {
                this.hk = a;
                this.sv("SubtitleBottomMargin", b, this.ix);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "u7", {
        get: function () {
            return this.uf;
        },
        set: function (a) {
            var b = this.u7;
            if (a != b) {
                this.uf = a;
                this.sv("SubtitleTextColor", b, this.u7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "u8", {
        get: function () {
            return this.ug;
        },
        set: function (a) {
            var b = this.u8;
            if (a != b) {
                this.ug = a;
                this.sv("TitleTextColor", b, this.u8);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_im = function () {
        return this.ha;
    };
    DomainChart.prototype.set_im = function (a) {
        var b = this.im;
        if (a != b) {
            this.ha = a;
            this.sv("LeftMargin", b, this.im);
        }
    };
    Object.defineProperty(DomainChart.prototype, "im", {
        get: function () {
            return this.get_im();
        },
        set: function (a) {
            this.set_im(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i6", {
        get: function () {
            return this.ht;
        },
        set: function (a) {
            var b = this.i6;
            if (a != b) {
                this.ht = a;
                this.sv("TopMargin", b, this.i6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "iw", {
        get: function () {
            return this.hj;
        },
        set: function (a) {
            var b = this.iw;
            if (a != b) {
                this.hj = a;
                this.sv("RightMargin", b, this.iw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h8", {
        get: function () {
            return this.gx;
        },
        set: function (a) {
            var b = this.h8;
            if (a != b) {
                this.gx = a;
                this.sv("BottomMargin", b, this.h8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j1", {
        get: function () {
            return this.jt;
        },
        set: function (a) {
            var b = this.j1;
            if (a != b) {
                this.jt = a;
                this.sv("TransitionDuration", b, this.j1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "d3", {
        get: function () {
            return this.d2;
        },
        set: function (a) {
            var b = this.d3;
            if (a != b) {
                this.d2 = a;
                this.sv("TransitionEasingFunction", b, this.d3);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.r6 = function (a) {
        if (this.dataChart == null) {
            return;
        }
        a.ko = this.qi;
        a.kc = this.p7;
    };
    DomainChart.prototype.sc = function (a, b) {
        this.sd(a, b);
    };
    DomainChart.prototype.r3 = function () {
    };
    DomainChart.prototype.sd = function (a, b) {
        if (a == null) {
            return;
        }
        if (this.dn == 3) {
            return;
        }
        var toolTipTemplate_ = ArrayExtension.getModulus$1(Base.$, this.tooltipTemplates, b);
        if (toolTipTemplate_ == null) {
            a.ev = true;
        }
        else {
            var series_ = a;
            a.ev = false;
            series_.externalObject.tooltipTemplate = toolTipTemplate_;
        }
    };
    DomainChart.prototype.to = function (a, b, c) {
    };
    DomainChart.prototype.ka = function (a) {
        return a;
        return null;
    };
    DomainChart.prototype.jl = function (a) {
        return null;
    };
    DomainChart.prototype.sz = function (a, b, c) {
        var _this = this;
        switch (a) {
            case "SubtitleTextStyle":
                if (this.dataChart != null) {
                    this.dataChart.kc = this.p7;
                }
                break;
            case "TitleTextStyle":
                if (this.dataChart != null) {
                    this.dataChart.ko = this.qi;
                }
                break;
            case "TooltipTemplate":
                if (this.ga) {
                    return;
                }
                this.ga = true;
                this.tooltipTemplate = this.ka(this.tooltipTemplate);
                this.ga = false;
                if (this.dataChart != null) {
                    this.dataChart.h1 = this.tooltipTemplate;
                }
                this.toolTip = this.tooltipTemplate;
                break;
            case "ToolTip":
                this.rz(function (d, e) { return _this.sd(d, e); });
                break;
            case "TooltipTemplates":
                if (this.tooltipTemplates == null) {
                    break;
                }
                this.ga = true;
                this.rz(function (d, e) {
                    var f = _this.ka(ArrayExtension.getModulus$1(Base.$, _this.tooltipTemplates, e));
                    var series_ = d;
                    var templ_ = f;
                    series_.externalObject.tooltipTemplate = templ_;
                });
                this.ga = false;
                break;
        }
    };
    Object.defineProperty(DomainChart.prototype, "ca", {
        get: function () {
            return this.b9;
        },
        set: function (a) {
            var b = this.ca;
            if (a != b) {
                this.b9 = a;
                this.sv("Widget", b, this.ca);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "p7", {
        get: function () {
            return this.k2;
        },
        set: function (a) {
            var b = this.p7;
            if (a != b) {
                this.k2 = a;
                this.sv("SubtitleTextStyle", b, this.p7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "qi", {
        get: function () {
            return this.k4;
        },
        set: function (a) {
            var b = this.qi;
            if (a != b) {
                this.k4 = a;
                this.sv("TitleTextStyle", b, this.qi);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dataChart", {
        get: function () {
            return this.dv;
        },
        set: function (a) {
            var b = this.dataChart;
            if (b != a) {
                this.dv = a;
                this.sv("DataChart", b, this.dataChart);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.onDetachedFromUI = function () {
        this.sn(function (a) { return a.onDetachedFromUI(); });
    };
    DomainChart.prototype.onAttachedToUI = function () {
        this.sn(function (a) { return a.onAttachedToUI(); });
    };
    DomainChart.prototype.r7 = function () {
        var e_1, _a, e_2, _b;
        this.gp = new List$1(MarkerType_$type, 0);
        this.bd = new DataSeriesAdapter().e;
        this.au = new ChartSortDescriptionCollection();
        this.aq = new ChartSortDescriptionCollection();
        this.ap = new ChartSortDescriptionCollection();
        this.a2 = new ChartSummaryDescriptionCollection();
        this.dx = new FilterExpressionCollection();
        this.a0.e = this.bd.sortDescriptions;
        this.av.e = this.bd.groupDescriptions;
        this.dz.syncTarget = this.bd.filterExpressions;
        this.a4.e = this.bd.summaryDescriptions;
        this.aw.e = this.bd.postSortDescriptions;
        this.d0 = new SortGroupParser();
        this.d1 = new SummaryParser();
        this.at = ((function () {
            var $ret = new ChartSortDescriptionCollection();
            $ret.i = true;
            return $ret;
        })());
        this.as = ((function () {
            var $ret = new ChartSortDescriptionCollection();
            $ret.i = true;
            return $ret;
        })());
        this.ar = ((function () {
            var $ret = new ChartSortDescriptionCollection();
            $ret.i = true;
            return $ret;
        })());
        this.a1 = ((function () {
            var $ret = new ChartSummaryDescriptionCollection();
            $ret.i = true;
            return $ret;
        })());
        this.dy = ((function () {
            var $ret = new FilterExpressionCollection();
            $ret.shouldDetachOnTargetChange = true;
            return $ret;
        })());
        if (this.fc) {
            if (this.a0.j.count == 0) {
                this.at.e = this.bd.sortDescriptions;
            }
            if (this.aw.j.count == 0) {
                this.as.e = this.bd.postSortDescriptions;
            }
            this.fc = false;
        }
        if (this.fb) {
            if (this.av.j.count == 0) {
                this.ar.e = this.bd.groupDescriptions;
            }
            this.fb = false;
        }
        if (this.fd) {
            if (this.a4.j.count == 0) {
                this.a1.e = this.bd.summaryDescriptions;
            }
            this.fd = false;
        }
        if (this.q != null) {
            this.bd.includedProperties = this.q;
        }
        if (this.o != null) {
            this.bd.excludedProperties = this.o;
        }
        this.bd.supportedSeriesTypes = this.gr.toArray();
        this.bd.rules.clear();
        try {
            for (var _c = __values(fromEnum(this.gq)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var a = _d.value;
                this.bd.rules.add(a);
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        var b = new List$1(String_$type, 0);
        try {
            for (var _e = __values(fromEnum(this.bd.rules)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var c = _f.value;
                b.add(getInstanceType(c).typeName);
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
        var d = this.bd.dataSeries;
        d.collectionChanged = delegateCombine(d.collectionChanged, runOn(this, this.sq));
    };
    DomainChart.prototype.f5 = function (a) {
        return a != 24 && this.gr.contains(a);
    };
    DomainChart.prototype.notifyResized = function () {
        this.sn(function (a) { return a.notifyContainerResized(); });
    };
    DomainChart.prototype.sl = function () {
        this.sn(function (a) {
            for (var b = 0; b < a.series.count; b++) {
                a.series._inner[b].lw();
            }
        });
    };
    DomainChart.prototype.rs = function () {
        if (this.dataChart == null) {
            return;
        }
        if (this.f3) {
            this.th();
        }
        this.dataChart.flush();
    };
    DomainChart.prototype.r0 = function () {
        if (this.dataChart == null) {
            return;
        }
        this.dataChart.l1();
    };
    DomainChart.prototype.s5 = function (a) {
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
    };
    DomainChart.prototype.ru = function (a) {
        this.rv(function (b, c) { return a(b); });
    };
    DomainChart.prototype.rv = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            a(this.dataChart.series._inner[b], b);
        }
    };
    DomainChart.prototype.ry = function (a) {
        this.rz(function (b, c) { return a(b); });
    };
    DomainChart.prototype.rz = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (!c.dc) {
                a(c, b);
            }
        }
    };
    DomainChart.prototype.rw = function (a) {
        this.rx(function (b, c) { return a(b); });
    };
    DomainChart.prototype.rx = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (c.dd) {
                a(c, b);
            }
        }
    };
    DomainChart.prototype.te = function () {
        this.ru(function (a) { return a.mq(); });
    };
    DomainChart.prototype.sn = function (a) {
        this.so(a, true);
    };
    DomainChart.prototype.so = function (a, b) {
        this.sp(a, b, null);
    };
    DomainChart.prototype.sp = function (a, b, c) {
        if (this.dataChart == null) {
            return;
        }
        a(this.dataChart);
    };
    DomainChart.prototype.f7 = function (a) {
        if (!this.f5(a.suggestedSeries)) {
            return false;
        }
        var b = a.data;
        if (b == null) {
            return false;
        }
        return true;
    };
    DomainChart.prototype.fy = function () {
        if (this.dataChart == null) {
            return false;
        }
        return true;
    };
    DomainChart.prototype.oe = function (a) {
        var b = "series_" + (this.dataChart.series.count + 1) + "_" + EnumUtil.getName(DataSeriesType_$type, a.suggestedSeries);
        return b;
    };
    DomainChart.prototype.of = function (a, b) {
        if (this.f1 && this.gf) {
            var c = "";
            var d = 5 + Math.round(DomainChart.kh.nextDouble() * 4);
            for (var e = 0; e < d; e++) {
                c = c + "\u2588";
            }
            return c;
        }
        if (stringIsNullOrEmpty(a.title)) {
            var f = EnumUtil.getName(DataSeriesType_$type, b);
            return f + (this.dataChart.series.count + 1);
        }
        else {
            return a.title;
        }
    };
    DomainChart.prototype.od = function () {
        return stringEmpty();
    };
    DomainChart.prototype.th = function () {
        var e_3, _a, e_4, _b;
        if (this.dataChart == null) {
            return;
        }
        this.f3 = false;
        this.tj();
        if (this.actualItemsSource == null) {
            return;
        }
        var a = new List$1(MarkerType_$type, 0);
        try {
            for (var _c = __values(fromEnum(this.bd.dataSeries)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var b = _d.value;
                a.add(this.cp(b.suggestedMarker));
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
        this.gp = a;
        var c = 0;
        try {
            for (var _e = __values(fromEnum(this.bd.dataSeries)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var d = _f.value;
                if (!this.f7(d)) {
                    continue;
                }
                if (d.index < 0) {
                    d.index = c;
                }
                this.tf(d);
                this.tg(d);
                c++;
            }
        }
        catch (e_4_1) {
            e_4 = { error: e_4_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_4)
                    throw e_4.error;
            }
        }
        this.tp();
        this.rv(runOn(this, this.sa));
    };
    DomainChart.prototype.c3 = function (seriesType_) {
        return (this.externalObject.createSeries(seriesType_).i);
    };
    DomainChart.prototype.cv = function () {
        return this.c3(28);
    };
    DomainChart.prototype.cx = function () {
        return this.c3(27);
    };
    DomainChart.prototype.cz = function () {
        return this.c3(29);
    };
    DomainChart.prototype.c0 = function () {
        return this.c3(25);
    };
    DomainChart.prototype.cw = function () {
        return this.c3(26);
    };
    DomainChart.prototype.cy = function () {
        return this.c3(32);
    };
    DomainChart.prototype.c2 = function () {
        return this.c3(33);
    };
    Object.defineProperty(DomainChart.prototype, "b3", {
        get: function () {
            if (TypeRegistrar.isRegistered("AnnotationLayerProxy")) {
                return TypeRegistrar.create("AnnotationLayerProxy");
            }
            else {
                throw new BaseError(1, "annotation layer module is not loaded, but is required.");
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fu", {
        get: function () {
            return (TypeRegistrar.isRegistered("AnnotationLayerProxy"));
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.fw = function (a) {
        if (!this.fu) {
            return false;
        }
        return this.b3.matchesType(a);
    };
    DomainChart.prototype.tp = function () {
        var a = this.gn("", true);
        if (a != null) {
            for (var b = 0; b < a.count; b++) {
                this.dataChart.series.add(a._inner[b]);
            }
        }
    };
    DomainChart.prototype.fz = function () {
        return this.a9 == 0 || this.a9 == 4 || this.a9 == 2;
    };
    DomainChart.prototype.f0 = function () {
        return this.a9 == 0 || this.a9 == 4 || this.a9 == 3;
    };
    DomainChart.prototype.get_fx = function () {
        return this.fj;
    };
    Object.defineProperty(DomainChart.prototype, "fx", {
        get: function () {
            return this.get_fx();
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.gn = function (a, b) {
        var e_5, _a, e_6, _b;
        if (!this.fu) {
            return null;
        }
        var c = new List$1(Series.$, 0);
        if (b) {
            var d = 1;
            if (this.et) {
                if (this.gt == null) {
                    if (this.kl != null || this.km != null || this.kk != null || this.kj != null) {
                        try {
                            for (var _c = __values(fromEnum(this.dataChart.series)), _d = _c.next(); !_d.done; _d = _c.next()) {
                                var e = _d.value;
                                var f = this.cv();
                                this.b3.setTargetSeries(f, e);
                                this.b3.setCollisionChannel(f, "MainChartCollisionChannel");
                                this.tn(f, e, this.bd.dataSeries._inner[d - 1]);
                                f.name = a + getInstanceType(f).typeName + d.toString();
                                c.add(f);
                                d++;
                            }
                        }
                        catch (e_5_1) {
                            e_5 = { error: e_5_1 };
                        }
                        finally {
                            try {
                                if (_d && !_d.done && (_a = _c.return))
                                    _a.call(_c);
                            }
                            finally {
                                if (e_5)
                                    throw e_5.error;
                            }
                        }
                        ;
                    }
                }
                else {
                    var g = this.cv();
                    this.tn(g, null, this.bd.dataSeries._inner[d - 1]);
                    g.name = a + getInstanceType(g).typeName + d.toString();
                    if (this.et && this.er) {
                        this.b3.setCollisionChannel(g, "MainChartCollisionChannel");
                    }
                    c.add(g);
                }
            }
            if (this.er) {
                var h = this.cv();
                this.rm(h, this.ge);
                h.name = a + getInstanceType(h).typeName + d.toString();
                if (this.et && this.er) {
                    this.b3.setCollisionChannel(h, "MainChartCollisionChannel");
                }
                c.add(h);
            }
        }
        switch (this.a8) {
            case 0:
            case 4:
            case 3:
            case 2:
                {
                    var i = this.cx();
                    this.b3.setCrosshairThickness(i, this.gy);
                    this.b3.setCrosshairUseInterpolation(i, !this.ev);
                    this.b3.setCrosshairHorizontalLineVisibility(i, this.fz() ? 0 : 1);
                    this.b3.setCrosshairHorizontalLineStroke(i, this.t0);
                    this.b3.setCrosshairVerticalLineVisibility(i, this.f0() ? 0 : 1);
                    this.b3.setCrosshairVerticalLineStroke(i, this.t1);
                    this.b3.setCrosshairOnAxesEnabled(i, this.eu);
                    this.b3.setCrosshairXAxisBackground(i, this.tw);
                    this.b3.setCrosshairXAxisForeground(i, this.tx);
                    this.b3.setCrosshairYAxisBackground(i, this.ty);
                    this.b3.setCrosshairYAxisForeground(i, this.tz);
                    this.b3.setCrosshairXAxisPrecision(i, this.jm);
                    this.b3.setCrosshairYAxisPrecision(i, this.jn);
                    c.add(i);
                    break;
                }
            case 1:
                {
                    break;
                }
        }
        if (this.e1) {
            var j = this.cz();
            this.b3.setFinalValueBackground(j, this.ub);
            this.b3.setFinalValueForeground(j, this.uc);
            this.b3.setFinalValuePrecision(j, this.jq);
            c.add(j);
        }
        if (b) {
            switch (this.dm) {
                case 1:
                    {
                        var k = this.c0();
                        c.add(k);
                        break;
                    }
                case 2:
                    {
                        var l = this.cw();
                        c.add(l);
                        break;
                    }
                case 4:
                    {
                        var m = this.cy();
                        c.add(m);
                        break;
                    }
                case 3:
                    {
                        this.ru(function (n) { return n.ev = false; });
                        break;
                    }
                case 0:
                    {
                        this.ru(function (n) { return n.ev = true; });
                        break;
                    }
            }
        }
        if (this.du != null && this.du.count > 0) {
            for (var n = 0; n < this.du.count; n++) {
                var o = this.c2();
                this.b3.setValueMode(o, this.du._inner[n]);
                this.b3.setValueAxisAnnotationEnabled(o, true);
                if (this.ai != null && n < this.ai.count) {
                    this.b3.setBrush(o, this.ai.item(n));
                }
                c.add(o);
            }
        }
        try {
            for (var _e = __values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var p = _f.value;
                if (stringIsNullOrEmpty(p.name) == false) {
                    continue;
                }
                p.name = a + getInstanceType(p).typeName;
            }
        }
        catch (e_6_1) {
            e_6 = { error: e_6_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_6)
                    throw e_6.error;
            }
        }
        return c;
    };
    DomainChart.prototype.rm = function (a, b) {
        this.b3.setIsAutoCalloutBehaviorEnabled(a, true);
        this.b3.setGreedyCollisionMode(a, true);
        this.b3.setUseDedicatedLanes(a, b);
    };
    DomainChart.prototype.tn = function (a, b, c) {
        a.itemsSource = this.gt != null ? this.gt : b.itemsSource;
        this.b3.setXMemberPath(a, this.kl);
        this.b3.setYMemberPath(a, this.km);
        this.b3.setLabelMemberPath(a, this.kk);
        this.b3.setContentMemberPath(a, this.kj);
        if (this.aj != null) {
            this.b3.setCalloutsAllowedPositions(a, this.aj);
        }
    };
    DomainChart.prototype.tj = function () {
        this.tk(this.dataChart);
    };
    DomainChart.prototype.tk = function (a) {
        var e_7, _a;
        var _this = this;
        if (a != null && a == this.dataChart) {
            this.ti();
        }
        if (a == null || a.series.count == 0) {
            return;
        }
        this.ru(function (b) {
            if (_this.fw(b) && _this.b3.isCalloutLayer(b)) {
                _this.b3.removeCalloutStyleUpdating(b, runOn(_this, _this.s4));
            }
            if (_this.fw(b) && _this.b3.isCalloutLayer(b)) {
                _this.b3.removeCalloutRenderStyleUpdating(b, runOn(_this, _this.s3));
            }
            _this.tc(b);
        });
        try {
            for (var _b = __values(fromEnum(a.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                this.tl(b);
            }
        }
        catch (e_7_1) {
            e_7 = { error: e_7_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_7)
                    throw e_7.error;
            }
        }
        a.series.clear();
    };
    DomainChart.prototype.tl = function (a) {
        a.itemsSource = null;
        a.legend = null;
        a.kz();
    };
    DomainChart.prototype.sq = function (a, b) {
        if (this.dataChart == null) {
            return;
        }
        var c = b.oldItems == null ? "null" : b.oldItems.count.toString();
        var d = b.newItems == null ? "null" : b.newItems.count.toString();
        if (this.f3) {
            return;
        }
        var e = this.s2(runOn(this, this.rq), this.f3);
        this.f3 = e.p1;
    };
    DomainChart.prototype.rq = function () {
        this.th();
    };
    DomainChart.prototype.u0 = function (a) {
        return ArrayExtension.getModulus$1(Brush.$, this.z, a);
    };
    DomainChart.prototype.u3 = function (a) {
        return ArrayExtension.getModulus$1(Brush.$, this.aa, a);
    };
    DomainChart.prototype.u1 = function (a) {
        return ArrayExtension.getModulus$1(Brush.$, this.ad, a);
    };
    DomainChart.prototype.u2 = function (a) {
        return ArrayExtension.getModulus$1(Brush.$, this.ae, a);
    };
    DomainChart.prototype.vb = function (a) {
        var b = new Color();
        if (this.z == null || this.z.count == 0) {
            b = ArrayExtension.getModulus$1(Color.$, this.gm, a);
        }
        else {
            var c = ArrayExtension.getModulus$1(Brush.$, this.z, a);
            if (c == null) {
                b = ArrayExtension.getModulus$1(Color.$, this.gm, a);
            }
            else {
                b = ColorUtil.q(c);
            }
        }
        return b;
    };
    DomainChart.prototype.em = function (a) {
        var b = new ObservableColorCollection();
        b.add(ColorUtil.v(a, 0.5));
        b.add(a);
        return b;
    };
    DomainChart.prototype.ac = function (a) {
        var b = this.em(a);
        var c = BrushCollectionUtil.a(b);
        return c;
    };
    Object.defineProperty(DomainChart.prototype, "gm", {
        get: function () {
            if (this.gk != null) {
                return this.gk;
            }
            this.gk = new List$1(Color.$, 0);
            this.gk.add(ColorUtil.r("#8BDC5C"));
            this.gk.add(ColorUtil.r("#8961A9"));
            this.gk.add(ColorUtil.r("#6DB1FF"));
            this.gk.add(ColorUtil.r("#82E9D9"));
            this.gk.add(ColorUtil.r("#EA3C63"));
            this.gk.add(ColorUtil.r("#735656"));
            this.gk.add(ColorUtil.r("#F8CE4F"));
            this.gk.add(ColorUtil.r("#A8A8B7"));
            this.gk.add(ColorUtil.r("#E051A9"));
            this.gk.add(ColorUtil.r("#FF903B"));
            return this.gk;
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_ge = function () {
        return false;
    };
    Object.defineProperty(DomainChart.prototype, "ge", {
        get: function () {
            return this.get_ge();
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.j9 = function () {
        if (this.dataChart == null) {
            return null;
        }
        return this.dataChart.vx();
    };
    DomainChart.prototype.se = function (a, b) {
    };
    DomainChart.prototype.sf = function (a, b, c) {
    };
    DomainChart.prototype.cp = function (a) {
        if (a == 2) {
            return 3;
        }
        else if (a == 12) {
            return 13;
        }
        else if (a == 6) {
            return 7;
        }
        else if (a == 8) {
            return 9;
        }
        else if (a == 11) {
            return 12;
        }
        else if (a == 1) {
            return 1;
        }
        else if (a == 7) {
            return 8;
        }
        else if (a == 10) {
            return 11;
        }
        else if (a == 4) {
            return 5;
        }
        else if (a == 5) {
            return 6;
        }
        else if (a == 9) {
            return 10;
        }
        else if (a == 3) {
            return 4;
        }
        else if (a == 13) {
            return 0;
        }
        return 2;
    };
    DomainChart.prototype.attachDataLegend = function (a) {
        this.rl(a);
    };
    DomainChart.prototype.rl = function (a) {
        this.b6 = a;
        if (this.dataChart != null) {
            if (!this.e4) {
                this.e4 = true;
                this.dataChart.attachDataLegend(a);
            }
        }
    };
    DomainChart.prototype.detachDataLegend = function (a) {
        this.rp(a);
    };
    DomainChart.prototype.rp = function (a) {
        if (this.dataChart != null) {
            this.e4 = false;
            this.dataChart.detachDataLegend(a);
        }
        this.b6 = null;
    };
    DomainChart.prototype.getDataLegendSeries = function () {
        return this.p();
    };
    DomainChart.prototype.p = function () {
        if (this.dataChart != null) {
            return this.dataChart.getDataLegendSeries();
        }
        else {
            return new Array(0);
        }
    };
    DomainChart.prototype.tq = function (a) {
        if (this.dataChart != null) {
            this.dataChart.pk(a);
        }
    };
    DomainChart.prototype.tr = function (a) {
        if (this.dataChart != null) {
            this.dataChart.pl(a);
        }
    };
    DomainChart.prototype.tm = function () {
        if (this.dataChart != null) {
            this.dataChart.ou();
        }
    };
    DomainChart.prototype.get_f6 = function () {
        return false;
    };
    Object.defineProperty(DomainChart.prototype, "f6", {
        get: function () {
            return this.get_f6();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "b8", {
        get: function () {
            if (this.b7 == null) {
                this.b7 = DVContainer.instance.createInstance(IDomainChartToolbarProvider_$type, function () { return "Domain chart toolbar module is not loaded."; });
                this.b7.container = this.j8;
                this.b7.commandChanged = runOn(this, this.sw);
            }
            return this.b7;
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.sw = function (a) {
        var e_8, _a;
        try {
            for (var _b = __values(fromEnum(this.gi)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                b.onCommandStateChanged(a.c, a.a, a.b);
            }
        }
        catch (e_8_1) {
            e_8 = { error: e_8_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_8)
                    throw e_8.error;
            }
        }
    };
    DomainChart.prototype.getDesiredToolbarActions = function () {
        if (!this.f6) {
            return null;
        }
        if (this.dataChart != null) {
            var a = this.dataChart.getDesiredToolbarActions();
            return this.b8.getDesiredToolbarActions(this, a);
        }
        return null;
    };
    DomainChart.prototype.onToolCommandExecuting = function (a) {
        if (!this.f6) {
            return;
        }
        this.b8.onToolCommandExecuting(this, a);
    };
    DomainChart.prototype.addCommandAvailabilityListener = function (a) {
    };
    DomainChart.prototype.removeCommandAvailabilityListener = function (a) {
    };
    DomainChart.prototype.addCommandStateChangedListener = function (a) {
        if (!this.gi.contains(a)) {
            this.gi.add(a);
        }
    };
    DomainChart.prototype.removeCommandStateChangedListener = function (a) {
        if (this.gi.contains(a)) {
            this.gi.remove(a);
        }
    };
    DomainChart.prototype.sk = function (source_, a, b, c) {
        if (this.bd != null) {
            this.bd.notifySetItem(source_, a, b, c);
        }
        if (this.dataChart != null) {
            this.dataChart.mj(source_, a, b, c);
        }
    };
    DomainChart.prototype.sg = function (source_) {
        if (this.bd != null) {
            this.bd.notifyClearItems(source_);
        }
        if (this.dataChart != null) {
            this.dataChart.ma(source_);
        }
    };
    DomainChart.prototype.sh = function (source_, a, b) {
        if (this.bd != null) {
            this.bd.notifyInsertItem(source_, a, b);
        }
        if (this.dataChart != null) {
            this.dataChart.mh(source_, a, b);
        }
    };
    DomainChart.prototype.si = function (source_, a, b) {
        if (this.bd != null) {
            this.bd.notifyRemoveItem(source_, a, b);
        }
        if (this.dataChart != null) {
            this.dataChart.mi(source_, a, b);
        }
    };
    Object.defineProperty(DomainChart.prototype, "bv", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            var b = this.bu;
            this.bu = a;
            if (b != this.bu) {
                this.sv("DataToolTipGroupingMode", enumGetBox(DataToolTipLayerGroupingMode_$type, b), enumGetBox(DataToolTipLayerGroupingMode_$type, this.bu));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ic", {
        get: function () {
            return this.g1;
        },
        set: function (a) {
            var b = this.g1;
            this.g1 = a;
            if (b != this.g1) {
                this.sv("DataToolTipPositionOffsetX", b, this.g1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "id", {
        get: function () {
            return this.g2;
        },
        set: function (a) {
            var b = this.g2;
            this.g2 = a;
            if (b != this.g2) {
                this.sv("DataToolTipPositionOffsetY", b, this.g2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ia", {
        get: function () {
            return this.gz;
        },
        set: function (a) {
            var b = this.gz;
            this.gz = a;
            if (b != this.gz) {
                this.sv("DataToolTipDefaultPositionOffsetX", b, this.gz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ib", {
        get: function () {
            return this.g0;
        },
        set: function (a) {
            var b = this.g0;
            this.g0 = a;
            if (b != this.g0) {
                this.sv("DataToolTipDefaultPositionOffsetY", b, this.g0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "br", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            var b = this.bq;
            this.bq = a;
            if (b != this.bq) {
                this.sv("DataToolTipGroupedPositionModeX", enumGetBox(DataTooltipGroupedPositionX_$type, b), enumGetBox(DataTooltipGroupedPositionX_$type, this.bq));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bt", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            var b = this.bs;
            this.bs = a;
            if (b != this.bs) {
                this.sv("DataToolTipGroupedPositionModeY", enumGetBox(DataTooltipGroupedPositionY_$type, b), enumGetBox(DataTooltipGroupedPositionY_$type, this.bs));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fp", {
        get: function () {
            return this.ex;
        },
        set: function (a) {
            var b = this.ex;
            this.ex = a;
            if (b != this.ex) {
                this.sv(DomainChart.mz, b, this.ex);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "m", {
        get: function () {
            return this.e;
        },
        set: function (a) {
            var b = this.e;
            this.e = a;
            if (b != this.e) {
                this.sv("DataToolTipIncludedSeries", b, this.e);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            var b = this.b;
            this.b = a;
            if (b != this.b) {
                this.sv("DataToolTipExcludedSeries", b, this.b);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "l", {
        get: function () {
            return this.d;
        },
        set: function (a) {
            var b = this.d;
            this.d = a;
            if (b != this.d) {
                this.sv("DataToolTipIncludedColumns", b, this.d);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i", {
        get: function () {
            return this.a;
        },
        set: function (a) {
            var b = this.a;
            this.a = a;
            if (b != this.a) {
                this.sv("DataToolTipExcludedColumns", b, this.a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bb", {
        get: function () {
            return this.ba;
        },
        set: function (a) {
            var b = this.ba;
            this.ba = a;
            if (b != this.ba) {
                this.sv("DataToolTipValueFormatAbbreviation", enumGetBox(DataAbbreviationMode_$type, b), enumGetBox(DataAbbreviationMode_$type, this.ba));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jx", {
        get: function () {
            return this.jo;
        },
        set: function (a) {
            var b = this.jo;
            this.jo = a;
            if (b != this.jo) {
                this.sv("DataToolTipValueFormatMaxFractions", b, this.jo);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jy", {
        get: function () {
            return this.jp;
        },
        set: function (a) {
            var b = this.jp;
            this.jp = a;
            if (b != this.jp) {
                this.sv("DataToolTipValueFormatMinFractions", b, this.jp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bp", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            var b = this.bo;
            this.bo = a;
            if (b != this.bo) {
                this.sv("DataToolTipValueFormatMode", enumGetBox(DataLegendValueMode_$type, b), enumGetBox(DataLegendValueMode_$type, this.bo));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "nr", {
        get: function () {
            return this.ku;
        },
        set: function (a) {
            var b = this.ku;
            this.ku = a;
            if (b != this.ku) {
                this.sv("DataToolTipValueFormatCulture", b, this.ku);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fq", {
        get: function () {
            return this.ey;
        },
        set: function (a) {
            var b = this.ey;
            this.ey = a;
            if (b != this.ey) {
                this.sv("DataToolTipValueFormatUseGrouping", b, this.ey);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "nx", {
        get: function () {
            return this.kv;
        },
        set: function (a) {
            var b = this.kv;
            this.kv = a;
            if (b != this.kv) {
                this.sv("DataToolTipValueFormatString", b, this.kv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "n", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            var b = this.f;
            this.f = a;
            if (b != this.f) {
                this.sv("DataToolTipValueFormatSpecifiers", b, this.f);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "vx", {
        get: function () {
            return this.vn;
        },
        set: function (a) {
            var b = this.vn;
            this.vn = a;
            if (b != this.vn) {
                this.sv("DataToolTipValueRowMargin", b, this.vn);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fr", {
        get: function () {
            return this.ez;
        },
        set: function (a) {
            var b = this.ez;
            this.ez = a;
            if (b != this.ez) {
                this.sv("DataToolTipValueRowVisible", b, this.ez);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "n6", {
        get: function () {
            return this.kw;
        },
        set: function (a) {
            var b = this.kw;
            this.kw = a;
            if (b != this.kw) {
                this.sv("DataToolTipValueTextWhenMissingData", b, this.kw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fs", {
        get: function () {
            return this.e0;
        },
        set: function (a) {
            var b = this.e0;
            this.e0 = a;
            if (b != this.e0) {
                this.sv("DataToolTipValueTextUseSeriesColors", b, this.e0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "vy", {
        get: function () {
            return this.vo;
        },
        set: function (a) {
            var b = this.vo;
            this.vo = a;
            if (b != this.vo) {
                this.sv("DataToolTipValueTextMargin", b, this.vo);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ux", {
        get: function () {
            return this.ua;
        },
        set: function (a) {
            var b = this.ua;
            this.ua = a;
            if (b != this.ua) {
                this.sv("DataToolTipValueTextColor", b, this.ua);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "el", {
        get: function () {
            return this.ec;
        },
        set: function (a) {
            var b = this.ec;
            this.ec = a;
            if (b != this.ec) {
                this.sv("DataToolTipValueTextStyle", b, this.ec);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "mh", {
        get: function () {
            return this.ko;
        },
        set: function (a) {
            var b = this.ko;
            this.ko = a;
            if (b != this.ko) {
                this.sv("DataToolTipHeaderFormatString", b, this.ko);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "k", {
        get: function () {
            return this.c;
        },
        set: function (a) {
            var b = this.c;
            this.c = a;
            if (b != this.c) {
                this.sv("DataToolTipHeaderFormatSpecifiers", b, this.c);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "md", {
        get: function () {
            return this.kn;
        },
        set: function (a) {
            var b = this.kn;
            this.kn = a;
            if (b != this.kn) {
                this.sv("DataToolTipHeaderFormatCulture", b, this.kn);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bf", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            var b = this.be;
            this.be = a;
            if (b != this.be) {
                this.sv("DataToolTipHeaderFormatDate", enumGetBox(DataLegendHeaderDateMode_$type, b), enumGetBox(DataLegendHeaderDateMode_$type, this.be));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bh", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            var b = this.bg;
            this.bg = a;
            if (b != this.bg) {
                this.sv("DataToolTipHeaderFormatTime", enumGetBox(DataLegendHeaderTimeMode_$type, b), enumGetBox(DataLegendHeaderTimeMode_$type, this.bg));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "mm", {
        get: function () {
            return this.kp;
        },
        set: function (a) {
            var b = this.kp;
            this.kp = a;
            if (b != this.kp) {
                this.sv("DataToolTipHeaderText", b, this.kp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "up", {
        get: function () {
            return this.t2;
        },
        set: function (a) {
            var b = this.t2;
            this.t2 = a;
            if (b != this.t2) {
                this.sv("DataToolTipHeaderTextColor", b, this.t2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "vr", {
        get: function () {
            return this.vh;
        },
        set: function (a) {
            var b = this.vh;
            this.vh = a;
            if (b != this.vh) {
                this.sv("DataToolTipHeaderTextMargin", b, this.vh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "vq", {
        get: function () {
            return this.vg;
        },
        set: function (a) {
            var b = this.vg;
            this.vg = a;
            if (b != this.vg) {
                this.sv("DataToolTipHeaderRowMargin", b, this.vg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fo", {
        get: function () {
            return this.ew;
        },
        set: function (a) {
            var b = this.ew;
            this.ew = a;
            if (b != this.ew) {
                this.sv("DataToolTipHeaderRowVisible", b, this.ew);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ed", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            var b = this.d4;
            this.d4 = a;
            if (b != this.d4) {
                this.sv("DataToolTipHeaderTextStyle", b, this.d4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "us", {
        get: function () {
            return this.t5;
        },
        set: function (a) {
            var b = this.t5;
            this.t5 = a;
            if (b != this.t5) {
                this.sv("DataToolTipSummaryTitleTextColor", b, this.t5);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "eg", {
        get: function () {
            return this.d7;
        },
        set: function (a) {
            var b = this.d7;
            this.d7 = a;
            if (b != this.d7) {
                this.sv("DataToolTipSummaryTitleTextStyle", b, this.d7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bl", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            var b = this.bk;
            this.bk = a;
            if (b != this.bk) {
                this.sv("DataToolTipSummaryType", enumGetBox(DataLegendSummaryType_$type, b), enumGetBox(DataLegendSummaryType_$type, this.bk));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "m5", {
        get: function () {
            return this.kr;
        },
        set: function (a) {
            var b = this.kr;
            this.kr = a;
            if (b != this.kr) {
                this.sv("DataToolTipSummaryTitleText", b, this.kr);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "vu", {
        get: function () {
            return this.vk;
        },
        set: function (a) {
            var b = this.vk;
            this.vk = a;
            if (b != this.vk) {
                this.sv("DataToolTipSummaryTitleTextMargin", b, this.vk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "vt", {
        get: function () {
            return this.vj;
        },
        set: function (a) {
            var b = this.vj;
            this.vj = a;
            if (b != this.vj) {
                this.sv("DataToolTipSummaryRowMargin", b, this.vj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "uu", {
        get: function () {
            return this.t7;
        },
        set: function (a) {
            var b = this.t7;
            this.t7 = a;
            if (b != this.t7) {
                this.sv("DataToolTipSummaryValueTextColor", b, this.t7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ei", {
        get: function () {
            return this.d9;
        },
        set: function (a) {
            var b = this.d9;
            this.d9 = a;
            if (b != this.d9) {
                this.sv("DataToolTipSummaryValueTextStyle", b, this.d9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "m0", {
        get: function () {
            return this.kq;
        },
        set: function (a) {
            var b = this.kq;
            this.kq = a;
            if (b != this.kq) {
                this.sv("DataToolTipSummaryLabelText", b, this.kq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ur", {
        get: function () {
            return this.t4;
        },
        set: function (a) {
            var b = this.t4;
            this.t4 = a;
            if (b != this.t4) {
                this.sv("DataToolTipSummaryLabelTextColor", b, this.t4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ef", {
        get: function () {
            return this.d6;
        },
        set: function (a) {
            var b = this.d6;
            this.d6 = a;
            if (b != this.d6) {
                this.sv("DataToolTipSummaryLabelTextStyle", b, this.d6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "nb", {
        get: function () {
            return this.ks;
        },
        set: function (a) {
            var b = this.ks;
            this.ks = a;
            if (b != this.ks) {
                this.sv("DataToolTipSummaryUnitsText", b, this.ks);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ut", {
        get: function () {
            return this.t6;
        },
        set: function (a) {
            var b = this.t6;
            this.t6 = a;
            if (b != this.t6) {
                this.sv("DataToolTipSummaryUnitsTextColor", b, this.t6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "eh", {
        get: function () {
            return this.d8;
        },
        set: function (a) {
            var b = this.d8;
            this.d8 = a;
            if (b != this.d8) {
                this.sv("DataToolTipSummaryUnitsTextStyle", b, this.d8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "vp", {
        get: function () {
            return this.vf;
        },
        set: function (a) {
            var b = this.vf;
            this.vf = a;
            if (b != this.vf) {
                this.sv("DataToolTipBadgeMargin", b, this.vf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ch", {
        get: function () {
            return this.cf;
        },
        set: function (a) {
            var b = this.cf;
            this.cf = a;
            if (b != this.cf) {
                this.sv("DataToolTipBadgeShape", enumGetBox(LegendItemBadgeShape_$type, b), enumGetBox(LegendItemBadgeShape_$type, this.cf));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bn", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            var b = this.bm;
            this.bm = a;
            if (b != this.bm) {
                this.sv("DataToolTipUnitsDisplayMode", enumGetBox(DataLegendUnitsMode_$type, b), enumGetBox(DataLegendUnitsMode_$type, this.bm));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "nl", {
        get: function () {
            return this.kt;
        },
        set: function (a) {
            var b = this.kt;
            this.kt = a;
            if (b != this.kt) {
                this.sv("DataToolTipUnitsText", b, this.kt);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "uw", {
        get: function () {
            return this.t9;
        },
        set: function (a) {
            var b = this.t9;
            this.t9 = a;
            if (b != this.t9) {
                this.sv("DataToolTipUnitsTextColor", b, this.t9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "vw", {
        get: function () {
            return this.vm;
        },
        set: function (a) {
            var b = this.vm;
            this.vm = a;
            if (b != this.vm) {
                this.sv("DataToolTipUnitsTextMargin", b, this.vm);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ek", {
        get: function () {
            return this.eb;
        },
        set: function (a) {
            var b = this.eb;
            this.eb = a;
            if (b != this.eb) {
                this.sv("DataToolTipUnitsTextStyle", b, this.eb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "vv", {
        get: function () {
            return this.vl;
        },
        set: function (a) {
            var b = this.vl;
            this.vl = a;
            if (b != this.vl) {
                this.sv("DataToolTipTitleTextMargin", b, this.vl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "uv", {
        get: function () {
            return this.t8;
        },
        set: function (a) {
            var b = this.t8;
            this.t8 = a;
            if (b != this.t8) {
                this.sv("DataToolTipTitleTextColor", b, this.t8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ej", {
        get: function () {
            return this.ea;
        },
        set: function (a) {
            var b = this.ea;
            this.ea = a;
            if (b != this.ea) {
                this.sv("DataToolTipTitleTextStyle", b, this.ea);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bj", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            var b = this.bi;
            this.bi = a;
            if (b != this.bi) {
                this.sv("DataToolTipLabelDisplayMode", enumGetBox(DataLegendLabelMode_$type, b), enumGetBox(DataLegendLabelMode_$type, this.bi));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "uq", {
        get: function () {
            return this.t3;
        },
        set: function (a) {
            var b = this.t3;
            this.t3 = a;
            if (b != this.t3) {
                this.sv("DataToolTipLabelTextColor", b, this.t3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "vs", {
        get: function () {
            return this.vi;
        },
        set: function (a) {
            var b = this.vi;
            this.vi = a;
            if (b != this.vi) {
                this.sv("DataToolTipLabelTextMargin", b, this.vi);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ee", {
        get: function () {
            return this.d5;
        },
        set: function (a) {
            var b = this.d5;
            this.d5 = a;
            if (b != this.d5) {
                this.sv("DataToolTipLabelTextStyle", b, this.d5);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.s6 = function (a) {
        if (this.seriesAdded != null && a != null) {
            this.seriesAdded(this, new ChartSeriesEventArgs(a));
        }
    };
    DomainChart.prototype.tc = function (a) {
        if (this.seriesRemoved != null && a != null) {
            this.seriesRemoved(this, new ChartSeriesEventArgs(a));
        }
    };
    DomainChart.prototype.s8 = function (a, b) {
        if (this.seriesPointerEnter != null && a != null) {
            this.seriesPointerEnter(this, new DomainChartSeriesPointerEventArgs(a, b));
        }
    };
    DomainChart.prototype.s9 = function (a, b) {
        if (this.seriesPointerLeave != null && a != null) {
            this.seriesPointerLeave(this, new DomainChartSeriesPointerEventArgs(a, b));
        }
    };
    DomainChart.prototype.ta = function (a, b) {
        if (this.seriesPointerMove != null && a != null) {
            this.seriesPointerMove(this, new DomainChartSeriesPointerEventArgs(a, b));
        }
    };
    DomainChart.prototype.s7 = function (a, b) {
        if (this.seriesPointerDown != null && a != null) {
            this.seriesPointerDown(this, new DomainChartSeriesPointerEventArgs(a, b));
        }
    };
    DomainChart.prototype.tb = function (a, b) {
        if (this.seriesPointerUp != null && a != null) {
            this.seriesPointerUp(this, new DomainChartSeriesPointerEventArgs(a, b));
        }
    };
    DomainChart.prototype.s4 = function (a, b) {
        if (this.calloutStyleUpdating != null && a != null) {
            this.calloutStyleUpdating(this, b);
        }
    };
    DomainChart.prototype.s3 = function (a, b) {
        if (this.calloutRenderStyleUpdating != null && a != null) {
            this.calloutRenderStyleUpdating(this, b);
        }
    };
    DomainChart.prototype.s1 = function (a) {
        var _this = this;
        if (!this.go.contains(a)) {
            this.go.add(a);
            var b = false;
            var c = this.s2(function () {
                a();
                _this.go.remove(a);
            }, b);
            b = c.p1;
        }
    };
    DomainChart.prototype.s2 = function (a, b) {
        if (!b) {
            b = true;
            if (this.j8 != null) {
                this.j8.setTimeout(a, 0);
            }
            else {
                this.en = a;
            }
        }
        return {
            p1: b
        };
    };
    DomainChart.prototype.get_f8 = function () {
        return true;
    };
    Object.defineProperty(DomainChart.prototype, "f8", {
        get: function () {
            return this.get_f8();
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.r4 = function (a) {
        var _this = this;
        var b = a == this.dataChart;
        if (b) {
            a.ag = this.z;
        }
        if (b) {
            a.aj = this.aa;
        }
        a.ah = this.ad;
        a.ai = this.ae;
        a.be = this.ck;
        a.legend = this.legend;
        a.ul = this.f2;
        a.uo = this.f9 && this.f8;
        a.e9 = this.gd;
        if (b) {
            a.b5 = this.di;
            a.b6 = this.dj;
            a.gp = this.ie;
            a.sp = this.u4;
            a.gq = this.ig;
            a.gr = this.ih;
            a.gs = this.ii;
            a.sq = this.u5;
            a.b2 = this.df;
            a.d5 = this.fv;
            a.gt = this.ij;
            a.gu = this.ik;
            a.gv = this.il;
            a.hc = this.i9;
            a.sy = this.u9;
            a.hi = this.jf;
            a.hd = this.ja;
            a.he = this.jb;
            a.sz = this.va;
            a.b7 = this.dl;
            a.fj = this.gg;
            a.hf = this.jc;
            a.hg = this.jd;
            a.hh = this.je;
            a.hl = this.jg;
            a.hm = this.jh;
            a.ho = this.jj;
            a.hn = this.ji;
        }
        a.t6 = this.db;
        a.t9 = this.dd;
        if (this.b6 != null) {
            if (!this.e4) {
                this.rl(this.b6);
            }
        }
        if (a.bv != this.c7 || a.bt != this.c5) {
            a.cu.b4(this.j8);
            a.bv = this.c7;
            a.bt = this.c5;
        }
        a.tz = this.a7();
        if (!isNaN_(this.is)) {
            a.vq = this.is;
        }
        if (!isNaN_(this.iu)) {
            a.vs = this.iu;
        }
        if (!isNaN_(this.it)) {
            a.vr = this.it;
        }
        if (!isNaN_(this.ir)) {
            a.vp = this.ir;
        }
        a.bb = this.cc;
        a.seriesMouseEnter = delegateCombine(a.seriesMouseEnter, function (c, d) { return _this.s8(d.series, d.item); });
        a.seriesMouseLeave = delegateCombine(a.seriesMouseLeave, function (c, d) { return _this.s9(d.series, d.item); });
        a.seriesMouseMove = delegateCombine(a.seriesMouseMove, function (c, d) { return _this.ta(d.series, d.item); });
        a.seriesMouseLeftButtonDown = delegateCombine(a.seriesMouseLeftButtonDown, function (c, d) { return _this.s7(d.series, d.item); });
        a.seriesMouseLeftButtonUp = delegateCombine(a.seriesMouseLeftButtonUp, function (c, d) { return _this.tb(d.series, d.item); });
        if (b) {
            a.tq = this.ve;
        }
        if (b) {
            a.kh = this.qb;
        }
        a.r9 = this.tv;
        if (b) {
            a.j5 = this.p0;
        }
        a.r8 = this.tu;
        a.uh = this.fg;
        a.ds = this.fh;
        a.gx = this.im;
        a.g2 = this.iw;
        a.hb = this.i6;
        a.gk = this.h8;
        if (a == this.dataChart) {
            this.th();
        }
        this.r5(a);
        this.r6(a);
    };
    DomainChart.prototype.ag = function (a) {
        var e_9, _a;
        if (!this.gc || !this.gf || this.itemsSource != null) {
            return a;
        }
        if (a == null) {
            return null;
        }
        var b = new BrushCollection();
        try {
            for (var _b = __values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                var d = BrushUtil.s(c);
                b.add(d);
            }
        }
        catch (e_9_1) {
            e_9 = { error: e_9_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_9)
                    throw e_9.error;
            }
        }
        return b;
    };
    DomainChart.prototype.u6 = function (a) {
        if (!this.gc || !this.gf || this.itemsSource != null) {
            return a;
        }
        var b = BrushUtil.g(0, 0, 0, 0);
        return b;
    };
    DomainChart.prototype.sa = function (a, b) {
        if (!isNaN_(this.iv)) {
            a.gy = this.iv;
        }
        if (!isNaN_(this.i1) && !a.dd) {
            a.g4 = this.i1;
        }
        if (!isNaN_(this.h9) && a.da) {
            a.g4 = this.h9;
        }
        if (!isNaN_(this.i8) && a.de) {
            a.g4 = this.i8;
        }
        a.legendItemBadgeShape = this.ci;
        a.ba = this.ce;
        a.bu = this.c9;
        a.m5(this.co);
        a.m4(this.cm);
        a.gv = this.io;
        if (!isNaN_(this.ip)) {
            a.m6(this.ip);
        }
        if (!isNaN_(this.h7)) {
            a.f3 = this.h7;
        }
        if (a.isUsableInLegend) {
            a.legend = this.legend;
        }
        if (typeCast(IUnknownValuePlotting_$type, a) !== null) {
            a.unknownValuePlotting = this.ds;
        }
        a.dz = this.f4;
        if (this.fw(a) && this.b3.isCalloutLayer(a)) {
            this.b3.setCalloutStyleUpdatingEventEnabled(a, this.fk);
            this.b3.addCalloutStyleUpdating(a, runOn(this, this.s4));
        }
        if (this.fw(a) && this.b3.isCalloutLayer(a)) {
            this.b3.setCalloutRenderStyleUpdatingEventEnabled(a, this.fk);
            this.b3.addCalloutRenderStyleUpdating(a, runOn(this, this.s3));
        }
        if (this.fw(a) && this.b3.isDataToolTipLayer(a)) {
            this.ri(a);
        }
        this.rj(a, b);
        this.rk(a, b);
        this.sb(a, b);
        this.sc(a, b);
        this.s6(a);
    };
    Object.defineProperty(DomainChart.prototype, "fi", {
        get: function () {
            return this.eq;
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.rr = function () {
        if (!this.eq) {
            this.eq = true;
            this.r1();
        }
    };
    DomainChart.prototype.r1 = function () {
        this.r2();
        this.r3();
    };
    DomainChart.prototype.td = function (a) {
        if (this.e4 && this.b6 != null) {
            this.e4 = false;
            if (a != null) {
                a.detachDataLegend(this.b6);
            }
        }
        this.tk(a);
    };
    DomainChart.prototype.rk = function (a, b) {
        var c = typeCast(ITrendLineSeries_$type, a);
        if (c != null) {
            c.trendLineBrush = ArrayExtension.getModulus$1(Brush.$, this.ah, b);
            c.trendLineThickness = this.i7;
            c.trendLineType = this.dq;
            c.trendLinePeriod = this.j2;
        }
    };
    DomainChart.prototype.cr = function (a, b) {
        if (this.cu == null || this.cu.count == 0) {
            var c = this.cs(a);
            if (this.gp == null || this.gp.count == 0) {
                return a != null && a.d5 ? c : 2;
            }
            var d = ArrayExtension.getModulus$1(MarkerType_$type, this.gp, b);
            if (d == 0 && a != null) {
                d = a.d5 ? c : 2;
                if (d == 2) {
                    d = this.cq(a);
                }
            }
            if (d == 2) {
                if (a == null) {
                    return 1;
                }
                else {
                    return 2;
                }
            }
            return d;
        }
        return ArrayExtension.getModulus$1(MarkerType_$type, this.cu, b);
    };
    DomainChart.prototype.cq = function (a) {
        return 2;
    };
    DomainChart.prototype.cs = function (a) {
        return 1;
    };
    DomainChart.prototype.kd = function () {
        if (this.itemsSource != null) {
            return this.itemsSource;
        }
        if (this.gc) {
            return this.gv();
        }
        return null;
    };
    DomainChart.prototype.get_f1 = function () {
        if (this.itemsSource == null && this.gc) {
            if (this.gv() != null) {
                return true;
            }
        }
        return false;
    };
    Object.defineProperty(DomainChart.prototype, "f1", {
        get: function () {
            return this.get_f1();
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.gv = function () {
        return null;
    };
    DomainChart.prototype.sv = function (a, b, c) {
        var _this = this;
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
        switch (a) {
            case "DataChart":
                this.td(typeCast(XamDataChart.$, b));
                this.r4(typeCast(XamDataChart.$, c));
                break;
            case "ShouldUseSkeletonStyleForMockData":
            case "ShouldDisplayMockData":
                this.actualItemsSource = this.kd();
                this.z = this.ag(this.ab);
                this.aa = this.ag(this.af);
                break;
            case "ActualBrushes":
                this.sp(function (d) { return d.ag = _this.z; }, true, a);
                break;
            case "ActualOutlines":
                this.sp(function (d) { return d.aj = _this.aa; }, true, a);
                break;
            case "ActualItemsSource":
                if (this.gc) {
                    this.z = this.ag(this.ab);
                    this.aa = this.ag(this.af);
                }
                this.bd.itemsSource = this.actualItemsSource;
                break;
            case "ItemsSource":
                this.actualItemsSource = this.kd();
                break;
            case "IncludedProperties":
                this.bd.includedProperties = this.q;
                break;
            case "ExcludedProperties":
                this.bd.excludedProperties = this.o;
                break;
            case "Brushes":
                this.z = this.ag(this.ab);
                break;
            case "Outlines":
                this.aa = this.ag(this.af);
                break;
            case "Legend":
                this.sn(function (d) { return d.legend = _this.legend; });
                break;
            case "HighlightingMode":
                this.sn(function (d) { return d.bv = _this.c7; });
                break;
            case "HighlightingBehavior":
                this.sn(function (d) { return d.bt = _this.c5; });
                break;
            case "LegendHighlightingMode":
                this.sn(function (d) { return d.bb = _this.cc; });
                break;
            case "LegendItemBadgeShape":
                this.sn(function (d) { return d.bd = _this.ci; });
                break;
            case "LegendItemBadgeMode":
                this.sn(function (d) { return d.bc = _this.ce; });
                break;
            case "PlotAreaMarginLeft":
                this.sn(function (d) { return d.vq = _this.is; });
                break;
            case "PlotAreaMarginTop":
                this.sn(function (d) { return d.vs = _this.iu; });
                break;
            case "PlotAreaMarginRight":
                this.sn(function (d) { return d.vr = _this.it; });
                break;
            case "PlotAreaMarginBottom":
                this.sn(function (d) { return d.vp = _this.ir; });
                break;
            case "ComputedPlotAreaMarginMode":
                this.sn(function (d) { return d.tz = _this.a7(); });
                break;
            case "IsHorizontalZoomEnabled":
                this.sn(function (d) { return d.ul = _this.f2; });
                break;
            case "IsVerticalZoomEnabled":
                this.sn(function (d) { return d.uo = _this.f9; });
                break;
            case "WindowRect":
                this.so(function (d) { return d.tq = _this.ve; }, false);
                break;
            case "WindowRectMinWidth":
                this.so(function (d) { return d.hm = _this.jh; }, false);
                break;
            case "WindowRectMinHeight":
                this.so(function (d) { return d.hl = _this.jg; }, false);
                break;
            case "WindowSizeMinWidth":
                this.so(function (d) { return d.ho = _this.jj; }, false);
                break;
            case "WindowSizeMinHeight":
                this.so(function (d) { return d.hn = _this.ji; }, false);
                break;
            case "Title":
                this.so(function (d) { return d.kh = _this.qb; }, false);
                break;
            case "Subtitle":
                this.so(function (d) { return d.j5 = _this.p0; }, false);
                break;
            case "TitleAlignment":
                this.sn(function (d) { return d.r9 = _this.tv; });
                break;
            case "SubtitleAlignment":
                this.sn(function (d) { return d.r8 = _this.tu; });
                break;
            case "UnknownValuePlotting":
                this.ru(function (d) {
                    if (typeCast(IUnknownValuePlotting_$type, d) !== null) {
                        d.unknownValuePlotting = _this.ds;
                    }
                });
                break;
            case "IsSeriesHighlightingEnabled":
                this.ru(function (d) { return d.dz = _this.f4; });
                break;
            case "Thickness":
                if (!isNaN_(this.i1)) {
                    this.ry(function (d) { return d.g4 = _this.i1; });
                }
                break;
            case "OutlineMode":
                this.ry(function (d) { return d.bu = _this.c9; });
                break;
            case "MarkerFillOpacity":
                this.ry(function (d) { return d.gv = _this.io; });
                break;
            case "MarkerThickness":
                if (!isNaN_(this.ip)) {
                    this.ry(function (d) { return d.m6(_this.ip); });
                }
                break;
            case "MarkerOutlineMode":
                this.ry(function (d) { return d.m5(_this.co); });
                break;
            case "MarkerFillMode":
                this.ry(function (d) { return d.m4(_this.cm); });
                break;
            case "Resolution":
                if (!isNaN_(this.iv)) {
                    this.ru(function (d) { return d.gy = _this.iv; });
                }
                break;
            case "AreaFillOpacity":
                if (!isNaN_(this.h7)) {
                    this.ru(function (d) { return d.f3 = _this.h7; });
                }
                break;
            case "ShouldAvoidAxisAnnotationCollisions":
                this.rt(function (d) {
                    d.ct = _this.gb;
                    d.cv = _this.gb;
                }, true);
                break;
            case "ShouldPanOnMaximumZoom":
                this.sn(function (d) { return d.e9 = _this.gd; });
                break;
            case "TrendLineBrushes":
            case "TrendLineType":
            case "TrendLineThickness":
            case "TrendLinePeriod":
                this.rv(function (d, e) { return _this.rk(d, e); });
                break;
            case "MarkerMaxCount":
                this.rz(function (d, e) { return _this.rj(d, e); });
                break;
            case "MarkerTypes":
                var d = typeCast(ObservableCollection$1.$.specialize(MarkerType_$type), b);
                if (d != null) {
                    d.collectionChanged = delegateRemove(d.collectionChanged, runOn(this, this.st));
                }
                var e = typeCast(ObservableCollection$1.$.specialize(MarkerType_$type), c);
                if (e != null) {
                    e.collectionChanged = delegateCombine(e.collectionChanged, runOn(this, this.st));
                }
                this.rz(function (f, g) { return _this.rj(f, g); });
                break;
            case "MarkerAutomaticBehavior":
                this.sn(function (f) { return f.be = _this.ck; });
                this.rz(function (f, g) { return _this.rj(f, g); });
                break;
            case "MarkerBrushes":
                this.sn(function (f) { return f.ah = _this.ad; });
                break;
            case "MarkerOutlines":
                this.sn(function (f) { return f.ai = _this.ae; });
                break;
            case "AlignsGridLinesToPixels":
                this.sn(function (f) { return f.uh = _this.fg; });
                break;
            case "AnimateSeriesWhenAxisRangeChanges":
                this.sn(function (f) { return f.ds = _this.fh; });
                break;
            case "ToolTipType":
            case "CrosshairsDisplayMode":
            case "CrosshairsSnapToData":
            case "CrosshairsLineVerticalStroke":
            case "CrosshairsLineHorizontalStroke":
            case "CrosshairsLineThickness":
            case "CrosshairsAnnotationXAxisBackground":
            case "CrosshairsAnnotationXAxisTextColor":
            case "CrosshairsAnnotationYAxisBackground":
            case "CrosshairsAnnotationYAxisTextColor":
            case "CrosshairsAnnotationEnabled":
            case "CrosshairsAnnotationXAxisPrecision":
            case "CrosshairsAnnotationYAxisPrecision":
            case "FinalValueAnnotationsVisible":
            case "FinalValueAnnotationsPrecision":
            case "FinalValueAnnotationsTextColor":
            case "FinalValueAnnotationsBackground":
            case "CalloutsVisible":
            case "AutoCalloutsVisible":
            case "CalloutsAllowedPositions":
            case "CalloutsItemsSource":
            case "CalloutsXMemberPath":
            case "CalloutsYMemberPath":
            case "CalloutsLabelMemberPath":
            case "CalloutsContentMemberPath":
                var f = this.s2(runOn(this, this.rq), this.f3);
                this.f3 = f.p1;
                break;
            case "DataToolTipGroupingMode":
            case "DataToolTipPositionOffsetX":
            case "DataToolTipPositionOffsetY":
            case "DataToolTipDefaultPositionOffsetX":
            case "DataToolTipDefaultPositionOffsetY":
            case "DataToolTipGroupedPositionModeX":
            case "DataToolTipGroupedPositionModeY":
            case DomainChart.mz:
            case "DataToolTipIncludedSeries":
            case "DataToolTipExcludedSeries":
            case "DataToolTipIncludedColumns":
            case "DataToolTipExcludedColumns":
            case "DataToolTipValueFormatAbbreviation":
            case "DataToolTipValueFormatMaxFractions":
            case "DataToolTipValueFormatMinFractions":
            case "DataToolTipValueFormatMode":
            case "DataToolTipValueFormatCulture":
            case "DataToolTipValueFormatUseGrouping":
            case "DataToolTipValueFormatString":
            case "DataToolTipValueFormatSpecifiers":
            case "DataToolTipValueRowMargin":
            case "DataToolTipValueRowVisible":
            case "DataToolTipValueTextWhenMissingData":
            case "DataToolTipValueTextUseSeriesColors":
            case "DataToolTipValueTextMargin":
            case "DataToolTipValueTextColor":
            case "DataToolTipValueTextStyle":
            case "DataToolTipHeaderFormatString":
            case "DataToolTipHeaderFormatSpecifiers":
            case "DataToolTipHeaderFormatCulture":
            case "DataToolTipHeaderFormatDate":
            case "DataToolTipHeaderFormatTime":
            case "DataToolTipHeaderText":
            case "DataToolTipHeaderTextColor":
            case "DataToolTipHeaderTextMargin":
            case "DataToolTipHeaderRowMargin":
            case "DataToolTipHeaderRowVisible":
            case "DataToolTipHeaderTextStyle":
            case "DataToolTipSummaryTitleTextColor":
            case "DataToolTipSummaryTitleTextStyle":
            case "DataToolTipSummaryType":
            case "DataToolTipSummaryTitleText":
            case "DataToolTipSummaryTitleTextMargin":
            case "DataToolTipSummaryRowMargin":
            case "DataToolTipSummaryValueTextColor":
            case "DataToolTipSummaryValueTextStyle":
            case "DataToolTipSummaryLabelText":
            case "DataToolTipSummaryLabelTextColor":
            case "DataToolTipSummaryLabelTextStyle":
            case "DataToolTipSummaryUnitsText":
            case "DataToolTipSummaryUnitsTextColor":
            case "DataToolTipSummaryUnitsTextStyle":
            case "DataToolTipBadgeMargin":
            case "DataToolTipBadgeShape":
            case "DataToolTipUnitsDisplayMode":
            case "DataToolTipUnitsText":
            case "DataToolTipUnitsTextColor":
            case "DataToolTipUnitsTextMargin":
            case "DataToolTipUnitsTextStyle":
            case "DataToolTipTitleTextMargin":
            case "DataToolTipTitleTextColor":
            case "DataToolTipTitleTextStyle":
            case "DataToolTipLabelDisplayMode":
            case "DataToolTipLabelTextColor":
            case "DataToolTipLabelTextMargin":
            case "DataToolTipLabelTextStyle":
                this.sr(a, b, c);
                break;
            case "HorizontalViewScrollbarMode":
                this.sn(function (g) { return g.b5 = _this.di; });
                break;
            case "VerticalViewScrollbarMode":
                this.sn(function (g) { return g.b6 = _this.dj; });
                break;
            case "HorizontalViewScrollbarCornerRadius":
                this.sn(function (g) { return g.gp = _this.ie; });
                break;
            case "HorizontalViewScrollbarFill":
                this.sn(function (g) { return g.sp = _this.u4; });
                break;
            case "HorizontalViewScrollbarMaxOpacity":
                this.sn(function (g) { return g.gs = _this.ii; });
                break;
            case "HorizontalViewScrollbarOutline":
                this.sn(function (g) { return g.sq = _this.u5; });
                break;
            case "HorizontalViewScrollbarStrokeThickness":
                this.sn(function (g) { return g.gt = _this.ij; });
                break;
            case "VerticalViewScrollbarCornerRadius":
                this.sn(function (g) { return g.hc = _this.i9; });
                break;
            case "VerticalViewScrollbarFill":
                this.sn(function (g) { return g.sy = _this.u9; });
                break;
            case "VerticalViewScrollbarMaxOpacity":
                this.sn(function (g) { return g.he = _this.jb; });
                break;
            case "VerticalViewScrollbarOutline":
                this.sn(function (g) { return g.sz = _this.va; });
                break;
            case "VerticalViewScrollbarStrokeThickness":
                this.sn(function (g) { return g.hf = _this.jc; });
                break;
            case "HorizontalViewScrollbarHeight":
                this.sn(function (g) { return g.gq = _this.ig; });
                break;
            case "HorizontalViewScrollbarInset":
                this.sn(function (g) { return g.gr = _this.ih; });
                break;
            case DomainChart.os:
                this.sn(function (g) { return g.d5 = _this.fv; });
                break;
            case "HorizontalViewScrollbarTrackStartInset":
                this.sn(function (g) { return g.gv = _this.il; });
                break;
            case "HorizontalViewScrollbarTrackEndInset":
                this.sn(function (g) { return g.gu = _this.ik; });
                break;
            case "VerticalViewScrollbarPosition":
                this.sn(function (g) { return g.b7 = _this.dl; });
                break;
            case "HorizontalViewScrollbarPosition":
                this.sn(function (g) { return g.b2 = _this.df; });
                break;
            case "ValueLines":
                var g = typeCast(ObservableCollection$1.$.specialize(ValueLayerValueMode_$type), b);
                if (g != null) {
                    g.collectionChanged = delegateRemove(g.collectionChanged, runOn(this, this.sx));
                }
                var h = typeCast(ObservableCollection$1.$.specialize(ValueLayerValueMode_$type), c);
                if (h != null) {
                    h.collectionChanged = delegateCombine(h.collectionChanged, runOn(this, this.sx));
                }
                var i = this.s2(runOn(this, this.rq), this.f3);
                this.f3 = i.p1;
                break;
        }
        this.sy(a, b, c);
        this.sz(a, b, c);
        if (this.f6) {
            this.b8.onTargetPropertyChanged(this, a, b, c);
        }
    };
    DomainChart.prototype.sr = function (a, b, c) {
        var _this = this;
        if (!this.gh.containsKey(a)) {
            this.gj.add(a);
            this.gh.addItem(a, c);
        }
        else {
            this.gh.item(a, c);
        }
        this.rw(function (d) {
            if (_this.b3.isDataToolTipLayer(d)) {
                _this.ri(d);
            }
        });
    };
    DomainChart.prototype.ri = function (a) {
        for (var b = 0; b < this.gj.count; b++) {
            var c = this.gj._inner[b];
            var d = this.gh.item(c);
            if (stringStartsWith(c, "DataToolTip")) {
                c = c.substr(("DataToolTip").length);
            }
            this.b3.updateDataToolTipPropertyByName(a, c, d);
        }
    };
    DomainChart.prototype.st = function (a, b) {
        var _this = this;
        this.rz(function (c, d) { return _this.rj(c, d); });
    };
    DomainChart.prototype.sx = function (a, b) {
        var c = this.s2(runOn(this, this.rq), this.f3);
        this.f3 = c.p1;
    };
    Object.defineProperty(DomainChart.prototype, "a0", {
        get: function () {
            return this.au;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "aw", {
        get: function () {
            return this.aq;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "av", {
        get: function () {
            return this.ap;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dz", {
        get: function () {
            return this.dx;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a4", {
        get: function () {
            return this.a2;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "az", {
        get: function () {
            return this.at;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ay", {
        get: function () {
            return this.as;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ax", {
        get: function () {
            return this.ar;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a3", {
        get: function () {
            return this.a1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "oz", {
        get: function () {
            return this.kz;
        },
        set: function (a) {
            var _this = this;
            var b = this.kz;
            this.kz = a;
            if (b != a) {
                this.at.n();
                this.d0.b(this.kz, function (c, d, e) { return _this.at.j.add(new ChartSortDescription(2, c, d)); });
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "og", {
        get: function () {
            return this.kx;
        },
        set: function (a) {
            var _this = this;
            var b = this.kx;
            this.kx = a;
            if (b != a) {
                this.as.n();
                this.d0.b(this.kx, function (c, d, e) { return _this.as.j.add(new ChartSortDescription(2, c, d)); });
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ox", {
        get: function () {
            return this.ky;
        },
        set: function (a) {
            var _this = this;
            var b = this.ky;
            this.ky = a;
            if (b != a) {
                this.ar.n();
                this.d0.b(this.ky, function (c, d, e) { return _this.ar.j.add(new ChartSortDescription(2, c, d)); });
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "o1", {
        get: function () {
            return this.k0;
        },
        set: function (a) {
            var _this = this;
            var b = this.k0;
            this.k0 = a;
            if (b != a) {
                this.a1.n();
                this.d1.a(this.k0, function (c, d, e) {
                    return _this.a1.j.add(((function () {
                        var $ret = new ChartSummaryDescription(2, c, d);
                        $ret.n = e;
                        return $ret;
                    })()));
                });
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "itemsSource", {
        get: function () {
            return this.j4;
        },
        set: function (a) {
            var b = this.itemsSource;
            if (b != a) {
                this.j4 = a;
                this.sv("ItemsSource", b, this.itemsSource);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "actualItemsSource", {
        get: function () {
            return this.j3;
        },
        set: function (a) {
            var b = this.actualItemsSource;
            if (b != a) {
                this.j3 = a;
                this.sv("ActualItemsSource", b, this.actualItemsSource);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "q", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            var b = this.h;
            this.h = a;
            if (b != this.h) {
                this.sv("IncludedProperties", b, this.h);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "o", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            var b = this.g;
            this.g = a;
            if (b != this.g) {
                this.sv("ExcludedProperties", b, this.g);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ab", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            var b = this.ab;
            if (a != b) {
                this.t = a;
                this.sv("Brushes", b, this.ab);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "af", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            var b = this.af;
            if (a != b) {
                this.w = a;
                this.sv("Outlines", b, this.af);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "z", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            var b = this.r;
            if (a != b) {
                this.r = a;
                this.sv("ActualBrushes", b, this.z);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "aa", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            var b = this.s;
            if (a != b) {
                this.s = a;
                this.sv("ActualOutlines", b, this.aa);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "legend", {
        get: function () {
            return this.b4;
        },
        set: function (a) {
            var b = this.legend;
            if (a != b) {
                this.b4 = a;
                this.sv("Legend", b, this.legend);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_f2 = function () {
        return this.e3;
    };
    DomainChart.prototype.set_f2 = function (a) {
        var b = this.f2;
        if (a != b) {
            this.e3 = a;
            this.sv("IsHorizontalZoomEnabled", b, this.f2);
        }
    };
    Object.defineProperty(DomainChart.prototype, "f2", {
        get: function () {
            return this.get_f2();
        },
        set: function (a) {
            this.set_f2(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_f9 = function () {
        return this.e6;
    };
    DomainChart.prototype.set_f9 = function (a) {
        var b = this.f9;
        if (a != b) {
            this.e6 = a;
            this.sv("IsVerticalZoomEnabled", b, this.f9);
        }
    };
    Object.defineProperty(DomainChart.prototype, "f9", {
        get: function () {
            return this.get_f9();
        },
        set: function (a) {
            this.set_f9(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_gc = function () {
        return this.e8;
    };
    DomainChart.prototype.set_gc = function (a) {
        var b = this.gc;
        if (a != b) {
            this.e8 = a;
            this.sv("ShouldDisplayMockData", b, this.gc);
        }
    };
    Object.defineProperty(DomainChart.prototype, "gc", {
        get: function () {
            return this.get_gc();
        },
        set: function (a) {
            this.set_gc(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_gf = function () {
        return this.fe;
    };
    DomainChart.prototype.set_gf = function (a) {
        var b = this.gf;
        if (a != b) {
            this.fe = a;
            this.sv("ShouldUseSkeletonStyleForMockData", b, this.gf);
        }
    };
    Object.defineProperty(DomainChart.prototype, "gf", {
        get: function () {
            return this.get_gf();
        },
        set: function (a) {
            this.set_gf(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_f4 = function () {
        return this.e5;
    };
    DomainChart.prototype.set_f4 = function (a) {
        var b = this.f4;
        if (a != b) {
            this.e5 = a;
            this.sv("IsSeriesHighlightingEnabled", b, this.f4);
        }
    };
    Object.defineProperty(DomainChart.prototype, "f4", {
        get: function () {
            return this.get_f4();
        },
        set: function (a) {
            this.set_f4(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ve", {
        get: function () {
            return this.vc;
        },
        set: function (a) {
            var b = this.ve;
            if (Rect.l_op_Inequality(a, b)) {
                this.vc = a;
                this.sv("WindowRect", b, this.ve);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "vd", {
        get: function () {
            return this.dataChart != null ? this.dataChart.tp : Rect.empty;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "qb", {
        get: function () {
            return this.k3;
        },
        set: function (a) {
            var b = this.qb;
            if (a != b) {
                this.k3 = a;
                this.sv("Title", b, this.qb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "p0", {
        get: function () {
            return this.k1;
        },
        set: function (a) {
            var b = this.p0;
            if (a != b) {
                this.k1 = a;
                this.sv("Subtitle", b, this.p0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tv", {
        get: function () {
            return this.tt;
        },
        set: function (a) {
            var b = this.tv;
            if (b != a) {
                this.tt = a;
                this.sv("TitleAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.tv));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tu", {
        get: function () {
            return this.ts;
        },
        set: function (a) {
            var b = this.tu;
            if (b != a) {
                this.ts = a;
                this.sv("SubtitleAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.tu));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ds", {
        get: function () {
            return this.dr;
        },
        set: function (a) {
            var b = this.ds;
            if (a != b) {
                this.dr = a;
                this.sv("UnknownValuePlotting", enumGetBox(UnknownValuePlotting_$type, b), enumGetBox(UnknownValuePlotting_$type, this.ds));
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_iv = function () {
        return this.hi;
    };
    DomainChart.prototype.set_iv = function (a) {
        var b = this.iv;
        if (a != b) {
            this.hi = a;
            this.sv("Resolution", b, this.iv);
        }
    };
    Object.defineProperty(DomainChart.prototype, "iv", {
        get: function () {
            return this.get_iv();
        },
        set: function (a) {
            this.set_iv(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i1", {
        get: function () {
            return this.ho;
        },
        set: function (a) {
            var b = this.i1;
            if (a != b) {
                this.ho = a;
                this.sv("Thickness", b, this.i1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "c9", {
        get: function () {
            return this.c8;
        },
        set: function (a) {
            var b = this.c9;
            if (a != b) {
                this.c8 = a;
                this.sv("OutlineMode", enumGetBox(SeriesOutlineMode_$type, b), enumGetBox(SeriesOutlineMode_$type, this.c9));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "co", {
        get: function () {
            return this.cn;
        },
        set: function (a) {
            var b = this.co;
            if (a != b) {
                this.cn = a;
                this.sv("MarkerOutlineMode", enumGetBox(MarkerOutlineMode_$type, b), enumGetBox(MarkerOutlineMode_$type, this.co));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cm", {
        get: function () {
            return this.cl;
        },
        set: function (a) {
            var b = this.cm;
            if (a != b) {
                this.cl = a;
                this.sv("MarkerFillMode", enumGetBox(MarkerFillMode_$type, b), enumGetBox(MarkerFillMode_$type, this.cm));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "io", {
        get: function () {
            return this.hb;
        },
        set: function (a) {
            var b = this.io;
            if (a != b) {
                this.hb = a;
                this.sv("MarkerFillOpacity", b, this.io);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ip", {
        get: function () {
            return this.hc;
        },
        set: function (a) {
            var b = this.ip;
            if (a != b) {
                this.hc = a;
                this.sv("MarkerThickness", b, this.ip);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cu", {
        get: function () {
            return this.ct;
        },
        set: function (a) {
            var b = this.cu;
            if (a != b) {
                this.ct = a;
                this.sv("MarkerTypes", b, this.cu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ck", {
        get: function () {
            return this.cj;
        },
        set: function (a) {
            var b = this.ck;
            if (a != b) {
                this.cj = a;
                this.sv("MarkerAutomaticBehavior", enumGetBox(MarkerAutomaticBehavior_$type, b), enumGetBox(MarkerAutomaticBehavior_$type, this.ck));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ad", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            var b = this.ad;
            if (a != b) {
                this.u = a;
                this.sv("MarkerBrushes", b, this.ad);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ae", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            var b = this.ae;
            if (!Base.equalsStatic(a, b)) {
                this.v = a;
                this.sv("MarkerOutlines", b, this.ae);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j0", {
        get: function () {
            return this.jr;
        },
        set: function (a) {
            var b = this.jr;
            if (a != b) {
                this.jr = a;
                this.sv("MarkerMaxCount", b, this.jr);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h7", {
        get: function () {
            return this.gw;
        },
        set: function (a) {
            var b = this.h7;
            if (a != b) {
                this.gw = a;
                this.sv("AreaFillOpacity", b, this.h7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fh", {
        get: function () {
            return this.ep;
        },
        set: function (a) {
            var b = this.ep;
            if (a != b) {
                this.ep = a;
                this.sv("AnimateSeriesWhenAxisRangeChanges", b, this.ep);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ah", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            var b = this.ah;
            if (a != b) {
                this.x = a;
                this.sv("TrendLineBrushes", b, this.ah);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dq", {
        get: function () {
            return this.dp;
        },
        set: function (a) {
            var b = this.dq;
            if (a != b) {
                this.dp = a;
                this.sv("TrendLineType", enumGetBox(TrendLineType_$type, b), enumGetBox(TrendLineType_$type, this.dq));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i7", {
        get: function () {
            return this.hu;
        },
        set: function (a) {
            var b = this.i7;
            if (a != b) {
                this.hu = a;
                this.sv("TrendLineThickness", b, this.i7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fg", {
        get: function () {
            return this.eo;
        },
        set: function (a) {
            var b = this.fg;
            if (a != b) {
                this.eo = a;
                this.sv("AlignsGridLinesToPixels", b, this.fg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "is", {
        get: function () {
            return this.hf;
        },
        set: function (a) {
            var b = this.hf;
            this.hf = a;
            if (a != b) {
                this.sv("PlotAreaMarginLeft", b, a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "iu", {
        get: function () {
            return this.hh;
        },
        set: function (a) {
            var b = this.hh;
            this.hh = a;
            if (a != b) {
                this.sv("PlotAreaMarginTop", b, a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "it", {
        get: function () {
            return this.hg;
        },
        set: function (a) {
            var b = this.hg;
            this.hg = a;
            if (a != b) {
                this.sv("PlotAreaMarginRight", b, a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ir", {
        get: function () {
            return this.he;
        },
        set: function (a) {
            var b = this.he;
            this.he = a;
            if (a != b) {
                this.sv("PlotAreaMarginBottom", b, a);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.su = function () {
    };
    Object.defineProperty(DomainChart.prototype, "a6", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            var b = this.a6;
            if (a != b) {
                this.a5 = a;
                this.sv("ComputedPlotAreaMarginMode", enumGetBox(ComputedPlotAreaMarginMode_$type, b), enumGetBox(ComputedPlotAreaMarginMode_$type, this.a6));
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.a7 = function () {
        return this.a6;
    };
    Object.defineProperty(DomainChart.prototype, "db", {
        get: function () {
            return this.da;
        },
        set: function (a) {
            var b = this.db;
            if (a != b) {
                this.da = a;
                this.sv("SeriesPlotAreaMarginHorizontalMode", enumGetBox(SeriesPlotAreaMarginHorizontalMode_$type, b), enumGetBox(SeriesPlotAreaMarginHorizontalMode_$type, this.db));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dd", {
        get: function () {
            return this.dc;
        },
        set: function (a) {
            var b = this.dd;
            if (a != b) {
                this.dc = a;
                this.sv("SeriesPlotAreaMarginVerticalMode", enumGetBox(SeriesPlotAreaMarginVerticalMode_$type, b), enumGetBox(SeriesPlotAreaMarginVerticalMode_$type, this.dd));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "c7", {
        get: function () {
            return this.c6;
        },
        set: function (a) {
            var b = this.c7;
            if (a != b) {
                this.c6 = a;
                this.sv("HighlightingMode", enumGetBox(SeriesHighlightingMode_$type, b), enumGetBox(SeriesHighlightingMode_$type, this.c7));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "c5", {
        get: function () {
            return this.c4;
        },
        set: function (a) {
            var b = this.c5;
            if (a != b) {
                this.c4 = a;
                this.sv("HighlightingBehavior", enumGetBox(SeriesHighlightingBehavior_$type, b), enumGetBox(SeriesHighlightingBehavior_$type, this.c5));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cc", {
        get: function () {
            return this.cb;
        },
        set: function (a) {
            var b = this.cc;
            if (a != b) {
                this.cb = a;
                this.sv("LegendHighlightingMode", enumGetBox(LegendHighlightingMode_$type, b), enumGetBox(LegendHighlightingMode_$type, this.cc));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ci", {
        get: function () {
            return this.cg;
        },
        set: function (a) {
            var b = this.ci;
            if (a != b) {
                this.cg = a;
                this.sv("LegendItemBadgeShape", enumGetBox(LegendItemBadgeShape_$type, b), enumGetBox(LegendItemBadgeShape_$type, this.ci));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ce", {
        get: function () {
            return this.cd;
        },
        set: function (a) {
            var b = this.ce;
            if (a != b) {
                this.cd = a;
                this.sv("LegendItemBadgeMode", enumGetBox(LegendItemBadgeMode_$type, b), enumGetBox(LegendItemBadgeMode_$type, this.ce));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j2", {
        get: function () {
            return this.ju;
        },
        set: function (a) {
            var b = this.j2;
            if (a != b) {
                this.ju = a;
                this.sv("TrendLinePeriod", b, this.j2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dn", {
        get: function () {
            return this.dm;
        },
        set: function (a) {
            var b = this.dn;
            if (a != b) {
                this.dm = a;
                this.sv("ToolTipType", enumGetBox(ToolTipType_$type, b), enumGetBox(ToolTipType_$type, this.dn));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a9", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            var b = this.a9;
            if (a != b) {
                this.a8 = a;
                this.sv("CrosshairsDisplayMode", enumGetBox(CrosshairsDisplayMode_$type, b), enumGetBox(CrosshairsDisplayMode_$type, this.a9));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fn", {
        get: function () {
            return this.ev;
        },
        set: function (a) {
            var b = this.fn;
            if (a != b) {
                this.ev = a;
                this.sv("CrosshairsSnapToData", b, this.fn);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "uo", {
        get: function () {
            return this.t1;
        },
        set: function (a) {
            var b = this.uo;
            if (a != b) {
                this.t1 = a;
                this.sv("CrosshairsLineVerticalStroke", b, this.uo);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h9", {
        get: function () {
            return this.gy;
        },
        set: function (a) {
            var b = this.h9;
            if (a != b) {
                this.gy = a;
                this.sv("CrosshairsLineThickness", b, this.h9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "un", {
        get: function () {
            return this.t0;
        },
        set: function (a) {
            var b = this.un;
            if (a != b) {
                this.t0 = a;
                this.sv("CrosshairsLineHorizontalStroke", b, this.un);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fm", {
        get: function () {
            return this.eu;
        },
        set: function (a) {
            var b = this.fm;
            if (a != b) {
                this.eu = a;
                this.sv("CrosshairsAnnotationEnabled", b, this.fm);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "uj", {
        get: function () {
            return this.tw;
        },
        set: function (a) {
            var b = this.uj;
            if (a != b) {
                this.tw = a;
                this.sv("CrosshairsAnnotationXAxisBackground", b, this.uj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ul", {
        get: function () {
            return this.ty;
        },
        set: function (a) {
            var b = this.ul;
            if (a != b) {
                this.ty = a;
                this.sv("CrosshairsAnnotationYAxisBackground", b, this.ul);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "uk", {
        get: function () {
            return this.tx;
        },
        set: function (a) {
            var b = this.uk;
            if (a != b) {
                this.tx = a;
                this.sv("CrosshairsAnnotationXAxisTextColor", b, this.uk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "um", {
        get: function () {
            return this.tz;
        },
        set: function (a) {
            var b = this.um;
            if (a != b) {
                this.tz = a;
                this.sv("CrosshairsAnnotationYAxisTextColor", b, this.um);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jv", {
        get: function () {
            return this.jm;
        },
        set: function (a) {
            var b = this.jv;
            if (a != b) {
                this.jm = a;
                this.sv("CrosshairsAnnotationXAxisPrecision", b, this.jv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jw", {
        get: function () {
            return this.jn;
        },
        set: function (a) {
            var b = this.jw;
            if (a != b) {
                this.jn = a;
                this.sv("CrosshairsAnnotationYAxisPrecision", b, this.jw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gb", {
        get: function () {
            return this.e7;
        },
        set: function (a) {
            var b = this.gb;
            if (a != b) {
                this.e7 = a;
                this.sv("ShouldAvoidAxisAnnotationCollisions", b, this.gb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gd", {
        get: function () {
            return this.e9;
        },
        set: function (a) {
            var b = this.e9;
            if (a != b) {
                this.e9 = a;
                this.sv("ShouldPanOnMaximumZoom", b, this.e9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ft", {
        get: function () {
            return this.e1;
        },
        set: function (a) {
            var b = this.ft;
            if (a != b) {
                this.e1 = a;
                this.sv("FinalValueAnnotationsVisible", b, this.ft);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "uy", {
        get: function () {
            return this.ub;
        },
        set: function (a) {
            var b = this.uy;
            if (a != b) {
                this.ub = a;
                this.sv("FinalValueAnnotationsBackground", b, this.uy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "uz", {
        get: function () {
            return this.uc;
        },
        set: function (a) {
            var b = this.uz;
            if (a != b) {
                this.uc = a;
                this.sv("FinalValueAnnotationsTextColor", b, this.uz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jz", {
        get: function () {
            return this.jq;
        },
        set: function (a) {
            var b = this.jz;
            if (a != b) {
                this.jq = a;
                this.sv("FinalValueAnnotationsPrecision", b, this.jz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fj", {
        get: function () {
            return this.er;
        },
        set: function (a) {
            var b = this.fj;
            if (a != b) {
                this.er = a;
                this.sv("AutoCalloutsVisible", b, this.fj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fl", {
        get: function () {
            return this.et;
        },
        set: function (a) {
            var b = this.fl;
            if (a != b) {
                this.et = a;
                this.sv("CalloutsVisible", b, this.fl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fk", {
        get: function () {
            return this.es;
        },
        set: function (a) {
            var b = this.fk;
            if (a != b) {
                this.es = a;
                this.sv("CalloutStyleUpdatingEventEnabled", b, this.fk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "calloutsItemsSource", {
        get: function () {
            return this.gt;
        },
        set: function (a) {
            var b = this.calloutsItemsSource;
            if (a != b) {
                this.gt = a;
                this.sv("CalloutsItemsSource", b, this.calloutsItemsSource);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ak", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            var b = this.ak;
            if (a != b) {
                this.aj = a;
                this.sv("CalloutsAllowedPositions", b, this.ak);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "lm", {
        get: function () {
            return this.kl;
        },
        set: function (a) {
            var b = this.lm;
            if (a != b) {
                this.kl = a;
                this.sv("CalloutsXMemberPath", b, this.lm);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "lo", {
        get: function () {
            return this.km;
        },
        set: function (a) {
            var b = this.lo;
            if (a != b) {
                this.km = a;
                this.sv("CalloutsYMemberPath", b, this.lo);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "li", {
        get: function () {
            return this.kk;
        },
        set: function (a) {
            var b = this.li;
            if (a != b) {
                this.kk = a;
                this.sv("CalloutsLabelMemberPath", b, this.li);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "lf", {
        get: function () {
            return this.kj;
        },
        set: function (a) {
            var b = this.lf;
            if (a != b) {
                this.kj = a;
                this.sv("CalloutsContentMemberPath", b, this.lf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "du", {
        get: function () {
            return this.dt;
        },
        set: function (a) {
            var b = this.dt;
            if (a != b) {
                this.dt = a;
                this.sv("ValueLines", b, this.dt);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ai", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            var b = this.y;
            if (a != b) {
                this.y = a;
                this.sv("ValueLinesBrushes", b, this.y);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i8", {
        get: function () {
            return this.hv;
        },
        set: function (a) {
            var b = this.hv;
            if (a != b) {
                this.hv = a;
                this.sv("ValueLinesThickness", b, this.hv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "di", {
        get: function () {
            return this.dg;
        },
        set: function (a) {
            var b = this.dg;
            this.dg = a;
            if (b != this.dg) {
                this.sv("HorizontalViewScrollbarMode", enumGetBox(SeriesViewerScrollbarMode_$type, b), enumGetBox(SeriesViewerScrollbarMode_$type, this.dg));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dj", {
        get: function () {
            return this.dh;
        },
        set: function (a) {
            var b = this.dh;
            this.dh = a;
            if (b != this.dh) {
                this.sv("VerticalViewScrollbarMode", enumGetBox(SeriesViewerScrollbarMode_$type, b), enumGetBox(SeriesViewerScrollbarMode_$type, this.dh));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "df", {
        get: function () {
            return this.de;
        },
        set: function (a) {
            var b = this.de;
            this.de = a;
            if (b != this.de) {
                this.sv("HorizontalViewScrollbarPosition", enumGetBox(SeriesViewerHorizontalScrollbarPosition_$type, b), enumGetBox(SeriesViewerHorizontalScrollbarPosition_$type, this.de));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dl", {
        get: function () {
            return this.dk;
        },
        set: function (a) {
            var b = this.dk;
            this.dk = a;
            if (b != this.dk) {
                this.sv("VerticalViewScrollbarPosition", enumGetBox(SeriesViewerVerticalScrollbarPosition_$type, b), enumGetBox(SeriesViewerVerticalScrollbarPosition_$type, this.dk));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "u4", {
        get: function () {
            return this.ud;
        },
        set: function (a) {
            var b = this.ud;
            this.ud = a;
            if (b != this.ud) {
                this.sv("HorizontalViewScrollbarFill", b, this.ud);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "u5", {
        get: function () {
            return this.ue;
        },
        set: function (a) {
            var b = this.ue;
            this.ue = a;
            if (b != this.ue) {
                this.sv("HorizontalViewScrollbarOutline", b, this.ue);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ij", {
        get: function () {
            return this.g7;
        },
        set: function (a) {
            var b = this.g7;
            this.g7 = a;
            if (b != this.g7) {
                this.sv("HorizontalViewScrollbarStrokeThickness", b, this.g7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ii", {
        get: function () {
            return this.g6;
        },
        set: function (a) {
            var b = this.g6;
            this.g6 = a;
            if (b != this.g6) {
                this.sv("HorizontalViewScrollbarMaxOpacity", b, this.g6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ie", {
        get: function () {
            return this.g3;
        },
        set: function (a) {
            var b = this.g3;
            this.g3 = a;
            if (b != this.g3) {
                this.sv("HorizontalViewScrollbarCornerRadius", b, this.g3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ig", {
        get: function () {
            return this.g4;
        },
        set: function (a) {
            var b = this.g4;
            this.g4 = a;
            if (b != this.g4) {
                this.sv("HorizontalViewScrollbarHeight", b, this.g4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ih", {
        get: function () {
            return this.g5;
        },
        set: function (a) {
            var b = this.g5;
            this.g5 = a;
            if (b != this.g5) {
                this.sv("HorizontalViewScrollbarInset", b, this.g5);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "il", {
        get: function () {
            return this.g9;
        },
        set: function (a) {
            var b = this.g9;
            this.g9 = a;
            if (b != this.g9) {
                this.sv("HorizontalViewScrollbarTrackStartInset", b, this.g9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ik", {
        get: function () {
            return this.g8;
        },
        set: function (a) {
            var b = this.g8;
            this.g8 = a;
            if (b != this.g8) {
                this.sv("HorizontalViewScrollbarTrackEndInset", b, this.g8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fv", {
        get: function () {
            return this.e2;
        },
        set: function (a) {
            var b = this.e2;
            this.e2 = a;
            if (b != this.e2) {
                this.sv(DomainChart.os, b, this.e2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "u9", {
        get: function () {
            return this.uh;
        },
        set: function (a) {
            var b = this.uh;
            this.uh = a;
            if (b != this.uh) {
                this.sv("VerticalViewScrollbarFill", b, this.uh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "va", {
        get: function () {
            return this.ui;
        },
        set: function (a) {
            var b = this.ui;
            this.ui = a;
            if (b != this.ui) {
                this.sv("VerticalViewScrollbarOutline", b, this.ui);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jc", {
        get: function () {
            return this.hz;
        },
        set: function (a) {
            var b = this.hz;
            this.hz = a;
            if (b != this.hz) {
                this.sv("VerticalViewScrollbarStrokeThickness", b, this.hz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jb", {
        get: function () {
            return this.hy;
        },
        set: function (a) {
            var b = this.hy;
            this.hy = a;
            if (b != this.hy) {
                this.sv("VerticalViewScrollbarMaxOpacity", b, this.hy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i9", {
        get: function () {
            return this.hw;
        },
        set: function (a) {
            var b = this.hw;
            this.hw = a;
            if (b != this.hw) {
                this.sv("VerticalViewScrollbarCornerRadius", b, this.hw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jf", {
        get: function () {
            return this.h2;
        },
        set: function (a) {
            var b = this.h2;
            this.h2 = a;
            if (b != this.h2) {
                this.sv("VerticalViewScrollbarWidth", b, this.h2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ja", {
        get: function () {
            return this.hx;
        },
        set: function (a) {
            var b = this.hx;
            this.hx = a;
            if (b != this.hx) {
                this.sv("VerticalViewScrollbarInset", b, this.hx);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "je", {
        get: function () {
            return this.h1;
        },
        set: function (a) {
            var b = this.h1;
            this.h1 = a;
            if (b != this.h1) {
                this.sv("VerticalViewScrollbarTrackStartInset", b, this.h1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jd", {
        get: function () {
            return this.h0;
        },
        set: function (a) {
            var b = this.h0;
            this.h0 = a;
            if (b != this.h0) {
                this.sv("VerticalViewScrollbarTrackEndInset", b, this.h0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gg", {
        get: function () {
            return this.ff;
        },
        set: function (a) {
            var b = this.ff;
            this.ff = a;
            if (b != this.ff) {
                this.sv(DomainChart.q7, b, this.ff);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jh", {
        get: function () {
            return this.h4;
        },
        set: function (a) {
            var b = this.h4;
            this.h4 = a;
            if (b != this.h4) {
                this.sv("WindowRectMinWidth", b, this.h4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jg", {
        get: function () {
            return this.h3;
        },
        set: function (a) {
            var b = this.h3;
            this.h3 = a;
            if (b != this.h3) {
                this.sv("WindowRectMinHeight", b, this.h3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jj", {
        get: function () {
            return this.h6;
        },
        set: function (a) {
            var b = this.h6;
            this.h6 = a;
            if (b != this.h6) {
                this.sv("WindowSizeMinWidth", b, this.h6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ji", {
        get: function () {
            return this.h5;
        },
        set: function (a) {
            var b = this.h5;
            this.h5 = a;
            if (b != this.h5) {
                this.sv("WindowSizeMinHeight", b, this.h5);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.$t = markType(DomainChart, 'DomainChart', Base.$, [INotifyPropertyChanged_$type, IDataLegendTarget_$type, IToolbarTarget_$type]);
    DomainChart.ki = new Random(0);
    DomainChart.kh = new Random(0);
    DomainChart.mz = "DataToolTipShouldUpdateWhenSeriesDataChanges";
    DomainChart.os = "HorizontalViewScrollbarShouldAddAutoTrackInsets";
    DomainChart.q7 = "VerticalViewScrollbarShouldAddAutoTrackInsets";
    return DomainChart;
}(Base));
export { DomainChart };
/**
 * @hidden
 */
export var IDomainChartToolbarProvider_$type = /*@__PURE__*/ new Type(null, 'IDomainChartToolbarProvider');
