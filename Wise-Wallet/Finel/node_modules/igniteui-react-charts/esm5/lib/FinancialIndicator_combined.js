/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { FinancialSeries } from "./FinancialSeries";
import { ITrendLineSeries_$type } from "./ITrendLineSeries";
import { IndicatorDisplayType_$type } from "./IndicatorDisplayType";
import { DependencyProperty } from "igniteui-react-core";
import { TrendLineType_$type } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { PenLineCap_$type } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { CategoryFrame } from "./CategoryFrame";
import { Number_$type, typeCast, enumGetBox, EnumUtil, runOn, markType, markDep } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { ISortingAxis_$type } from "./ISortingAxis";
import { CategoryTrendLineManagerFactory } from "./CategoryTrendLineManagerFactory";
import { FinancialSeriesView } from "./FinancialSeriesView";
import { FinancialBucketCalculator } from "./FinancialBucketCalculator";
import { TrendResolutionParams } from "./TrendResolutionParams";
import { CategorySeries } from "./CategorySeries";
import { NotImplementedException } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
import { Pool$1 } from "igniteui-react-core";
import { LineGeometry } from "igniteui-react-core";
import { PathGeometry } from "igniteui-react-core";
import { GeometryGroup } from "igniteui-react-core";
import { Defaults } from "./Defaults";
import { Extensions } from "igniteui-react-core";
import { IndicatorRenderer } from "./IndicatorRenderer";
/**
 * @hidden
 */
var FinancialIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialIndicator, _super);
    function FinancialIndicator() {
        var _this = _super.call(this) || this;
        _this._indicatorColumn = null;
        _this.tu = null;
        _this.qo = new CategoryFrame(3);
        _this.qq = new CategoryFrame(3);
        _this.qm = new CategoryFrame(3);
        _this.indicatorColumn = new List$1(Number_$type, 0);
        _this.tu = new AxisRange(-100, 100);
        return _this;
    }
    FinancialIndicator.prototype.get_dt = function () {
        return true;
    };
    FinancialIndicator.prototype.by = function () {
        return new FinancialIndicatorView(this);
    };
    FinancialIndicator.prototype.l4 = function (a) {
        _super.prototype.l4.call(this, a);
        this.tv = a;
    };
    FinancialIndicator.prototype.t8 = function (a) {
        if (this.q6 != null && !this.q6.c0()) {
            this.mn(true);
        }
    };
    FinancialIndicator.prototype.t0 = function (a, b, c) {
        if (isNaN_(b.x) || isNaN_(b.y)) {
            return false;
        }
        var d = this.q6;
        var e = 0;
        if (d != null) {
            e = d.e3(d.l6);
        }
        if ((a.y >= e && a.y <= b.y) || (a.y <= e && a.y >= b.y)) {
            return true;
        }
        return false;
    };
    FinancialIndicator.prototype.bq = function () {
        if (this.br == 0) {
            return 1;
        }
        else {
            return _super.prototype.bq.call(this);
        }
    };
    FinancialIndicator.prototype.p3 = function (a) {
        if (this.qk == null || this.q6 == null) {
            return Rect.empty;
        }
        var b = this.pn(a);
        var c = this.b1.bv;
        var d = this.b1.bu;
        var e = this.getEffectiveViewport1(this.b1);
        var f = new ScalerParams(0, c, d, this.q6.cg, e);
        f.b = this.gg();
        var g = this.aj(this.qk, this.qm.f, this.sh(this.b1), this.sj(this.b1), a, true);
        if (g == null) {
            return Rect.empty;
        }
        var h = g[0];
        var i = g[1];
        var j = Math.abs(b.x - h[0]);
        var k = Math.abs(b.x - i[0]);
        var l = this.q6.ei(this.q6.l6, f);
        var m = 1;
        if (j < k) {
            var n = h[0] - 0.5 * m;
            var o = h[1];
            var p = l;
            return new Rect(0, n, Math.min(o, p), m, Math.max(o, p) - Math.min(o, p));
        }
        else {
            var q = i[0] - 0.5 * m;
            var r = i[1];
            var s = l;
            return new Rect(0, q, Math.min(r, s), m, Math.max(r, s) - Math.min(r, s));
        }
    };
    FinancialIndicator.prototype.ez = function (a, b) {
        var c = this.ps(this.px(a), true, false);
        if (this.tx == 1) {
            if (this.t0(a, c, b)) {
                return true;
            }
        }
        if (this.tx == 1 || this.tx == 0) {
            if (this.ey(a, b)) {
                return true;
            }
        }
        if (this.tx == 2) {
            if (this.e2(a, b)) {
                return true;
            }
        }
        return false;
    };
    FinancialIndicator.prototype.k5 = function (a, b, c, d) {
        _super.prototype.k5.call(this, a, b, c, d);
        if (this.qk != null && typeCast(ISortingAxis_$type, this.qk) !== null) {
            this.qk.i$i();
        }
        if (this.tv.b7) {
            this.tv.b5.g$e(a, b, c, d);
        }
        if (d != null && this.rw.containsKey(d)) {
            var e = this.rw.tryGetValue(d, d);
            d = e.p1;
        }
        if (this.qk != null && typeCast(ISortingAxis_$type, this.qk) !== null) {
            a = 4;
            b = 0;
            c = this.cl.count;
        }
        switch (a) {
            case 3:
                if (this.tz(b, c, d)) {
                    this.ua(b, c, d);
                    this.t8(true);
                }
                break;
            case 2:
                if (this.tz(b, this.cl.count - b, d)) {
                    this.ua(b, this.cl.count - b, d);
                    this.t8(true);
                }
                break;
            case 1:
                if (this.tz(b, this.cl.count - b, d)) {
                    var f = new Array(c);
                    for (var g = 0; g < c; g++) {
                        f[g] = 0;
                    }
                    this.indicatorColumn.s(b, f);
                    this.ua(b, this.cl.count - b, d);
                    this.t8(true);
                }
                break;
            case 0:
                if (this.tz(b, this.cl.count - b, d)) {
                    this.indicatorColumn.v(b, c);
                    this.ua(b, this.cl.count - b, d);
                    this.t8(true);
                }
                break;
            case 4:
                if (this.tz(b, this.cl.count - b, d)) {
                    this.indicatorColumn = new List$1(Number_$type, 2, this.cl.count);
                    var h = new Array(c);
                    for (var i = 0; i < c; i++) {
                        h[i] = 0;
                    }
                    this.indicatorColumn.s(0, h);
                    this.ua(b, this.cl.count - b, d);
                    this.t8(true);
                }
                break;
        }
    };
    FinancialIndicator.prototype.get_tw = function () {
        return 0;
    };
    Object.defineProperty(FinancialIndicator.prototype, "tw", {
        get: function () {
            return this.get_tw();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialIndicator.prototype, "ul", {
        get: function () {
            return this.c(FinancialIndicator.ub);
        },
        set: function (a) {
            this.h(FinancialIndicator.ub, a);
        },
        enumerable: false,
        configurable: true
    });
    FinancialIndicator.prototype.t5 = function () {
        return -1;
    };
    Object.defineProperty(FinancialIndicator.prototype, "indicatorColumn", {
        get: function () {
            return this._indicatorColumn;
        },
        set: function (a) {
            this._indicatorColumn = a;
        },
        enumerable: false,
        configurable: true
    });
    FinancialIndicator.prototype.l9 = function (a, b, c, d) {
        switch (b) {
            case "XAxis":
                this.tv.cd();
                break;
            case "TrendLineType":
                var e = EnumUtil.getEnumValue(TrendLineType_$type, d);
                if (e != 0) {
                    this.tv.b5 = CategoryTrendLineManagerFactory.a(this.tv.b5, this.qk, this.nf, this, this.co);
                }
                break;
        }
        _super.prototype.l9.call(this, a, b, c, d);
        if (this.tv.b7 && this.tv.b5.g$b(a, b, c, d)) {
            this.mn(false);
            var f = typeCast(FinancialIndicatorView.$, this.b0);
            if (f != null && f.b7) {
                f.b5.g$b(a, b, c, d);
            }
            this.lu();
        }
        switch (b) {
            case "FastItemsSource":
                if (this.cl != null) {
                    this.indicatorColumn = new List$1(Number_$type, 2, this.cl.count);
                    var g = new Array(this.cl.count);
                    for (var h = 0; h < this.cl.count; h++) {
                        g[h] = 0;
                    }
                    this.indicatorColumn.s(0, g);
                    this.ua(0, this.cl.count, null);
                    if (this.q6 != null && !this.q6.c0()) {
                        this.q1.bx.e(this.fx);
                        this.mn(false);
                    }
                }
                break;
            case "TrendLineBrush":
                this.m1();
                break;
            case FinancialIndicator.$$p[0]:
                this.k2(true, this.b1);
                this.m2();
                this.mn(false);
                this.lu();
                break;
            case "OpenColumn":
            case "HighColumn":
            case "LowColumn":
            case "CloseColumn":
            case "VolumeColumn":
                if (this.cl != null) {
                    if (this.indicatorColumn.count != this.cl.count) {
                        this.indicatorColumn = new List$1(Number_$type, 2, this.cl.count);
                        var i = new Array(this.cl.count);
                        for (var j = 0; j < this.cl.count; j++) {
                            i[j] = 0;
                        }
                        this.indicatorColumn.s(0, i);
                    }
                    if (this.tz(0, this.cl.count - 1, b)) {
                        this.t9();
                    }
                }
                break;
            case "XAxis":
                if (this.qk != null && (typeCast(ISortingAxis_$type, this.qk) !== null || typeCast(ISortingAxis_$type, c) !== null)) {
                    this.t9();
                }
                break;
            case "YAxis":
            case FinancialIndicator.$$p[1]:
                this.t9();
                this.lu();
                break;
            case "TrendLineType":
                this.lu();
                break;
        }
    };
    FinancialIndicator.prototype.gn = function (a, b, c) {
        if (this.indicatorColumn == null) {
            return _super.prototype.gn.call(this, a, b, c);
        }
        var d = this.getEffectiveViewport1(this.b1);
        var e = this.sb(this.b1.bv, this.b1.bu, d);
        var f = new ScalerParams(0, this.b1.bv, this.b1.bu, this.qk.cg, d);
        f.c = this.ce.tp;
        return this.gp(this.indicatorColumn, a, this.qk, f, e, runOn(this, this.sa), b, c);
    };
    FinancialIndicator.prototype.ho = function (a, b) {
        if (this.indicatorColumn == null) {
            return _super.prototype.ho.call(this, a, b);
        }
        return this.hp(a, b, this.qk, runOn(this, this.sa), this.indicatorColumn);
    };
    FinancialIndicator.prototype.hm = function (a, b) {
        if (this.indicatorColumn == null) {
            return _super.prototype.hm.call(this, a, b);
        }
        return this.hn(a, b, this.qk, runOn(this, this.sa), this.indicatorColumn);
    };
    FinancialIndicator.prototype.get_fc = function () {
        return true;
    };
    FinancialIndicator.prototype.tz = function (a, b, c) {
        if (c == null) {
            return true;
        }
        if (this.t1(a, b).contains(c)) {
            return true;
        }
        return false;
    };
    FinancialIndicator.prototype.ua = function (a, b, c) {
        this.ty(a, b);
    };
    FinancialIndicator.prototype.aq = function (a) {
        if (this.cl == null) {
            return null;
        }
        if (a != null && a == this.q6) {
            return this.tu;
        }
        return null;
    };
    FinancialIndicator.prototype.eq = function (a) {
        var b = this.cl != null ? this.cl.indexOf(a) : -1;
        var c = this.b1.bv;
        c = c.copy();
        var d = this.b1.bu;
        var e = new Rect(0, 0, 0, 1, 1);
        var f = this.p1(this.b1);
        if (b >= 0 && Rect.l_op_Inequality(c, null) && Rect.l_op_Inequality(d, null)) {
            if (this.qk != null) {
                var g = new ScalerParams(0, e, e, this.qk.cg, f);
                var h = this.qk.ei(b, g);
                if (h < c.left + 0.1 * c.width) {
                    h = h + 0.4 * c.width;
                }
                if (h > c.right - 0.1 * c.width) {
                    h = h - 0.4 * c.width;
                }
                c.x = h - 0.5 * c.width;
            }
            if (this.q6 != null && this.indicatorColumn != null && b < this.indicatorColumn.count) {
                var i = new ScalerParams(0, e, e, this.q6.cg, f);
                i.b = this.gg();
                var j = this.q6.ei(this.indicatorColumn._inner[b], i);
                if (j < c.top + 0.1 * c.height) {
                    j = j + 0.4 * c.height;
                }
                if (j > c.bottom - 0.1 * c.height) {
                    j = j - 0.4 * c.height;
                }
                c.y = j - 0.5 * c.height;
            }
            this.b9.au(this.ce, c, true);
        }
        return b >= 0;
    };
    FinancialIndicator.prototype.fd = function (a, b, c) {
        var d = _super.prototype.fd.call(this, a, b, c);
        if (this.indicatorColumn == null || this.indicatorColumn.count == 0) {
            d = false;
        }
        return d;
    };
    FinancialIndicator.prototype.tb = function (a, b) {
        var _this = this;
        _super.prototype.tb.call(this, a, b);
        var c = b.bv;
        var d = b.bu;
        var e = this.getEffectiveViewport1(b);
        var f = this.qk;
        var g = this.q6;
        var h = new ScalerParams(0, c, d, f.cg, e);
        var i = new ScalerParams(0, c, d, g.cg, e);
        i.b = this.gg();
        a.f.clear();
        a.m.clear();
        a.p.clear();
        var j = 0;
        var k = typeCast(ISortingAxis_$type, this.qk);
        if (k != null && k.i$b.count != this.cl.count) {
            return;
        }
        j = this.sb(c, d, e);
        var l = this.t5();
        if (l == -1) {
            l = this.trendLinePeriod;
        }
        var m = typeCast(FinancialIndicatorView.$, b);
        if (m.b7) {
            m.b5.prepareLineCore(a.p, this.trendLineType, this.indicatorColumn, l, function (n) { return _this.qk.ei(n, h); }, function (n) { return _this.q6.ei(n, i); }, ((function () {
                var $ret = new TrendResolutionParams();
                $ret.c = b.bx.b;
                $ret.d = b.bx.c;
                $ret.e = b.bx.d;
                $ret.a = j;
                $ret.b = _this.fx;
                $ret.f = d;
                $ret.g = c;
                return $ret;
            })()));
        }
        var n = this.qk.el(2, h) - this.qk.el(1, h);
        for (var o = b.bx.c; o <= b.bx.d; ++o) {
            var p = void 0;
            if (k == null) {
                p = b.bx.getBucket(o);
            }
            else {
                var q = k.i$b._inner[o];
                var r = k.i$d(q);
                var s = this.indicatorColumn._inner[o];
                var t = s;
                var u = r;
                while (o < b.bx.d) {
                    q = k.i$b._inner[o + 1];
                    u = k.i$d(q);
                    if (u - r > n) {
                        break;
                    }
                    o++;
                    var v = this.indicatorColumn._inner[o];
                    s = Math.min(s, v);
                    t = Math.max(t, v);
                }
                var w = NaN;
                if (!isNaN_(r)) {
                    w = this.qk.ei(r, h);
                }
                p = [w, s, t];
            }
            if (!isNaN_(p[0])) {
                if (this.qk != null && typeCast(ISortingAxis_$type, this.qk) !== null) {
                    p[0] = p[0] + j;
                }
                else {
                    p[0] = f.ei(p[0], h) + j;
                }
                p[1] = g.ei(p[1], i);
                if (b.bx.b > 1 || k != null) {
                    p[2] = g.ei(p[2], i);
                }
                else {
                    p[2] = p[1];
                }
                a.f.add(p);
            }
        }
        return;
    };
    FinancialIndicator.prototype.k2 = function (a, b) {
        _super.prototype.k2.call(this, a, b);
        var c = b;
        c.b8(a);
        if (c.b7) {
            c.b5.g$d();
        }
    };
    FinancialIndicator.prototype.qu = function () {
        switch (this.tx) {
            case 1: return 1;
            case 2: return 1;
            case 0: return 12;
        }
        return 1;
    };
    FinancialIndicator.prototype.td = function (a, b) {
        _super.prototype.td.call(this, a, b);
        var c = typeCast(FinancialIndicatorView.$, b);
        var d = function (e) { return a.f._inner[e][0]; };
        var e = function (f) { return a.f._inner[f][1]; };
        if (c.b7) {
            c.b5.g$d();
            c.b5.g$g(a.p);
        }
        var f = b.bu;
        var g = this.getEffectiveViewport1(b);
        var h = 0;
        var i = this.o5;
        var j = this.tq;
        if (b.b0(a)) {
            c.b8(false);
            if (a.f.count > 0) {
                switch (this.tx) {
                    case 0:
                        var k = CategorySeries.rr(a.f, a.f.count - 1, f, b.bv, false);
                        c.cc(a.f.count, d, e, true, k);
                        break;
                    case 1:
                        if (this.q6 != null) {
                            h = this.sf(b);
                        }
                        else {
                            h = 0.5 * (f.top + f.bottom);
                        }
                        var l = CategorySeries.rr(a.f, a.f.count - 1, f, b.bv, false);
                        c.ca(a.f.count, d, e, true, h, l);
                        break;
                    case 2:
                        h = this.sf(b);
                        c.cb(a.f.count, d, e, true, h);
                        break;
                    default: throw new NotImplementedException(0);
                }
            }
            b.b2(a);
        }
        var m = a.f;
        var n = this.cl.count;
        this.qt.a2(this, this.rs(), runOn(this, this.qc), this.sh(b), this.sj(b));
        var o = false;
        var p = this.qt.b;
        if (p != null) {
            o = true;
        }
        this.qt.ak = i;
        this.qt.ag = i;
        if (o) {
            var q = new ScalerParams(0, b.bv, b.bu, this.qk.cg, g);
            this.qt.f = false;
            this.ta(m, -1, n, this.qk, q, b.q);
        }
        this.qt.ad(c.cu, true, false, true, false);
        this.qt.ad(c.cw, true, false, true, false);
        this.qt.ad(c.cv, false, true, false, false);
        c.cv._opacity = 0.8 * this.qt.j * this.fu;
        this.qt.ad(c.ct, true, false, false, false);
        this.qt.ak = j;
        this.qt.ag = j;
        if (o) {
            var r = new ScalerParams(0, b.bv, b.bu, this.qk.cg, g);
            this.qt.f = true;
            this.ta(m, -1, n, this.qk, r, b.q);
        }
        this.qt.ad(c.cq, true, false, true, false);
        this.qt.ad(c.cs, true, false, true, false);
        this.qt.ad(c.cr, false, true, false, false);
        c.cr._opacity = 0.8 * this.qt.j * this.fu;
        this.qt.ad(c.cp, true, false, false, false);
        c.ce();
    };
    FinancialIndicator.prototype.m1 = function () {
        _super.prototype.m1.call(this);
        if (this.index < 0) {
            return;
        }
        if (this.tv.b7) {
            this.tv.cf();
        }
    };
    FinancialIndicator.prototype.t9 = function () {
        if (this.tv.b7) {
            this.tv.b5.g$i();
        }
        this.ty(0, this.indicatorColumn.count);
        if (this.q6 != null && !this.q6.c0()) {
            this.mn(false);
        }
    };
    FinancialIndicator.prototype.lc = function (a) {
        _super.prototype.lc.call(this, a);
        this.a9.exportTrendlineData(this, a, this.tv.b5.g$j);
    };
    FinancialIndicator.prototype.bb = function (a) {
        if (this.tx == 1 || this.tx == 2) {
            return 3;
        }
        else if (this.tx == 0) {
            return 2;
        }
        return a;
    };
    FinancialIndicator.$t = markType(FinancialIndicator, 'FinancialIndicator', FinancialSeries.$, [ITrendLineSeries_$type]);
    FinancialIndicator.ub = DependencyProperty.i("ActualTrendLineBrush", Brush.$, FinancialIndicator.$, new PropertyMetadata(2, null, function (a, b) { return a.raisePropertyChanged("ActualTrendLineBrush", b.oldValue, b.newValue); }));
    FinancialIndicator.$$p = markDep(DependencyProperty, PropertyMetadata, FinancialIndicator, 'raisePropertyChanged', ['DisplayType:tx:uc', [IndicatorDisplayType_$type, enumGetBox(IndicatorDisplayType_$type, 0)], 'IgnoreFirst:t3:ud', [1, 0], 'TrendLineType::uj', [TrendLineType_$type, enumGetBox(TrendLineType_$type, 0)], 'TrendLineThickness::ui', [1, 1.5], 'TrendLinePeriod::uh', [1, 7], 'TrendLineBrush::ue', [Brush.$, null], 'TrendLineZIndex:t4:uk', [1, 1001], 'TrendLineDashArray:um:uf', [DoubleCollection.$], 'TrendLineDashCap:un:ug', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)]]);
    return FinancialIndicator;
}(FinancialSeries));
export { FinancialIndicator };
/**
 * @hidden
 */
var FinancialIndicatorBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialIndicatorBucketCalculator, _super);
    function FinancialIndicatorBucketCalculator(a) {
        var _this = _super.call(this, a) || this;
        _this.f = null;
        _this.f = a;
        return _this;
    }
    FinancialIndicatorBucketCalculator.prototype.getBucket = function (a) {
        var b = a * this.b;
        var c = Math.min(b + this.b - 1, this.f.b3.indicatorColumn.count - 1);
        var d = NaN;
        var e = NaN;
        for (var f = b; f <= c; ++f) {
            var g = this.f.b3.indicatorColumn._inner[f];
            if (!isNaN_(d)) {
                if (!isNaN_(g)) {
                    d = Math.min(d, g);
                    e = Math.max(e, g);
                }
            }
            else {
                d = g;
                e = g;
            }
        }
        if (!isNaN_(d)) {
            return [0.5 * (b + c), d, e];
        }
        return [NaN, NaN, NaN];
    };
    FinancialIndicatorBucketCalculator.$t = markType(FinancialIndicatorBucketCalculator, 'FinancialIndicatorBucketCalculator', FinancialBucketCalculator.$);
    return FinancialIndicatorBucketCalculator;
}(FinancialBucketCalculator));
export { FinancialIndicatorBucketCalculator };
/**
 * @hidden
 */
var FinancialIndicatorView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialIndicatorView, _super);
    function FinancialIndicatorView(a) {
        var _this = _super.call(this, a) || this;
        _this.b3 = null;
        _this.b6 = null;
        _this.cu = ((function () {
            var $ret = new Path();
            $ret.an = new PathGeometry();
            return $ret;
        })());
        _this.cq = ((function () {
            var $ret = new Path();
            $ret.an = new PathGeometry();
            return $ret;
        })());
        _this.cv = ((function () {
            var $ret = new Path();
            $ret.an = new PathGeometry();
            return $ret;
        })());
        _this.cr = ((function () {
            var $ret = new Path();
            $ret.an = new PathGeometry();
            return $ret;
        })());
        _this.cw = ((function () {
            var $ret = new Path();
            $ret.an = new PathGeometry();
            return $ret;
        })());
        _this.cs = ((function () {
            var $ret = new Path();
            $ret.an = new PathGeometry();
            return $ret;
        })());
        _this.ct = ((function () {
            var $ret = new Path();
            $ret.an = new GeometryGroup();
            return $ret;
        })());
        _this.cp = ((function () {
            var $ret = new Path();
            $ret.an = new GeometryGroup();
            return $ret;
        })());
        _this.b4 = null;
        _this.cm = new Path();
        _this.co = new Path();
        _this.cn = new Path();
        _this.cl = new Path();
        _this.ci = new Path();
        _this.ck = new Path();
        _this.cj = new Path();
        _this.ch = new Path();
        _this.b3 = a;
        _this.b6 = ((function () {
            var $ret = new Pool$1(LineGeometry.$);
            $ret.create = runOn(_this, _this.cg);
            $ret.destroy = runOn(_this, _this.b9);
            return $ret;
        })());
        return _this;
    }
    FinancialIndicatorView.prototype.by = function () {
        return new FinancialIndicatorBucketCalculator(this);
    };
    FinancialIndicatorView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
            this.b3.tq = Defaults.ah;
            this.b3.tx = this.b3.tw;
        }
    };
    FinancialIndicatorView.prototype.cg = function () {
        return new LineGeometry();
    };
    FinancialIndicatorView.prototype.b9 = function (a) {
    };
    Object.defineProperty(FinancialIndicatorView.prototype, "b5", {
        get: function () {
            if (this.b4 == null) {
                this.b4 = CategoryTrendLineManagerFactory.a(this.b4, this.e.as(), this.e.nf, this.e, this.e.co);
            }
            return this.b4;
        },
        set: function (a) {
            this.b4 = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialIndicatorView.prototype, "b7", {
        get: function () {
            return this.b4 != null;
        },
        enumerable: false,
        configurable: true
    });
    FinancialIndicatorView.prototype.b8 = function (a) {
        Extensions.e(this.cu.an);
        Extensions.e(this.cv.an);
        Extensions.e(this.cw.an);
        Extensions.e(this.cq.an);
        Extensions.e(this.cr.an);
        Extensions.e(this.cs.an);
        Extensions.d(this.ct.an);
        Extensions.d(this.cp.an);
        if (a) {
            this.b6.count = 0;
        }
        this.aq();
    };
    FinancialIndicatorView.prototype.ce = function () {
    };
    FinancialIndicatorView.prototype.cc = function (a, b, c, d, e) {
        IndicatorRenderer.g(a, b, c, d, this.bv, this.bu, this.cu, this.cq, this.bx.b, this.e.fx, e);
        this.aq();
    };
    FinancialIndicatorView.prototype.ca = function (a, b, c, d, e, f) {
        IndicatorRenderer.e(a, b, c, d, this.bv, this.bu, this.cu, this.cv, this.cq, this.cr, e, this.bx.b, this.e.fx, f);
        this.aq();
    };
    FinancialIndicatorView.prototype.cb = function (a, b, c, d, e) {
        IndicatorRenderer.f(a, b, c, d, this.bu, e, this.b6, this.ct, this.cp);
        this.aq();
    };
    FinancialIndicatorView.prototype.cf = function () {
        this.b3.ul = null;
        if (this.b3.trendLineBrush != null) {
            this.b3.ul = this.b3.trendLineBrush;
        }
        else {
            this.b3.ul = this.b3.o5;
        }
    };
    FinancialIndicatorView.prototype.bc = function () {
        _super.prototype.bc.call(this);
        var a = this.bo();
        this.cm.an = this.cu.an;
        this.co.an = this.cw.an;
        this.cn.an = this.cv.an;
        this.cl.an = this.ct.an;
        this.ci.an = this.cq.an;
        this.ck.an = this.cs.an;
        this.cj.an = this.cr.an;
        this.ch.an = this.cp.an;
        this.cm._stroke = a;
        this.co._stroke = a;
        this.cm.ad = this.e.fy + 3;
        this.co.ad = this.e.fy + 3;
        this.cn._fill = a;
        this.cn._opacity = 1;
        this.cl._stroke = a;
        this.cl.ad = this.e.fy + 3;
        this.ci._stroke = a;
        this.ck._stroke = a;
        this.ci.ad = this.e.fy + 3;
        this.ck.ad = this.e.fy + 3;
        this.cj._fill = a;
        this.cj._opacity = 1;
        this.ch._stroke = a;
        this.ch.ad = this.e.fy + 3;
    };
    FinancialIndicatorView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (a.d) {
            if (b) {
                if (this.b3.tx == 2) {
                    a.t(this.cl);
                    a.t(this.ch);
                }
                else {
                    a.t(this.cn);
                    a.t(this.cm);
                    a.t(this.co);
                    a.t(this.cj);
                    a.t(this.ci);
                    a.t(this.ck);
                }
            }
            else {
                if (this.b3.tx == 2) {
                    a.t(this.ct);
                    a.t(this.cp);
                }
                else {
                    a.t(this.cv);
                    a.t(this.cu);
                    a.t(this.cw);
                    a.t(this.cr);
                    a.t(this.cq);
                    a.t(this.cs);
                }
            }
        }
    };
    FinancialIndicatorView.prototype.a5 = function (a, b) {
        if (a.d) {
            if (this.b3.trendLineType != 0 && !b) {
                var c = this.b5.g$j;
                c.ad = this.b3.trendLineThickness;
                c._stroke = this.b3.ul;
                c.aj = this.b3.un;
                c.ai = this.b3.um;
                a.v(c);
            }
        }
        _super.prototype.a5.call(this, a, b);
    };
    FinancialIndicatorView.prototype.al = function (a) {
        _super.prototype.al.call(this, a);
        this.e.a9.exportPathData(a, this.ct, "positiveColumnsShape", ["Positive", "Main"]);
        this.e.a9.exportPathData(a, this.cp, "negativeColumnsShape", ["Negative"]);
        this.e.a9.exportPathData(a, this.cu, "positive0", ["Positive", "Main"]);
        this.e.a9.exportPathData(a, this.cw, "positive1", ["Positive"]);
        this.e.a9.exportPathData(a, this.cv, "positive01", ["PositiveFill"]);
        this.e.a9.exportPathData(a, this.cq, "negative0", ["Negative", "Main"]);
        this.e.a9.exportPathData(a, this.cs, "negative1", ["Negative"]);
        this.e.a9.exportPathData(a, this.cr, "negative01", ["NegativeFill"]);
    };
    FinancialIndicatorView.prototype.cd = function () {
        if (this.b7) {
            this.b4 = CategoryTrendLineManagerFactory.a(this.b4, this.e.as(), this.e.nf, this.e, this.e.co);
        }
    };
    FinancialIndicatorView.$t = markType(FinancialIndicatorView, 'FinancialIndicatorView', FinancialSeriesView.$);
    return FinancialIndicatorView;
}(FinancialSeriesView));
export { FinancialIndicatorView };
