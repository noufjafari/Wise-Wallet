/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { Base, typeCast, markType, Array_$type, Number_$type, Point_$type, enumGetBox, runOn, fromEnum, markDep } from "igniteui-react-core";
import { IBucketizer_$type } from "./IBucketizer";
import { ArgumentNullException } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { ISortingAxis_$type } from "./ISortingAxis";
import { ScalerParams } from "./ScalerParams";
import { Series } from "./Series";
import { truncate, intDivide, isNaN_, isInfinity } from "igniteui-react-core";
import { FramePreparer } from "./FramePreparer";
import { IIsCategoryBased_$type } from "./IIsCategoryBased";
import { List$1 } from "igniteui-react-core";
import { ISupportsMarkers_$type } from "./ISupportsMarkers";
import { IProvidesViewport_$type } from "./IProvidesViewport";
import { ISupportsErrorBars_$type } from "./ISupportsErrorBars";
import { CategoryFrame } from "./CategoryFrame";
import { PreparationParams } from "./PreparationParams";
import { IDateTimeAxis_$type } from "./IDateTimeAxis";
import { NumericAxisBase } from "./NumericAxisBase";
import { IHasCategoryTrendline_$type } from "./IHasCategoryTrendline";
import { IHasSingleValueCategory_$type } from "./IHasSingleValueCategory";
import { DefaultCategoryTrendlineHost } from "./DefaultCategoryTrendlineHost";
import { DefaultSingleValueProvider } from "./DefaultSingleValueProvider";
import { SingleValuesHolder } from "./SingleValuesHolder";
import { MarkerSeries } from "./MarkerSeries";
import { IHasCategoryModePreference_$type } from "./IHasCategoryModePreference";
import { ICategorySeriesInteractionManager_$type } from "./ICategorySeriesInteractionManager";
import { DVContainer } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { CategoryTransitionInMode_$type } from "./CategoryTransitionInMode";
import { HighlightingInfo } from "./HighlightingInfo";
import { CategoryTransitionSourceFramePreparer } from "./CategoryTransitionSourceFramePreparer";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { Marker } from "./Marker";
import { MarkerSeriesView } from "./MarkerSeriesView";
import { CategorySeriesRenderManager } from "./CategorySeriesRenderManager";
import { Pool$1 } from "igniteui-react-core";
import { Clipper } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { round10N } from "igniteui-react-core";
/**
 * @hidden
 */
var CategoryBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryBucketCalculator, _super);
    function CategoryBucketCalculator(a) {
        var _this = _super.call(this) || this;
        _this.c = null;
        _this.e = 0;
        _this.f = 0;
        _this.d = 0;
        if (a == null) {
            throw new ArgumentNullException(0, "view");
        }
        _this.c = a;
        _this.e = -1;
        _this.d = 0;
        return _this;
    }
    CategoryBucketCalculator.prototype.getBucket = function (a) {
        return null;
    };
    CategoryBucketCalculator.prototype.getBucketWithoutUnknowns = function (a) {
        return this.getBucket(a);
    };
    CategoryBucketCalculator.prototype.getErrorBucket = function (a, b) {
        return NaN;
    };
    CategoryBucketCalculator.prototype.g = function (a) {
        var b = this.c.bv;
        var c = this.c.bu;
        var d = this.c.ct;
        var e = typeCast(CategoryAxisBase.$, d.fetchXAxis());
        var f = d.cl;
        if (b.isEmpty || c.isEmpty || e == null || f == null || f.count == 0) {
            this.d = 0;
            return;
        }
        var g = d.getEffectiveViewport1(this.c);
        var h = d.pz(this.c);
        var i = typeCast(ISortingAxis_$type, e);
        if (i == null || i.i$b == null) {
            var j = new ScalerParams(0, b, c, e.cg, g);
            var k = Math.floor(e.el(h.left, j));
            var l = Math.ceil(e.el(h.right, j));
            if (e.cg) {
                l = Math.ceil(e.el(h.left, j));
                k = Math.floor(e.el(h.right, j));
            }
            l = Math.min(l, e.lf - 1);
            var m = Math.floor((l - k + 1) * a / h.width);
            this.d = truncate(Math.max(1, m));
            this.e = truncate(Math.max(0, Math.floor(k / this.d) - 1));
            this.f = truncate(Math.ceil(l / this.d));
        }
        else {
            this.e = i.i$e(b, c, g, h);
            this.f = i.i$g(b, c, g, h);
            this.d = 1;
        }
    };
    CategoryBucketCalculator.prototype.getBucketInfo = function (a, b, c, d) {
        a = this.e;
        b = this.f;
        c = this.d;
        d = this.c.ct.fx;
        return {
            p0: a,
            p1: b,
            p2: c,
            p3: d
        };
    };
    CategoryBucketCalculator.prototype.cacheValues = function () {
    };
    CategoryBucketCalculator.prototype.unCacheValues = function () {
    };
    CategoryBucketCalculator.$t = markType(CategoryBucketCalculator, 'CategoryBucketCalculator', Base.$, [IBucketizer_$type]);
    return CategoryBucketCalculator;
}(Base));
export { CategoryBucketCalculator };
/**
 * @hidden
 */
var CategoryFramePreparerBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryFramePreparerBase, _super);
    function CategoryFramePreparerBase(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = this;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    var d = [c, typeCast(ISupportsMarkers_$type, c), typeCast(IProvidesViewport_$type, c), typeCast(ISupportsErrorBars_$type, c), typeCast(IBucketizer_$type, c)];
                    {
                        var f = d[0];
                        var g = d[1];
                        var h = d[2];
                        var i = d[3];
                        var j = d[4];
                        _this = _super.call(this, 1, g, h, i) || this;
                        _this.g = null;
                        _this.h = null;
                        _this.m = false;
                        _this.o = new List$1(Array_$type, 0);
                        _this.p = new List$1(Number_$type, 0);
                        _this.n = new List$1(Number_$type, 0);
                        _this.h = f;
                        _this.g = j;
                    }
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = _rest[3];
                    var g = _rest[4];
                    _this = _super.call(this, 1, d, e, f) || this;
                    _this.g = null;
                    _this.h = null;
                    _this.m = false;
                    _this.o = new List$1(Array_$type, 0);
                    _this.p = new List$1(Number_$type, 0);
                    _this.n = new List$1(Number_$type, 0);
                    _this.h = c;
                    _this.g = g;
                }
                break;
        }
        return _this;
    }
    CategoryFramePreparerBase.prototype.i = function (a) {
        var b = new PreparationParams();
        b.f = this.h.useHighMarkerFidelity;
        b.b = this.h.scaler;
        b.c = this.h.yScaler;
        b.d = typeCast(ISortingAxis_$type, b.b);
        b.a = typeCast(CategoryFrame.$, a);
        if (b.a == null || b.b == null || b.c == null) {
            return null;
        }
        var c;
        var d;
        var e;
        var f;
        var g = this.g.getBucketInfo(c, d, e, f);
        c = g.p0;
        d = g.p1;
        e = g.p2;
        f = g.p3;
        b.i = c;
        b.j = d;
        b.h = e;
        b.g = f;
        if (b.j < b.i) {
            return null;
        }
        var h;
        var i;
        var j;
        var k = this.a.getViewInfo(i, h);
        i = k.p0;
        h = k.p1;
        j = this.a.getEffectiveViewport();
        b.m = h;
        b.l = i;
        b.k = j;
        if (Rect.l_op_Equality(b.m, Rect.empty) || Rect.l_op_Equality(b.l, Rect.empty)) {
            return null;
        }
        if (this.h != null && (typeCast(Series.$, this.h) !== null && this.h.dx) && this.g != null) {
            b.e = true;
        }
        return b;
    };
    CategoryFramePreparerBase.prototype.r = function (a, b, c, d) {
        return a.getSeriesOffset(b, c, d, this.h.currentMode2Index, this.h.currentCategoryMode);
    };
    CategoryFramePreparerBase.prototype.s = function (a) {
        return this.r(a.b, a.m, a.l, a.k);
    };
    CategoryFramePreparerBase.prototype.d = function (a, b) {
        var c = this.i(a);
        if (c == null || this.g == null) {
            return;
        }
        c.a.f.clear();
        c.a.k.clear();
        c.a.m.clear();
        c.a.p.clear();
        c.a.i.clear();
        c.a.h.clear();
        c.a.g.clear();
        var d = this.c.shouldDisplayMarkers;
        var e = false;
        var f = this.s(c);
        var g = this.j(c);
        if (c.d != null && c.d.i$b != null && c.d.i$b.count != g.e) {
            return;
        }
        if (c.d != null && c.d.i$a) {
            c.d.i$h();
        }
        this.g.cacheValues();
        if (this.m && c.d != null && c.d.i$b.count > 0) {
            var h = c.d.i$b._inner[c.i];
            this.z(g, h, true, c.e);
            while ((isNaN_(g.c) || isNaN_(g.d)) && c.i > 0) {
                c.i = c.i - 1;
                h = c.d.i$b._inner[c.i];
                this.z(g, h, true, c.e);
            }
            var i = c.d.i$b._inner[c.j];
            this.z(g, i, true, c.e);
            while ((isNaN_(g.c) || isNaN_(g.d)) && c.j < g.e - 1) {
                c.j = c.j + 1;
                i = c.d.i$b._inner[c.j];
                this.z(g, i, true, c.e);
            }
        }
        if (this.m && c.d == null) {
            var j = c.i;
            var k = this.g.getBucket(j);
            while ((isNaN_(k[1]) || isNaN_(k[2])) && c.i > 0) {
                c.i = c.i - 1;
                j = c.i;
                k = this.g.getBucket(j);
            }
            var l = c.j;
            k = this.g.getBucket(l);
            while ((isNaN_(k[1]) || isNaN_(k[2])) && c.j < (intDivide(g.e, c.h))) {
                c.j = c.j + 1;
                l = c.j;
                k = this.g.getBucket(l);
            }
        }
        this.w(c, g, f);
        var m = this.t(c, g, f, d, e);
        this.c.updateMarkerCount(m);
        this.v(typeCast(CategoryFrame.$, a), b);
        this.g.unCacheValues();
        return;
    };
    CategoryFramePreparerBase.prototype.v = function (a, b) {
    };
    Object.defineProperty(CategoryFramePreparerBase.prototype, "q", {
        get: function () {
            return this.o;
        },
        enumerable: false,
        configurable: true
    });
    CategoryFramePreparerBase.prototype.t = function (a, b, c, d, e) {
        var _this = this;
        var f = 0;
        var g = false;
        var h = null;
        var i = false;
        var j = a.d != null;
        var k = a.m;
        var l = a.l;
        var m = typeCast(NumericAxisBase.$, a.c) !== null && a.c.li;
        var n = a.f;
        var o = this.h.mayContainUnknowns;
        var p = this.o;
        var q = this.n;
        var r = this.p;
        p.clear();
        q.clear();
        r.clear();
        var s = this.g;
        var t = this.h.provideCollisionDetector();
        var u = 0;
        var v = a.k;
        var w = new ScalerParams(0, k, l, a.b.j$a, v);
        var x = ((function () {
            var $ret = new ScalerParams(0, k, l, a.c.j$a, v);
            $ret.b = typeCast(Series.$, _this.h) !== null ? _this.h.gg() : NaN;
            return $ret;
        })());
        if (j) {
            u = a.b.j$c(2, w) - a.b.j$c(1, w);
            i = this.k();
        }
        var y = a.i;
        var z = a.j;
        var aa = a.a.f;
        var ab = typeCast(IDateTimeAxis_$type, a.b);
        if (ab != null) {
            ab.StartTimeCursor();
        }
        var _loop_1 = function (ac) {
            var ad = void 0;
            if (!j) {
                if (!o) {
                    ad = s.getBucketWithoutUnknowns(ac);
                }
                else {
                    ad = s.getBucket(ac);
                }
            }
            else {
                ad = ((function () { var ae = _this.f(a, ac, b, u, g, h, c); ac = ae.p1; g = ae.p4; h = ae.p5; return ae.ret; })());
            }
            var ae = !m || (m && ad[1] > 0);
            var af = ad[0];
            if (!j || !isNaN_(ad[0])) {
                aa.add(ad);
                if (g && i) {
                    if (h != null) {
                        aa.add(h);
                    }
                }
                if (d && ae) {
                    var ag = ac * a.h;
                    var ah = ag;
                    if (j && a.d.i$b != null && ag >= 0 && ag < a.d.i$b.count) {
                        ag = a.d.i$b._inner[ag];
                    }
                    var ai = new Array(ad.length);
                    ai[0] = ad[0];
                    ai[1] = ad[1];
                    ai[2] = ad[2];
                    if (n && ag < b.e) {
                        ai = new Array(ad.length);
                        ai[0] = af;
                        this_1.z(b, ag, true, a.e);
                        ai[1] = b.c;
                        ai[2] = b.d;
                    }
                    p.add(ai);
                    q.add(a.a.f.count - 1);
                    r.add(ag);
                }
            }
            out_ac_1 = ac;
        };
        var this_1 = this, out_ac_1;
        for (var ac = y; ac <= z; ++ac) {
            _loop_1(ac);
            ac = out_ac_1;
        }
        if (ab != null) {
            ab.ResetTimeCursor();
        }
        this.y(a, c, j, w, x, e, d);
        if (d) {
            var aj = p.count;
            var ak = void 0;
            for (var al = 0; al < aj; al++) {
                ak = p._inner[al];
                if (this.l(a.a, ak, t, Math.min(r._inner[al], b.e - 1), f, q._inner[al])) {
                    ++f;
                }
            }
        }
        return f;
    };
    CategoryFramePreparerBase.prototype.k = function () {
        if (typeCast(Series.$, this.h) !== null) {
            return this.h.dg;
        }
        return false;
    };
    CategoryFramePreparerBase.prototype.f = function (a, b, c, d, e, f, g) {
        var h;
        f = null;
        e = false;
        var i = typeCast(CategorySeries.$, this.h);
        var j = a.l;
        var k = a.m;
        var l = a.k;
        var m = new ScalerParams(0, k, j, a.b.j$a, l);
        var n = new ScalerParams(0, k, j, a.c.j$a, l);
        var o = a.e;
        if (a.d == null || a.d.i$b == null || a.d.i$b.count == 0) {
            return {
                ret: [NaN, NaN, NaN],
                p1: b,
                p4: e,
                p5: f
            };
        }
        if (i != null && i.cl != null && i.cl.count < a.d.i$b.count) {
            return {
                ret: [NaN, NaN, NaN],
                p1: b,
                p4: e,
                p5: f
            };
        }
        var p = a.d.i$b._inner[b];
        var q = a.d.i$d(p);
        var r = q;
        this.z(c, p, false, o);
        while (b < a.j) {
            p = a.d.i$b._inner[b + 1];
            r = a.d.i$d(p);
            this.z(c, p, true, o);
            if (r - q >= d || isNaN_(c.c) || isNaN_(c.d)) {
                if (e) {
                    var s = a.d.i$b._inner[b];
                    this.z(c, s, true, o);
                    f = [a.b.j$b(q, m), c.c, c.d];
                }
                break;
            }
            if (!e && this.k()) {
                var t = a.d.i$b._inner[b];
                this.z(c, t, true, o);
                var u = [a.b.j$b(q, m), c.c, c.d];
                if (!isNaN_(u[0])) {
                    if (!isNaN_(u[1]) && !isNaN_(u[2])) {
                        if (a.d != null) {
                            u[0] = u[0] + g;
                        }
                        a.a.f.add(u);
                        e = true;
                    }
                    else {
                        break;
                    }
                }
            }
            b++;
            this.u(c, p, o);
        }
        var v = NaN;
        if (!isNaN_(q)) {
            v = a.b.j$b(q, m);
        }
        h = this.e(v, c);
        return {
            ret: h,
            p1: b,
            p4: e,
            p5: f
        };
    };
    CategoryFramePreparerBase.prototype.y = function (a, b, c, d, e, f, g) {
        var h = a.h;
        var i = a.a.f.count;
        var j = a.a.f;
        var k = this.o;
        var l = k.count;
        if (f) {
            var m = a.c.j$b(a.c.l6, e);
            a.c.j$e(a.a.k, 0, a.a.k.count, e);
            var n = a.a.k;
            var o = n.count;
            for (var p = 0; p < n.count; p++) {
                n._inner[p] = Math.abs(n._inner[p] - m);
            }
        }
    };
    CategoryFramePreparerBase.prototype.w = function (a, b, c) {
    };
    CategoryFramePreparerBase.$t = markType(CategoryFramePreparerBase, 'CategoryFramePreparerBase', FramePreparer.$);
    return CategoryFramePreparerBase;
}(FramePreparer));
export { CategoryFramePreparerBase };
/**
 * @hidden
 */
var CategoryFramePreparer = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryFramePreparer, _super);
    function CategoryFramePreparer(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = this;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    var d = [c, typeCast(ISupportsMarkers_$type, c), typeCast(IProvidesViewport_$type, c), typeCast(ISupportsErrorBars_$type, c), typeCast(IBucketizer_$type, c)];
                    {
                        var f = d[0];
                        var g = d[1];
                        var h = d[2];
                        var i = d[3];
                        var j = d[4];
                        _this = _super.call(this, 1, f, g, h, i, j) || this;
                        _this.aa = new DefaultCategoryTrendlineHost();
                        _this.ab = new DefaultSingleValueProvider();
                        _this.ac = null;
                        _this.ad = null;
                        _this.ac = _this.aa;
                        if (typeCast(IHasCategoryTrendline_$type, f) !== null) {
                            _this.ac = typeCast(IHasCategoryTrendline_$type, f);
                        }
                        _this.ad = _this.ab;
                        if (typeCast(IHasSingleValueCategory_$type, f) !== null) {
                            _this.ad = typeCast(IHasSingleValueCategory_$type, f);
                        }
                    }
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = _rest[3];
                    var g = _rest[4];
                    _this = _super.call(this, 1, c, d, e, f, g) || this;
                    _this.aa = new DefaultCategoryTrendlineHost();
                    _this.ab = new DefaultSingleValueProvider();
                    _this.ac = null;
                    _this.ad = null;
                    _this.ac = _this.aa;
                    if (typeCast(IHasCategoryTrendline_$type, c) !== null) {
                        _this.ac = typeCast(IHasCategoryTrendline_$type, c);
                    }
                    _this.ad = _this.ab;
                    if (typeCast(IHasSingleValueCategory_$type, c) !== null) {
                        _this.ad = typeCast(IHasSingleValueCategory_$type, c);
                    }
                }
                break;
        }
        return _this;
    }
    CategoryFramePreparer.prototype.l = function (a, b, c, d, e, f) {
        var g = b[0];
        var h = b[1];
        var i = new Rect(0, g - 5, h - 5, 11, 11);
        if (!isNaN_(g) && !isNaN_(h) && !isInfinity(g) && !isInfinity(h) && c.tryAdd(i)) {
            a.m.add({ $type: Point_$type, x: g, y: h });
            this.c.updateMarkerTemplate(e, d, f);
            return true;
        }
        return false;
    };
    CategoryFramePreparer.prototype.j = function (a) {
        var b = new SingleValuesHolder();
        var c = this.ad.valueColumn;
        b.f = c;
        return b;
    };
    CategoryFramePreparer.prototype.x = function (a, b, c, d, e, f) {
        if (d) {
            b[0] = b[0] + c;
        }
        else {
            b[0] = a.b.j$b(b[0], e) + c;
        }
        b[1] = a.c.j$b(b[1], f);
        if (a.h > 1 || d) {
            b[2] = a.c.j$b(b[2], f);
        }
        else {
            b[2] = b[1];
        }
    };
    CategoryFramePreparer.prototype.y = function (a, b, c, d, e, f, g) {
        _super.prototype.y.call(this, a, b, c, d, e, f, g);
        var h = a.h;
        var i = a.a.f.count;
        var j = a.a.f;
        var k = this.q;
        var l = k.count;
        var m = new List$1(Number_$type, 0);
        if (!c) {
            m.add(0);
        }
        var n = new List$1(Number_$type, 0);
        n.add(1);
        if (c || h > 1) {
            n.add(2);
        }
        a.b.j$d(j, m, 0, i, d);
        a.c.j$d(j, n, 0, i, e);
        for (var o = 0; o < i; o++) {
            j._inner[o][0] = j._inner[o][0] + b;
        }
        if (h == 1 && !c) {
            for (var p = 0; p < i; p++) {
                j._inner[p][2] = j._inner[p][1];
            }
        }
        if (g) {
            a.b.j$d(k, m, 0, l, d);
            a.c.j$d(k, n, 0, l, e);
            for (var q = 0; q < l; q++) {
                k._inner[q][0] = k._inner[q][0] + b;
            }
            if (h == 1 && !c) {
                for (var r = 0; r < l; r++) {
                    k._inner[r][2] = k._inner[r][1];
                }
            }
        }
    };
    CategoryFramePreparer.prototype.w = function (a, b, c) {
        if (this.ac.trendLineType == 0 || this.ac.trendlinePreparer == null || this.ac.trendLinePeriod < 1) {
            return;
        }
        this.ac.trendlinePreparer.prepareLine(this.ac, a, b, c);
    };
    CategoryFramePreparer.prototype.z = function (a, b, c, d) {
        var e = a;
        var f = e.f;
        var g = f.item(b);
        var h = g;
        if (d) {
            var i = this.g.getBucket(b);
            g = i[1];
            h = i[1];
        }
        if (c) {
            e.c = g;
            e.d = h;
        }
        else {
            e.a = g;
            e.b = h;
        }
    };
    CategoryFramePreparer.prototype.u = function (a, b, c) {
        var d = a;
        var e = d.f;
        if (b < e.count) {
            var f = void 0;
            if (c) {
                var g = this.g.getBucket(b);
                f = g[1];
            }
            else {
                f = e.item(b);
            }
            d.a = Math.min(d.a, f);
            d.b = Math.max(d.b, f);
        }
    };
    CategoryFramePreparer.prototype.e = function (a, b) {
        var c = b;
        return [a, c.a, c.b];
    };
    CategoryFramePreparer.$t = markType(CategoryFramePreparer, 'CategoryFramePreparer', CategoryFramePreparerBase.$);
    return CategoryFramePreparer;
}(CategoryFramePreparerBase));
export { CategoryFramePreparer };
/**
 * @hidden
 */
var CategorySeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategorySeries, _super);
    function CategorySeries() {
        var _this = _super.call(this) || this;
        _this.r2 = null;
        _this.sf = null;
        _this.sj = false;
        _this.si = false;
        _this.assigningCategoryStyle = null;
        _this.assigningCategoryMarkerStyle = null;
        _this.sd = null;
        _this.se = null;
        _this.rz = new CategoryFrame(3);
        _this.r1 = new CategoryFrame(3);
        _this.rx = new CategoryFrame(3);
        _this.r0 = new CategoryFrame(3);
        _this.r5 = null;
        _this.r9 = null;
        _this.r5 = new CategorySeriesRenderManager();
        _this.r9 = new CategoryTransitionSourceFramePreparer();
        _this.sj = false;
        _this.si = false;
        _this.ab = CategorySeries.$;
        return _this;
    }
    CategorySeries.prototype.by = function () {
        var a = new CategorySeriesView(this);
        return a;
    };
    Object.defineProperty(CategorySeries.prototype, "sg", {
        get: function () {
            var _this = this;
            if (this.sf == null) {
                this.sf = DVContainer.instance.createInstance(ICategorySeriesInteractionManager_$type, function () { return _this.co.n; });
            }
            return this.sf;
        },
        enumerable: false,
        configurable: true
    });
    CategorySeries.prototype.c2 = function (a, b, c, d) {
        var _this = this;
        if (!this.hasMarkers) {
            return false;
        }
        var e = this.getEffectiveViewport1(this.b1);
        var f = this.rw();
        var g = new ScalerParams(1, this.ce.ta, this.p7, f.cg);
        g.c = e;
        var h = this.sh();
        var i = new ScalerParams(1, this.ce.ta, this.p7, h.cg);
        i.c = e;
        var j = this.ce.ta;
        var k = this.p7;
        var l = this.currentMode2Index;
        var m = 0;
        if (f.cd && f.cb) {
            m = f.getSeriesOffset(j, k, e, l, f.categoryMode);
        }
        a.clear();
        this.qk.cf(function (n) {
            if (n._visibility == 0) {
                var o = new SeriesPointOfInterest();
                var p = n.n;
                var q = n.o;
                if (p < _this.p7.left || p > _this.p7.right || q < _this.p7.top || q > _this.p7.bottom) {
                    return;
                }
                if (_this.isVertical) {
                    if (f.ca && !f.cd && f.categoryMode != 0) {
                        o.c = n.ak;
                    }
                    else {
                        o.c = f.el(q, g);
                    }
                    o.b = h.el(p, i);
                }
                else {
                    if (f.ca && !f.cd && f.categoryMode != 0) {
                        o.b = n.ak;
                    }
                    else {
                        o.b = f.el(p, g);
                    }
                    o.c = h.el(q, i);
                }
                o.a = n.content;
                if (b) {
                    if (_this.isVertical) {
                        if (c) {
                            o.d = _this.s1(o.b, d);
                        }
                        else {
                            var r = _this.gt(n);
                            if (!isNaN_(r)) {
                                o.d = _this.s1(r, d);
                            }
                            else {
                                o.d = _this.s1(o.b, d);
                            }
                        }
                    }
                    else {
                        if (c) {
                            o.d = _this.s1(o.c, d);
                        }
                        else {
                            var s = _this.gt(n);
                            if (!isNaN_(s)) {
                                o.d = _this.s1(s, d);
                            }
                            else {
                                o.d = _this.s1(o.c, d);
                            }
                        }
                    }
                }
                else {
                    o.d = f.gc(n.ak);
                }
                a.add(o);
            }
        });
        return true;
    };
    CategorySeries.prototype.s1 = function (a, b) {
        if (b >= 0) {
            return round10N(a, b).toString();
        }
        else {
            return a.toString();
        }
    };
    CategorySeries.prototype.l4 = function (a) {
        _super.prototype.l4.call(this, a);
        this.r6 = a;
    };
    CategorySeries.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    Object.defineProperty(CategorySeries.prototype, "categoryAxis", {
        get: function () {
            return this.rw();
        },
        enumerable: false,
        configurable: true
    });
    CategorySeries.prototype.rw = function () {
        return this.fetchXAxis();
    };
    CategorySeries.prototype.sh = function () {
        return this.fetchYAxis();
    };
    CategorySeries.prototype.get_c7 = function () {
        return true;
    };
    CategorySeries.prototype.get_em = function () {
        return this.sh() != null && this.sh().cg;
    };
    CategorySeries.prototype.get_dj = function () {
        return true;
    };
    CategorySeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.r6.cr.g(this.fx);
    };
    CategorySeries.prototype.sp = function () {
        return (this.assigningCategoryStyle != null && this.sj) || (this.bl != 1);
    };
    CategorySeries.prototype.sq = function () {
        return (this.assigningCategoryMarkerStyle != null && this.si) || (this.bl != 1);
    };
    CategorySeries.prototype.te = function (a) {
        if (this.assigningCategoryStyle != null && this.sj) {
            this.assigningCategoryStyle(this, a);
        }
    };
    CategorySeries.prototype.td = function (a) {
        if (this.assigningCategoryMarkerStyle != null && this.si) {
            this.assigningCategoryMarkerStyle(this, a);
        }
    };
    CategorySeries.prototype.rq = function (a, b) {
        return null;
    };
    CategorySeries.prototype.k2 = function (a, b) {
        _super.prototype.k2.call(this, a, b);
        if (a) {
            this.s8(b);
        }
    };
    CategorySeries.prototype.bi = function () {
        var a = _super.prototype.bi.call(this);
        return a;
    };
    CategorySeries.prototype.lk = function () {
        _super.prototype.lk.call(this);
        var a = this.fetchXAxis();
        if (a != null) {
            a.h7(false);
        }
        var b = this.fetchYAxis();
        if (b != null) {
            b.h7(false);
        }
    };
    CategorySeries.prototype.nb = function (a, b) {
        _super.prototype.nb.call(this, a, b);
        this.r6.cr.g(this.fx);
        this.mn(false);
    };
    CategorySeries.prototype.na = function (a, b) {
        if (this.e4 && this.g5 < 0.05 && (this.ce == null || !this.ce.et())) {
            this.e5 = true;
        }
        _super.prototype.na.call(this, a, b);
        this.r6.cr.g(this.fx);
        this.mn(false);
    };
    CategorySeries.prototype.l9 = function (a, b, c, d) {
        _super.prototype.l9.call(this, a, b, c, d);
        switch (b) {
            case "SeriesViewer":
                var e = this.fetchYAxis();
                var f = this.fetchXAxis();
                if (c != null && d == null) {
                    this.k6(f);
                    this.k6(e);
                }
                if (c == null && d != null) {
                    this.me(f);
                    this.me(e);
                }
                this.r6.cr.g(this.fx);
                this.mn(false);
                break;
            case "SyncLink":
                if (this.b9 != null && this.ce != null) {
                    this.r6.cr.g(this.fx);
                }
                this.mn(false);
                break;
            case "TransitionProgress":
                this.r1.c(this.g5, this.rz, this.rx);
                if (this.cy(this.b1)) {
                    return;
                }
                if (this.g5 == 1) {
                    this.rx.v();
                    this.tf(this.rx, this.r6);
                    if (this.e4) {
                        this.e4 = false;
                        this.k3();
                        this.cf.r = truncate(this.gr());
                        this.cf.b = this.cg;
                    }
                }
                else {
                    this.tf(this.r1, this.r6);
                }
                if (this.ce != null) {
                    this.ce.ob(this);
                }
                break;
            case "ErrorBarSettings":
                this.lu();
                break;
            case CategorySeries.$$p[4]:
                this.mn(false);
                break;
            case CategorySeries.$$p[1]:
                this.sj = this.sl();
                this.mn(false);
                break;
            case CategorySeries.$$p[0]:
                this.si = this.sk();
                this.mn(false);
                break;
        }
    };
    CategorySeries.prototype.sl = function () {
        return this.sn;
    };
    CategorySeries.prototype.sk = function () {
        return this.sm;
    };
    CategorySeries.prototype.sv = function (a) {
        return this.gb(a, this.fetchXAxis());
    };
    CategorySeries.prototype.get_ec = function () {
        return typeCast(ISortingAxis_$type, this.rw()) !== null;
    };
    CategorySeries.prototype.as = function () {
        return this.rw();
    };
    CategorySeries.prototype.hk = function (a) {
        return this.sg.b$d(this, a);
    };
    CategorySeries.prototype.hy = function (a) {
        return this.sg.b$f(this, a);
    };
    CategorySeries.prototype.hi = function (a) {
        var b = truncate(Math.round(this.f9(a)));
        return b;
    };
    CategorySeries.prototype.f9 = function (a) {
        return this.sg.b$c(this, a);
    };
    CategorySeries.prototype.ay = function (a, b, c) {
        if (this.ei(this.bl) && !c) {
            var d = this.sc(a, b, this.se);
            this.se = d;
            return d;
        }
        else {
            var e = this.sa(a, b, this.se);
            e.e = true;
            this.se = e;
            return e;
        }
    };
    CategorySeries.prototype.get_d0 = function () {
        return true;
    };
    CategorySeries.prototype.k0 = function () {
        _super.prototype.k0.call(this);
        this.sd = null;
        this.se = null;
    };
    CategorySeries.prototype.ax = function (a, b, c) {
        if (this.c3 && this.ei(this.bl) && !c) {
            var d = this.sb(a, b, this.sd);
            this.sd = d;
            return d;
        }
        else {
            var e = this.sa(a, b, this.sd);
            this.sd = e;
            return e;
        }
    };
    CategorySeries.prototype.su = function () {
        return this.r6.cu.a;
    };
    CategorySeries.prototype.sc = function (a, b, c) {
        if (!this.qn()) {
            return null;
        }
        var d = this.ry();
        var e = this.su();
        return this.sg.b$b(this, e, this.sy(this.b1), this.sx(this.b1), d.f, a, b, c);
    };
    CategorySeries.prototype.sb = function (a, b, c) {
        var d = this.sy(this.b1);
        var e = this.sz(this.b1);
        var f = this.sx(this.b1);
        var g = this.ry();
        return this.sg.b$a(this, g.f, d, e, f, a, b, c);
    };
    CategorySeries.prototype.sa = function (a, b, c) {
        var d = new HighlightingInfo();
        d.b = this;
        d.h = 0;
        d.g = this.cl != null ? this.cl.count - 1 : 0;
        d.d = true;
        if (c != null && c.h == d.h && c.g == d.g) {
            return c;
        }
        return d;
    };
    CategorySeries.prototype.ry = function () {
        var a = this.rx;
        if (this.cw()) {
            if (this.cf.g) {
                this.cf.t();
            }
            a = this.r1;
        }
        return a;
    };
    CategorySeries.prototype.ta = function (a, b, c, d, e, f) {
        var g = this.bl != 1;
        this.r5.a3(this.r5.d, d.cm, a, b, c, d, e, f, true);
        this.r5.aa(this.fv);
        var h = this.r5.ax;
        var i = null;
        var j = this.cl;
        var k = null;
        if (g && this.ce != null) {
            i = this.ce.a7.getHighlightingInfo(this, j, h.o, h.n, true);
            if (this.ce.a7.isCrossSeriesHighlight(this)) {
                k = this.ce.a7.getHighlightingInfo(this, j, h.o, h.n, true);
            }
            h.b = i;
        }
        h.f = f;
        this.td(h);
        this.r5.y(this, i, f, g, h.m, this.ce.a7.totalHighlightingProgress);
    };
    CategorySeries.prototype.tb = function (a, b, c, d, e, f) {
        var g = this.bl != 1;
        this.r5.a3(this.r5.b, d.cm, a, b, c, d, e, f, false);
        this.r5.ab(this.fv);
        var h = this.r5.ay;
        var i = null;
        var j = this.cl;
        if (g && this.ce != null) {
            i = this.ce.a7.getHighlightingInfo(this, j, h.o, h.n, false);
            h.b = i;
        }
        h.f = f;
        this.te(h);
        this.r5.z(this, i, f, g, b < 0);
    };
    CategorySeries.prototype.fd = function (a, b, c) {
        var d = _super.prototype.fd.call(this, a, b, c);
        d = d && this.st(this.fetchXAxis());
        d = d && this.st(this.fetchYAxis());
        var e = c;
        if (!c.o() || b.isEmpty || a.isEmpty || this.cl == null) {
            d = false;
        }
        if (!d) {
            e.cr.d = 0;
        }
        return d;
    };
    CategorySeries.prototype.st = function (a) {
        if (a == null || a.bh == null) {
            return false;
        }
        var b = typeCast(CategoryAxisBase.$, a);
        if (b != null) {
            if (b.itemsSource == null) {
                return false;
            }
            if (b.le < 1) {
                return false;
            }
        }
        else {
            var c = typeCast(NumericAxisBase.$, a);
            if (c != null) {
                return c.lw != c.lv;
            }
        }
        return true;
    };
    CategorySeries.prototype.eu = function () {
        return this.so;
    };
    CategorySeries.prototype.r7 = function () {
        return 12;
    };
    CategorySeries.prototype.k3 = function () {
        _super.prototype.k3.call(this);
        this.rz.v();
        this.rx.v();
        this.r1.v();
    };
    CategorySeries.prototype.mo = function (a) {
        _super.prototype.mo.call(this, a);
        this.r6.cr.g(this.fx);
        if (this.cy(this.b1)) {
            this.rx.y();
            this.r1.y();
            this.rz.y();
            return;
        }
        if (this.ew) {
            if (this.cw()) {
                if (this.cf.g) {
                    this.cf.t();
                }
                this.tf(this.r1, this.r6);
            }
            else {
                this.tf(this.rx, this.r6);
            }
            return;
        }
        if (this.er(a)) {
            var b = this.rz;
            if (this.cw()) {
                if (this.cf.g) {
                    this.cf.t();
                }
                this.rz = this.r1;
                this.r1 = b;
            }
            else {
                this.rz = this.rx;
                this.rx = b;
            }
            this.tc(this.rx, this.r6);
            if (this.e6) {
                this.cf.w();
                this.cf.r = truncate(this.gs());
                this.cf.b = this.ch != null ? this.ch : this.cg;
                this.r9.p(this.rz, this.rx, this.isVertical, this.fetchXAxis(), this.fetchYAxis(), this.r8, this.r7(), this.cb, this.ca(), runOn(this, this.sw), this.r6.bu);
            }
            this.ky();
            this.mw();
            if (this.e6) {
                this.e5 = false;
                this.e4 = true;
            }
        }
        else {
            this.tc(this.rx, this.r6);
            this.tf(this.rx, this.r6);
        }
    };
    CategorySeries.prototype.ca = function () {
        return 3;
    };
    CategorySeries.prototype.sw = function () {
        if (this.isVertical) {
            return this.p7.left;
        }
        return this.p7.bottom;
    };
    CategorySeries.prototype.s0 = function () {
        var e_1, _a;
        var a = 0;
        var b = this.fetchXAxis();
        try {
            for (var _b = __values(fromEnum(this.ce.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                if (c == this) {
                    return a;
                }
                var d = typeCast(CategorySeries.$, c);
                if (d != null) {
                    var e = typeCast(CategoryAxisBase.$, d.fetchXAxis());
                    if (e == b && d.preferredCategoryMode(e) == 2) {
                        a++;
                    }
                }
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        return -1;
    };
    Object.defineProperty(CategorySeries.prototype, "GetErrorBarsXAxis", {
        get: function () {
            return this.fetchXAxis();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategorySeries.prototype, "GetErrorBarsYAxis", {
        get: function () {
            return this.fetchYAxis();
        },
        enumerable: false,
        configurable: true
    });
    CategorySeries.prototype.s9 = function (a, b) {
        this.r5.a1(this, this.sq(), runOn(this, this.rq), this.sx(a), this.sy(a));
        var c = this.r5.d;
        var d = c != null;
        var e = this.rw();
        if (e == null) {
            return;
        }
        var f = this.getEffectiveViewport1(a);
        var g = new ScalerParams(0, a.bv, a.bu, e.cg, f);
        var h = this.cl == null ? 0 : this.cl.count;
        var i = a;
        var j = b.f;
        var k = i.cr.e;
        var l = i.cr.f;
        var m = i.cr.d;
        var n = k * m;
        for (var o = 0; o < a.cu.count; o++) {
            var p = a.cu.item(o);
            var q = p.content;
            if (d) {
                var r = p.al;
                this.ta(j, r, h, e, g, a.q);
            }
            this.r5.ac(p, q);
        }
    };
    CategorySeries.prototype.tf = function (a, b) {
        this.py = a.aa;
        b.au();
    };
    CategorySeries.prototype.tc = function (a, b) {
        a.u();
    };
    CategorySeries.prototype.sx = function (a) {
        return a.cr.d;
    };
    CategorySeries.prototype.sy = function (a) {
        return a.cr.e;
    };
    CategorySeries.prototype.sz = function (a) {
        return a.cr.f;
    };
    CategorySeries.prototype.s8 = function (a) {
        var b = a;
        b.cu.count = 0;
    };
    CategorySeries.prototype.mp = function (a, b) {
        _super.prototype.mp.call(this, a, b);
        if (!this.e3) {
            this.b1.a2(b);
            return;
        }
        var c = typeCast(CategorySeriesView.$, this.b0);
        c.cr.g(this.fx);
        this.b1.a2(b);
        if (this.cy(this.b0)) {
            return;
        }
        this.tg();
        this.e3 = false;
    };
    CategorySeries.prototype.tg = function () {
        var a = typeCast(CategorySeriesView.$, this.b0);
        if (!this.ex) {
            this.tc(this.r0, a);
        }
        this.ex = false;
        this.tf(this.r0, a);
    };
    CategorySeries.prototype.r3 = function (a) {
        var b = typeCast(CategorySeriesView.$, a);
        if (b != null && b.q) {
            if (b.p) {
                return new CategoryFramePreparer(1, typeCast(IIsCategoryBased_$type, this), typeCast(ISupportsMarkers_$type, b), b, this, b.cr);
            }
            else {
                return new CategoryFramePreparer(1, typeCast(IIsCategoryBased_$type, this), typeCast(ISupportsMarkers_$type, b), this.ce.cu.o, this, b.cr);
            }
        }
        else {
            return this.r2;
        }
    };
    CategorySeries.prototype.ao = function (a) {
        if (this.fetchXAxis() == a) {
            return this.fetchYAxis();
        }
        if (this.fetchYAxis() == a) {
            return this.fetchXAxis();
        }
        return null;
    };
    CategorySeries.prototype.ag = function () {
        return [this.fetchXAxis(), this.fetchYAxis()];
    };
    CategorySeries.rr = function (a, b, c, d, e) {
        var f = null;
        if (b > -1 && !d.isEmpty && !c.isEmpty) {
            var g = a._inner[0][0] < c.left - 2000 ? c.left - 10 : NaN;
            var h = c.bottom + 10;
            var i = a._inner[b][0] > c.right + 2000 ? c.right + 10 : NaN;
            var j = c.top - 10;
            f = new Clipper(1, g, h, i, j, e);
        }
        return f;
    };
    CategorySeries.$t = markType(CategorySeries, 'CategorySeries', MarkerSeries.$, [IHasCategoryModePreference_$type, ISupportsErrorBars_$type]);
    CategorySeries.$$p = markDep(DependencyProperty, PropertyMetadata, CategorySeries, 'raisePropertyChanged', ['IsCustomCategoryMarkerStyleAllowed:sm:th', [0, false], 'IsCustomCategoryStyleAllowed:sn:ti', [0, false], 'IsTransitionInEnabled:so:tj', [0, false], 'TransitionInMode:r8:tk', [CategoryTransitionInMode_$type, enumGetBox(CategoryTransitionInMode_$type, 0)], 'UseHighMarkerFidelity:ss:tl', [0, false]]);
    return CategorySeries;
}(MarkerSeries));
export { CategorySeries };
/**
 * @hidden
 */
var CategorySeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategorySeriesView, _super);
    function CategorySeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.ct = null;
        _this.cw = 0;
        _this.cr = null;
        _this.cu = null;
        _this.cw = -1;
        _this.ct = a;
        _this.cr = _this.cs();
        _this.cu = ((function () {
            var $ret = new Pool$1(Marker.$);
            $ret.create = runOn(_this, _this.b0);
            $ret.activate = runOn(_this, _this.cj);
            $ret.disactivate = runOn(_this, _this.cl);
            $ret.destroy = runOn(_this, _this.ck);
            return $ret;
        })());
        return _this;
    }
    CategorySeriesView.prototype.cv = function (a) {
        if (this.cw != a.t) {
            return true;
        }
        return false;
    };
    CategorySeriesView.prototype.cy = function (a) {
        this.cw = a.t;
    };
    CategorySeriesView.prototype.updateMarkerTemplate = function (a, b, c) {
        if (!this.b1.qp) {
            var d = this.cu.item(a);
            var e = d.content;
            e.item = this.e.cl.item(b);
            d.ak = b;
            d.al = c;
        }
    };
    CategorySeriesView.prototype.cs = function () {
        return new CategoryBucketCalculator(this);
    };
    Object.defineProperty(CategorySeriesView.prototype, "shouldDisplayMarkers", {
        get: function () {
            return this.ct.qn();
        },
        enumerable: false,
        configurable: true
    });
    CategorySeriesView.prototype.updateMarkerCount = function (a) {
        this.cu.count = a;
    };
    CategorySeriesView.prototype.cf = function (a) {
        this.cu.c(a);
    };
    CategorySeriesView.prototype.cx = function () {
    };
    CategorySeriesView.$t = markType(CategorySeriesView, 'CategorySeriesView', MarkerSeriesView.$, [ISupportsMarkers_$type]);
    return CategorySeriesView;
}(MarkerSeriesView));
export { CategorySeriesView };
