/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { HorizontalStackedSeriesBase } from "./HorizontalStackedSeriesBase";
import { markType } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { StackedSeriesView } from "./StackedSeriesView";
import { Defaults } from "./Defaults";
/**
 * @hidden
 */
var StackedLineSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedLineSeries, _super);
    function StackedLineSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedLineSeries.$;
        return _this;
    }
    StackedLineSeries.prototype.get_d4 = function () {
        return true;
    };
    StackedLineSeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.mn(false);
    };
    StackedLineSeries.prototype.by = function () {
        return new StackedLineSeriesView(this);
    };
    StackedLineSeries.prototype.l4 = function (a) {
        _super.prototype.l4.call(this, a);
        this.uu = a;
    };
    StackedLineSeries.prototype.aq = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.xAxis) {
            return new AxisRange(0, this.cl.count - 1);
        }
        if (a == this.yAxis) {
            this.ud();
            return new AxisRange(this.t4, this.t3);
        }
        return null;
    };
    StackedLineSeries.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    Object.defineProperty(StackedLineSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ss;
        },
        enumerable: false,
        configurable: true
    });
    StackedLineSeries.$t = markType(StackedLineSeries, 'StackedLineSeries', HorizontalStackedSeriesBase.$);
    return StackedLineSeries;
}(HorizontalStackedSeriesBase));
export { StackedLineSeries };
/**
 * @hidden
 */
var StackedLineSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedLineSeriesView, _super);
    function StackedLineSeriesView(a) {
        return _super.call(this, a) || this;
    }
    StackedLineSeriesView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
            this.c0.ql = Defaults.e;
        }
    };
    StackedLineSeriesView.$t = markType(StackedLineSeriesView, 'StackedLineSeriesView', StackedSeriesView.$);
    return StackedLineSeriesView;
}(StackedSeriesView));
export { StackedLineSeriesView };
