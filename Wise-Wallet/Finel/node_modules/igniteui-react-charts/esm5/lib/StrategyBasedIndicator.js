/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { FinancialIndicator } from "./FinancialIndicator";
import { String_$type, Number_$type, typeCast, fromEnum, markType } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
var StrategyBasedIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StrategyBasedIndicator, _super);
    function StrategyBasedIndicator() {
        var _this = _super.call(this) || this;
        _this.u3();
        return _this;
    }
    StrategyBasedIndicator.prototype.u3 = function () {
        this.uo = this.up;
        this.ab = this.u2;
    };
    StrategyBasedIndicator.prototype.uv = function () {
        return -2147483648;
    };
    StrategyBasedIndicator.prototype.u4 = function (a) {
    };
    StrategyBasedIndicator.prototype.ux = function () {
        return -2147483648;
    };
    StrategyBasedIndicator.prototype.uu = function () {
        return -2147483648;
    };
    StrategyBasedIndicator.u8 = function (a, b, c) {
        var d = DependencyProperty.i(c, Number_$type, b, new PropertyMetadata(2, a, function (e, f) { return (typeCast(StrategyBasedIndicator.$, e)).raisePropertyChanged(c, f.oldValue, f.newValue); }));
        StrategyBasedIndicator.us.add(c);
        return d;
    };
    StrategyBasedIndicator.u7 = function (a, b) {
        return StrategyBasedIndicator.u8(a, b, "Period");
    };
    StrategyBasedIndicator.u5 = function (a, b) {
        return StrategyBasedIndicator.u8(a, b, "LongPeriod");
    };
    StrategyBasedIndicator.u9 = function (a, b) {
        return StrategyBasedIndicator.u8(a, b, "ShortPeriod");
    };
    StrategyBasedIndicator.prototype.t1 = function (a, b) {
        var c = this.qx(a, b);
        var d = this.qy(c);
        return this.uo.b(c, d);
    };
    StrategyBasedIndicator.prototype.ty = function (a, b) {
        var c = this.qx(a, b);
        if (b == 0) {
            return false;
        }
        if (!this.rt(this.t1(a, b))) {
            return false;
        }
        var d = this.qy(c);
        if (this.tu != null) {
            c.minimumValue = this.tu.c;
            c.maximumValue = this.tu.b;
        }
        var e = this.uo.a(c, d);
        for (var f = 0; f < this.t3 && f < c.indicatorColumn.count; f++) {
            c.indicatorColumn.item(f, NaN);
        }
        if (this.q6 != null && this.ur(c)) {
            this.q6.c0();
        }
        return e;
    };
    StrategyBasedIndicator.prototype.ur = function (a) {
        var e_1, _a;
        if (!isNaN_(a.minimumValue) && !isNaN_(a.maximumValue) && a.specifiesRange) {
            var b = this.tu;
            this.tu = new AxisRange(a.minimumValue, a.maximumValue);
            return this.uq(b, this.tu);
        }
        var c = 1.7976931348623157E+308;
        var d = -1.7976931348623157E+308;
        try {
            for (var _b = __values(fromEnum(a.indicatorColumn)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                if (!isNaN_(e)) {
                    c = Math.min(c, e);
                    d = Math.max(d, e);
                }
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        var f = this.tu;
        this.tu = new AxisRange(c, d);
        return this.uq(f, this.tu);
    };
    StrategyBasedIndicator.prototype.uq = function (a, b) {
        if (a == null || b == null) {
            return true;
        }
        if (a.c != b.c) {
            return true;
        }
        if (a.b != b.b) {
            return true;
        }
        return false;
    };
    StrategyBasedIndicator.prototype.uw = function (a) {
        if (a == -2147483648) {
            return 0;
        }
        if (a > this.indicatorColumn.count && this.indicatorColumn.count > 0) {
            a = this.indicatorColumn.count - 1;
        }
        if (a < 1) {
            return 1;
        }
        return a;
    };
    StrategyBasedIndicator.prototype.qx = function (a, b) {
        var c = _super.prototype.qx.call(this, a, b);
        c.indicatorColumn = this.indicatorColumn;
        c.period = this.uw(this.uv());
        c.shortPeriod = this.uw(this.ux());
        c.longPeriod = this.uw(this.uu());
        c.multiplier = this.ut();
        return c;
    };
    StrategyBasedIndicator.prototype.ut = function () {
        return 1;
    };
    StrategyBasedIndicator.u6 = function (a, b) {
        var c = DependencyProperty.i("Multiplier", Number_$type, b, new PropertyMetadata(2, a, function (d, e) { return (typeCast(StrategyBasedIndicator.$, d)).raisePropertyChanged("Multiplier", e.oldValue, e.newValue); }));
        StrategyBasedIndicator.us.add("Multiplier");
        return c;
    };
    StrategyBasedIndicator.prototype.l9 = function (a, b, c, d) {
        _super.prototype.l9.call(this, a, b, c, d);
        if (StrategyBasedIndicator.us.contains(b)) {
            if (this.q6 != null && !this.q6.c0()) {
                this.q1.bx.e(this.fx);
                this.ty(0, this.indicatorColumn.count);
                if (this.tv.b7) {
                    this.tv.b5.g$i();
                }
                this.mn(false);
            }
        }
    };
    StrategyBasedIndicator.$t = markType(StrategyBasedIndicator, 'StrategyBasedIndicator', FinancialIndicator.$);
    StrategyBasedIndicator.us = new List$1(String_$type, 0);
    return StrategyBasedIndicator;
}(FinancialIndicator));
export { StrategyBasedIndicator };
