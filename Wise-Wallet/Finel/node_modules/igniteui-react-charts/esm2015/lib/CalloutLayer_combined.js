/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { AnnotationLayer } from "./AnnotationLayer";
import { DependencyProperty } from "igniteui-react-core";
import { Base, runOn, delegateCombine, String_$type, enumGetBox, EnumUtil, typeCast, fromEnum, delegateRemove, Point_$type, Date_$type, markType, markDep } from "igniteui-react-core";
import { Series } from "./Series";
import { CalloutPlacementPositionsCollection } from "./CalloutPlacementPositionsCollection";
import { AutoCalloutVisibilityMode_$type } from "./AutoCalloutVisibilityMode";
import { Brush } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { CalloutCollisionMode_$type } from "./CalloutCollisionMode";
import { FontUtil } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { CalloutLayerFrame } from "./CalloutLayerFrame";
import { HashSet$1 } from "igniteui-react-core";
import { CalloutAnnotationWrapper } from "./CalloutAnnotationWrapper";
import { List$1 } from "igniteui-react-core";
import { LinkedList$1 } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { LinkedListNode$1 } from "igniteui-react-core";
import { LabelCollisionManager } from "igniteui-react-core";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { CalloutAnnotation } from "./CalloutAnnotation";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { CalloutLabelUpdatingEventArgs } from "./CalloutLabelUpdatingEventArgs";
import { CalloutSeriesSelectingEventArgs } from "./CalloutSeriesSelectingEventArgs";
import { CalloutStyleUpdatingEventArgs } from "./CalloutStyleUpdatingEventArgs";
import { DeviceUtils } from "igniteui-react-core";
import { CalloutRenderStyleUpdatingEventArgs } from "./CalloutRenderStyleUpdatingEventArgs";
import { LabelCollisionInfo } from "igniteui-react-core";
import { QuadTreeBoundingBox } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { ViewportUtils } from "./ViewportUtils";
import { Size } from "igniteui-react-core";
import { CalloutContentUpdatingEventArgs } from "./CalloutContentUpdatingEventArgs";
import { CalloutKey } from "./CalloutKey";
import { DataContext } from "igniteui-react-core";
import { HashPool$2 } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
import { FastItemObjectColumn } from "igniteui-react-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { BrushUtil } from "igniteui-react-core";
import { TextBlock } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
import { Line } from "igniteui-react-core";
import { CalloutViewHelper } from "./CalloutViewHelper";
import { Rectangle } from "igniteui-react-core";
import { TranslateTransform } from "igniteui-react-core";
/**
 * @hidden
 */
export let CalloutLayer = /*@__PURE__*/ (() => {
    class CalloutLayer extends AnnotationLayer {
        get_c9() {
            return true;
        }
        constructor() {
            super();
            this.calloutStyleUpdating = null;
            this.calloutRenderStyleUpdating = null;
            this.tv = null;
            this.tw = null;
            this.tx = null;
            this.tu = null;
            this.tt = null;
            this.un = new HashSet$1(CalloutAnnotationWrapper.$, 0);
            this.uq = new List$1(CalloutAnnotationWrapper.$, 0);
            this.ur = new List$1(CalloutAnnotationWrapper.$, 0);
            this.tl = null;
            this.tb = null;
            this.tr = null;
            this.uo = new LinkedList$1(CalloutAnnotationWrapper.$);
            this.ul = new Dictionary$2(CalloutAnnotationWrapper.$, LinkedListNode$1.$.specialize(CalloutAnnotationWrapper.$), 0);
            this.t3 = null;
            this.xx = new Rect(0, 0, 0, 1, 1);
            this.ua = false;
            this.u2 = 0;
            this.xw = Rect.empty;
            this.t8 = false;
            this.t9 = false;
            this.calloutContentUpdating = null;
            this.calloutLabelUpdating = null;
            this.calloutSeriesSelecting = null;
            this.up = new List$1(SeriesPointOfInterest.$, 0);
            this.uc = false;
            this.ud = false;
            this.ut = 0;
            this.ub = false;
            this.t7 = true;
            this.td = 1;
            FastItemObjectColumn.m();
            this.tb = null;
            this.tl = new CalloutPlacementPositionsCollection();
            let a = this.tl;
            a.collectionChanged = delegateCombine(a.collectionChanged, runOn(this, this.wh));
            this.qy = true;
            let b = new CalloutLayerFrame();
            let c = new CalloutLayerFrame();
            let d = new CalloutLayerFrame();
            let e = this.hr / 1000;
            this.qq = b;
            this.qp = c;
            this.qr = d;
            this.ab = CalloutLayer.$;
        }
        wh(a, b) {
            this.wq();
        }
        wq() {
            this.tb = this.tc(this.tm);
            this.wn();
        }
        wi(a, b) {
            this.ur.clear();
            this.mn(false);
        }
        k5(a, b, c, d) {
            super.k5(a, b, c, d);
            let e = this.um();
            switch (a) {
                case 3:
                    this.wv(b, e);
                    break;
                case 1:
                    for (let f = b; f < b + c; f++) {
                        let g = new CalloutAnnotation();
                        let h = new CalloutAnnotationWrapper();
                        h.b = g;
                        h.b.series = this.tq;
                        this.ur.insert(f, h);
                        this.wv(f, e);
                    }
                    break;
                case 0:
                    this.ur.v(b, c);
                    break;
                case 2:
                    for (let i = b; i < b + c; i++) {
                        this.wv(i, e);
                    }
                    break;
                case 4:
                    this.ur.clear();
                    for (let j = 0; j < this.cl.count; j++) {
                        let k = new CalloutAnnotation();
                        let l = new CalloutAnnotationWrapper();
                        l.b = k;
                        l.b.series = this.tq;
                        this.ur.add(l);
                        this.wv(j, e);
                    }
                    break;
            }
            this.mn(true);
        }
        er(a) {
            return false;
        }
        um() {
            let a = new Dictionary$2(String_$type, Series.$, 0);
            if (this.ce != null) {
                for (let b = 0; b < this.ce.series.count; b++) {
                    let c = this.ce.series._inner[b];
                    if (c.name != null && !a.containsKey(c.name)) {
                        a.addItem(c.name, c);
                    }
                }
            }
            return a;
        }
        wv(a, b) {
            if (this.t2 == null || this.t0 == null) {
                return;
            }
            let c = a;
            if (this.t1 != null) {
                c = this.t1.item(a);
            }
            let d = this.t2.item(a);
            let e = this.t0.item(a);
            let f = this.ur._inner[a];
            if (this.tz != null) {
                if (f.b.ab != this.tz.item(a)) {
                    f.b.key = this.tz.item(a);
                }
            }
            if (this.ul.containsKey(f)) {
                f.b = this.ul.item(f).c.b;
            }
            f.b.xValue = c;
            f.b.yValue = d;
            if (this.calloutLabelUpdating != null) {
                let g = ((() => {
                    let $ret = new CalloutLabelUpdatingEventArgs();
                    $ret.d = c;
                    $ret.e = d;
                    $ret.item = this.cl.item(a);
                    return $ret;
                })());
                this.calloutLabelUpdating(this, g);
                if (g.c != null && !Base.equalsStatic(g.c, f.b.ao)) {
                    let h = g.c;
                    f.b.text = h != null ? h.toString() : "";
                }
            }
            else {
                f.b.text = e != null ? e.toString() : "";
            }
            if (this.ty != null) {
                f.b.content = this.ty.item(a);
            }
            else {
                f.b.content = this.cl.item(a);
            }
            if (this.calloutSeriesSelecting != null) {
                let i = ((() => {
                    let $ret = new CalloutSeriesSelectingEventArgs();
                    $ret.c = c;
                    $ret.d = d;
                    $ret.item = this.cl.item(a);
                    return $ret;
                })());
                this.calloutSeriesSelecting(this, i);
                if (i.a != null) {
                    f.b.series = i.a;
                }
                else if (i.e != null) {
                    if (b.containsKey(i.e)) {
                        f.b.series = b.item(i.e);
                    }
                }
            }
            this.ww(f);
        }
        ww(a) {
            let b = new Thickness(0, DeviceUtils.g(3));
            if (isNaN_(this.xz.left) || isNaN_(this.xz.top) || isNaN_(this.xz.right) || isNaN_(this.xz.bottom)) {
                b = new Thickness(0, DeviceUtils.g(3));
            }
            else {
                b = this.xz;
            }
            let c = DeviceUtils.g(3);
            if (isNaN_(this.uu)) {
                c = DeviceUtils.g(3);
            }
            else {
                c = this.uu;
            }
            let d = this.xs != null ? this.xs : this.tk.ci(a.b.l);
            let e = this.xv != null ? this.xv : this.tk.cl();
            let f = this.xu != null ? this.xu : this.tk.ck(a.b.l);
            let g = this.xt != null ? this.xt : this.tk.cj(a.b.l);
            let h = isNaN_(this.u0) ? 0 : this.u0;
            if (this.uh && this.calloutStyleUpdating != null) {
                let i = new CalloutStyleUpdatingEventArgs();
                i.item = a.b.aa;
                i.xValue = a.b.ac;
                i.yValue = a.b.ad;
                i.series = a.b.l;
                i.background = d;
                i.textColor = e;
                i.outline = f;
                i.leaderBrush = g;
                i.strokeThickness = h;
                this.calloutStyleUpdating(this, i);
                d = i.background;
                e = i.textColor;
                f = i.outline;
                g = i.leaderBrush;
                h = i.strokeThickness;
            }
            a.b.backgroundPadding = b;
            a.b.backgroundCornerRadius = c;
            a.b.background = d;
            a.b.textColor = e;
            a.b.outline = f;
            a.b.leaderBrush = g;
            a.b.strokeThickness = h;
        }
        h1(a, b) {
            let c = this.jv(b);
            if (c == CalloutLayer.$$p[21]) {
                return this.h2(a, b, this.v1);
            }
            if (c == CalloutLayer.$$p[28]) {
                return this.h2(a, b, this.wc);
            }
            if (c == CalloutLayer.$$p[29]) {
                return this.h2(a, b, this.wf);
            }
            if (c == CalloutLayer.$$p[20]) {
                return this.h2(a, b, this.vy);
            }
            if (c == CalloutLayer.$$p[15]) {
                return this.h2(a, b, this.vr);
            }
            return super.h1(a, b);
        }
        get t0() {
            return this.tv;
        }
        set t0(a) {
            if (this.tv != a) {
                let b = this.tv;
                this.tv = a;
                this.raisePropertyChanged("LabelColumn", b, this.tv);
            }
        }
        get t1() {
            return this.tw;
        }
        set t1(a) {
            if (this.tw != a) {
                let b = this.tw;
                this.tw = a;
                this.raisePropertyChanged("XColumn", b, this.tw);
            }
        }
        get t2() {
            return this.tx;
        }
        set t2(a) {
            if (this.tx != a) {
                let b = this.tx;
                this.tx = a;
                this.raisePropertyChanged("YColumn", b, this.tx);
            }
        }
        get tz() {
            return this.tu;
        }
        set tz(a) {
            if (this.tu != a) {
                let b = this.tu;
                this.tu = a;
                this.raisePropertyChanged("KeyColumn", b, this.tu);
            }
        }
        get ty() {
            return this.tt;
        }
        set ty(a) {
            if (this.tt != a) {
                let b = this.tt;
                this.tt = a;
                this.raisePropertyChanged("ContentColumn", b, this.tt);
            }
        }
        wk(a, b) {
            if (b.propertyName == CalloutAnnotation.$$p[14] || b.propertyName == CalloutAnnotation.$$p[15]) {
                let c = a.k;
                if (!this.un.contains(c)) {
                    this.un.add_1(c);
                    this.uq.add(c);
                    this.mn(false);
                }
            }
        }
        by() {
            return new CalloutLayerView(this);
        }
        l4(a) {
            super.l4(a);
            this.tk = a;
        }
        get tm() {
            return this.tl;
        }
        set tm(a) {
            let b = this.tm;
            if (a != b) {
                this.tl = a;
                this.raisePropertyChanged("AllowedPositions", b, this.tm);
            }
        }
        get tf() {
            return EnumUtil.getEnumValue(AutoCalloutVisibilityMode_$type, this.c(CalloutLayer.xb));
        }
        set tf(a) {
            this.h(CalloutLayer.xb, enumGetBox(AutoCalloutVisibilityMode_$type, a));
        }
        get te() {
            return this.td;
        }
        set te(a) {
            this.td = a;
        }
        get xz() {
            return new Thickness(1, this.uw, this.uy, this.ux, this.uv);
        }
        get ts() {
            if (this.tr == null) {
                this.tr = FontUtil.toFontInfo(this.he, this.v6);
            }
            return this.tr;
        }
        r3(a, b) {
            if (this.tq == null || this.tq == a) {
                if (!this.at.c) {
                    this.mn(b);
                }
            }
        }
        r5(a, b) {
            super.r5(a, b);
            let c = a;
            c.q.clear();
            c.r.clear();
            c.n.clear();
            c.f.clear();
            c.i.clear();
            c.h.clear();
            c.k.clear();
            c.m.clear();
            c.l.clear();
            c.j.clear();
            c.g.clear();
            c.o.clear();
            c.p.clear();
            c.u.clear();
            c.v.clear();
            c.s.clear();
            c.t.clear();
            let d = this.us();
            let e = new List$1(CalloutAnnotationWrapper.$, 0);
            let f = true;
            if (this.ue) {
                if (this.qw(this.tq)) {
                    this.ws(this.tq, c, e);
                }
                else {
                    for (let g of fromEnum(this.ce.series)) {
                        if (this.qw(g)) {
                            if (!g.dd) {
                                if (!g.isVertical) {
                                    f = false;
                                }
                            }
                            this.ws(g, c, e);
                        }
                    }
                }
            }
            if (this.ue && this.te == 2) {
                let h = 0;
                let i = 0;
                let j = 1.7976931348623157E+308;
                let k = 1.7976931348623157E+308;
                let l = -1.7976931348623157E+308;
                let m = -1.7976931348623157E+308;
                if (e.count > 0) {
                    if (e._inner[0].c != null) {
                        h = e._inner[0].e;
                        i = e._inner[0].f;
                    }
                    for (let n = 0; n < e.count; n++) {
                        let o = e._inner[n];
                        if (o.c != null) {
                            let p = o.e;
                            let q = o.f;
                            if (p != h) {
                                j = Math.min(j, Math.abs(p - h));
                            }
                            if (q != i) {
                                k = Math.min(k, Math.abs(q - i));
                            }
                            l = Math.max(o.c.l + o.c.l, l);
                            m = Math.max(o.c.k + o.c.k, m);
                        }
                    }
                    if (f) {
                        if (m > k) {
                            e.clear();
                        }
                    }
                    else {
                        if (l > j) {
                            e.clear();
                        }
                    }
                }
            }
            this.wr(c, d, e);
        }
        nb(a, b) {
            super.nb(a, b);
            let c = b.width - this.xx.width;
            let d = b.height - this.xx.height;
            let e = 0;
            if (Math.abs(c) > Math.abs(d)) {
                e = c;
                this.ut = c * this.p7.width;
            }
            else {
                e = d;
                this.ut = d * this.p7.height;
            }
            if (e > 0 && this.ut > 5) {
                this.ud = true;
            }
            if (e < 0 && this.ut > 5) {
                this.uc = true;
            }
        }
        na(a, b) {
            super.na(a, b);
            if (!a.equals1(b)) {
                this.ub = true;
            }
        }
        get xy() {
            return this.xw;
        }
        set xy(a) {
            this.xw = a;
        }
        wr(a, b, c) {
            if (this.ce != null) {
                this.xx = this.ce.ta;
            }
            if (this.p7.isEmpty) {
                return;
            }
            this.xy = new Rect(0, this.p7.left, this.p7.top, this.p7.width, this.p7.height);
            if (this.t3 != null && this.vo != null && this.vo != this.t3.ap) {
                this.wm();
            }
            if (this.t3 == null) {
                let d = this.t4();
                if (d != null) {
                    this.t3 = d;
                    let e = this.t3;
                    e.labelsMoved = delegateCombine(e.labelsMoved, runOn(this, this.wj));
                }
                else {
                    let f = this.pz(this.b1);
                    let g = new Array(2);
                    g[0] = 0;
                    g[1] = 3;
                    if (this.tq != null) {
                        if (this.tq.isVertical) {
                            g = new Array(2);
                            g[0] = 2;
                            g[1] = 1;
                        }
                    }
                    else {
                        let h = false;
                        if (this.ce != null && this.ce.series.count > 0) {
                            h = true;
                            for (let i of fromEnum(this.ce.series)) {
                                if (!i.dd) {
                                    if (!i.isVertical) {
                                        h = false;
                                    }
                                }
                            }
                        }
                        if (h) {
                            g = new Array(2);
                            g[0] = 2;
                            g[1] = 1;
                        }
                    }
                    this.t3 = new LabelCollisionManager(this.p7.right, this.p7.bottom, this.p7, this.tk.j(), this.uz, this.t5(), g, this.u6(), this.u5(), this.uf, this.tb);
                    if (this.vo != null) {
                        this.t3.ap = this.vo;
                        this.t3.an = this;
                    }
                    let j = this.t3;
                    j.labelsMoved = delegateCombine(j.labelsMoved, runOn(this, this.wj));
                }
            }
            if (this.uc) {
                this.uc = false;
                if (this.t3.al > 2) {
                    this.ua = true;
                }
            }
            if (this.ud) {
                this.ud = false;
                if (this.ut > 5) {
                    this.ua = true;
                }
            }
            if (this.ub) {
                this.ub = false;
                this.t3.a3(this.p7.right, this.p7.bottom, this.p7);
                this.ua = true;
            }
            let k = new HashSet$1(CalloutAnnotationWrapper.$, 0);
            let l = new HashSet$1(CalloutAnnotationWrapper.$, 0);
            let m = new List$1(CalloutAnnotationWrapper.$, 0);
            let n = new List$1(CalloutAnnotationWrapper.$, 0);
            let o = new HashSet$1(CalloutAnnotationWrapper.$, 0);
            for (let p = 0; p < b.count; p++) {
                o.add_1(b._inner[p]);
            }
            for (let q = 0; q < c.count; q++) {
                o.add_1(c._inner[q]);
            }
            let r = this.uo.c;
            while (r != null) {
                let s = r.a;
                if (!o.contains(r.c)) {
                    n.add(r.c);
                    l.add_1(r.c);
                    let t = r.c.b;
                    t.propertyChanged = delegateRemove(t.propertyChanged, runOn(this, this.wk));
                    this.uo.h(r);
                    this.ul.removeItem(r.c);
                    this.t3.a2(r.c.c);
                }
                r = s;
            }
            for (let u = 0; u < b.count; u++) {
                if (!this.ul.containsKey(b._inner[u])) {
                    this.uo.f(b._inner[u]);
                    let v = b._inner[u].b;
                    v.propertyChanged = delegateCombine(v.propertyChanged, runOn(this, this.wk));
                    this.ul.addItem(b._inner[u], this.uo.d);
                    m.add(b._inner[u]);
                    k.add_1(b._inner[u]);
                    this.ua = true;
                }
            }
            for (let w = 0; w < c.count; w++) {
                if (!this.ul.containsKey(c._inner[w])) {
                    this.uo.f(c._inner[w]);
                    this.ul.addItem(c._inner[w], this.uo.d);
                    let x = c._inner[w].b;
                    x.propertyChanged = delegateCombine(x.propertyChanged, runOn(this, this.wk));
                    m.add(c._inner[w]);
                    k.add_1(c._inner[w]);
                    this.ua = true;
                }
            }
            if (this.t8 == true) {
                this.t8 = false;
                this.ua = true;
            }
            if (this.uq.count > 0) {
                this.ua = true;
                this.uq.clear();
                this.un.clear();
            }
            r = this.uo.c;
            while (r != null) {
                let y = this.t6(r.c);
                if (y == null) {
                    return;
                }
                if (!Base.equalsStatic(y, r.c.c.c)) {
                    let z = false;
                    if (r.c.c.c == null) {
                        z = true;
                    }
                    let aa = r.c.c;
                    aa.o = y.b;
                    aa.p = y.c;
                    if (!isNaN_(aa.o) && !isNaN_(aa.p)) {
                        aa.n = y.e;
                        aa.m = y.d;
                        if (aa.b == null) {
                            this.t3.t(aa, false);
                        }
                        if (z) {
                            this.t3.aq(aa);
                        }
                        else {
                            this.t3.az(aa);
                        }
                    }
                }
                r = r.a;
            }
            let ab = this.t3.am();
            let ac = this.t3.u();
            if (ac) {
                if (this.t3.q()) {
                    this.ua = true;
                }
            }
            if (this.ua && (ab != 0 || ac)) {
                this.ua = false;
                this.u2 = 0x7FFFFFFF;
                if (this.vo != null) {
                    let ad = true;
                    for (let ae = 0; ae < this.ce.series.count; ae++) {
                        let af = this.ce.series._inner[ae];
                        if (af.dd && typeCast(CalloutLayer.$, af) !== null) {
                            let ag = af;
                            if (ag.vo == this.vo) {
                                if (!ag.xy.equals1(this.t3.a5)) {
                                    ad = false;
                                    break;
                                }
                            }
                        }
                    }
                    if (ad) {
                        this.t3.a4();
                    }
                    else {
                        this.t3.ar();
                        this.t3.as();
                    }
                }
                else {
                    this.t3.a4();
                }
            }
            else {
                this.t3.as();
            }
            let ah = this.uo.c;
            let ai;
            let aj;
            let ak;
            let al;
            let am;
            let an;
            let ao;
            let ap;
            let aq;
            let ar;
            let as;
            let at;
            let au;
            let av;
            let aw;
            let ax;
            let ay = this.ug;
            while (ah != null) {
                let az = ah.c;
                let a0 = az.b;
                ai = a0.bk;
                aj = a0.bm;
                ak = a0.bl;
                al = a0.backgroundPadding.left;
                am = a0.backgroundPadding.top;
                an = a0.backgroundPadding.right;
                ao = a0.backgroundPadding.bottom;
                aq = a0.backgroundCornerRadius;
                ap = a0.y;
                ar = a0.bn;
                as = a0.ao;
                at = a0.aa;
                let a1 = az.c;
                au = a1.o - (a1.g - a1.l);
                av = a1.p - (a1.h - a1.k);
                aw = a1.g - a1.l;
                ax = a1.h - a1.k;
                if (ay) {
                    let a2 = new CalloutRenderStyleUpdatingEventArgs();
                    a2.background = ai;
                    a2.outline = aj;
                    a2.leaderBrush = ak;
                    a2.strokeThickness = ap;
                    a2.textColor = ar;
                    a2.item = at;
                    a2.series = a0.l;
                    a2.actualPosition = a1.a;
                    a2.xValue = a0.ac;
                    a2.yValue = a0.ad;
                    if (this.calloutRenderStyleUpdating != null) {
                        this.calloutRenderStyleUpdating(this, a2);
                        ai = a2.background;
                        aj = a2.outline;
                        ak = a2.leaderBrush;
                        ap = a2.strokeThickness;
                        ar = a2.textColor;
                    }
                }
                a.n.add1(az);
                a.f.add(ai);
                a.i.add(aj);
                a.h.add(ak);
                a.k.add(al);
                a.m.add(am);
                a.l.add(an);
                a.j.add(ao);
                a.g.add(aq);
                a.o.add(ap);
                a.p.add(ar);
                a.q.add1(as);
                a.r.add1(at);
                a.u.add(au);
                a.v.add(av);
                a.s.add(aw);
                a.t.add(ax);
                ah = ah.a;
            }
        }
        wm() {
            if (this.t3 != null) {
                let a = this.uo.c;
                while (a != null) {
                    let b = a.c.c;
                    if (b != null) {
                        this.t3.a2(b);
                    }
                    a = a.a;
                }
                let c = this.t3;
                c.labelsMoved = delegateRemove(c.labelsMoved, runOn(this, this.wj));
                this.t3 = null;
            }
            this.wl();
        }
        t4() {
            if (this.ce == null) {
                return null;
            }
            for (let a = 0; a < this.ce.series.count; a++) {
                let b = this.ce.series._inner[a];
                if (b.dd && typeCast(CalloutLayer.$, b) !== null) {
                    let c = b;
                    if (c != this) {
                        if (c.vo != null && c.vo == this.vo) {
                            if (c.t3 != null) {
                                return c.t3;
                            }
                        }
                    }
                }
            }
            return null;
        }
        u5() {
            return 20000;
        }
        u6() {
            return 300;
        }
        t5() {
            switch (this.th) {
                case 0: return 2;
                case 2: return 1;
                case 3: return 2;
                case 1: return 0;
            }
            return 2;
        }
        wj(a) {
            let b = this.t3.am();
            if (b < this.u2) {
                this.u2 = b;
                this.mn(false);
            }
        }
        t6(a) {
            let b = this.tq;
            if (a.b.l != null) {
                b = a.b.l;
            }
            if (b == null) {
                for (let c = 0; c < this.ce.series.count; c++) {
                    let d = this.ce.series._inner[c];
                    if (!d.dd) {
                        b = d;
                        break;
                    }
                }
            }
            if (b == null) {
                return null;
            }
            let e = b.ag();
            let f = b.gg();
            let g = null;
            let h = null;
            let i = false;
            for (let j = 0; j < e.length; j++) {
                if (e[j].b8) {
                    i = true;
                    g = e[j];
                }
                else if (e[j].cl) {
                    i = true;
                    h = e[j];
                }
                else if (e[j].co) {
                    h = e[j];
                }
                else {
                    g = e[j];
                }
            }
            if (g == null || h == null) {
                return null;
            }
            if (!g.cn() || !h.cn()) {
                return null;
            }
            let k = 0;
            let l = 0;
            if (g.ca && g.categoryMode != 0) {
                if (b.ds) {
                    k = b.getOffsetValue();
                }
                else if (b.dj) {
                    k = b.getOffsetValue();
                }
            }
            if (h.ca && h.categoryMode != 0) {
                if (b.dj) {
                    l = b.getOffsetValue();
                }
            }
            let m = new ScalerParams(0, this.ce.ta, g.kc, g.cg, g.j7());
            m.b = f;
            let n = new ScalerParams(0, this.ce.ta, h.kc, h.cg, h.j7());
            n.b = f;
            let o = 0;
            let p = 0;
            if (i) {
                o = g.ei(this.u1(a.b.ac), m) + k;
                p = h.ei(this.u1(a.b.ad), n) + l;
                let q = o;
                let r = p;
                let s = { $type: Point_$type, x: 0.5, y: 0.5 };
                let t = s.x + (r * Math.cos(q));
                o = ViewportUtils.c(t, m.e, m.d);
                let u = s.y + (r * Math.sin(q));
                p = ViewportUtils.f(u, n.e, n.d);
            }
            else {
                o = g.ei(this.u1(a.b.ac), m) + k;
                p = h.ei(this.u1(a.b.ad), n) + l;
            }
            let v = new QuadTreeBoundingBox();
            v.b = o;
            v.c = p;
            v.e = 3;
            v.d = 3;
            v.g = a.b;
            return v;
        }
        u1(a) {
            if (typeCast(Date_$type, a) !== null) {
                return a.getTime();
            }
            if (a == null) {
                return 0;
            }
            return a;
        }
        us() {
            let a = new List$1(CalloutAnnotationWrapper.$, 0);
            for (let b = 0; b < this.ur.count; b++) {
                if (stringIsNullOrEmpty(this.ur._inner[b].b.ao)) {
                    continue;
                }
                if (this.ur._inner[b].c == null) {
                    let c = new LabelCollisionInfo();
                    this.ur._inner[b].c = c;
                    let d = this.tk.cn(this.u7(this.ur._inner[b]), this.ur._inner[b].b.backgroundPadding);
                    c.k = d.height / 2;
                    c.l = d.width / 2;
                }
                let e = this.t6(this.ur._inner[b]);
                if (e == null || e.b < this.p7.left || e.b > this.p7.right || e.c < this.p7.top || e.c > this.p7.bottom) {
                    continue;
                }
                a.add(this.ur._inner[b]);
            }
            return a;
        }
        u7(a) {
            return a.b.ao;
        }
        qw(a) {
            if (!super.qw(a)) {
                return false;
            }
            if (this.v3 != null) {
                if (a.dx) {
                    let b = a.ju();
                    if (!Base.equalsStatic(this.v3, b)) {
                        return false;
                    }
                }
                else {
                    if (!Base.equalsStatic(this.v3, a.name)) {
                        return false;
                    }
                }
            }
            return true;
        }
        lx() {
            super.lx();
            if (!this.at.c && !this.cw()) {
                return;
            }
            if (this.t7) {
                this.t7 = false;
                this.wo();
            }
            if (this.cw()) {
                this.wu(this.qr, false);
            }
            else {
                this.wu(this.qp, false);
            }
        }
        wp() {
            if (!this.t9) {
                this.t9 = true;
                this.mn(true);
            }
        }
        ws(a, b, c) {
            let d = false;
            if (this.t9) {
                this.t9 = false;
                d = true;
            }
            if (!a.et && a.c2(this.up, this.uk, this.ui, this.u3)) {
                let e = this.up;
                for (let f = 0; f < this.up.count; f++) {
                    let g = e._inner[f];
                    let h = g.a != null ? g.a.item : null;
                    let i = g.a.item != null ? g.a.item : g.a;
                    let j = a;
                    let k = new CalloutKey(i, j);
                    let l = new CalloutAnnotationWrapper();
                    let m = new CalloutAnnotation();
                    l.b = m;
                    m.key = k;
                    let n = false;
                    if (this.ul.containsKey(l)) {
                        l = this.ul.item(l).c;
                        m = l.b;
                        n = d;
                    }
                    else {
                        n = true;
                    }
                    let o = m.ac;
                    let p = m.ad;
                    if (this.u1(o) != this.u1(g.b)) {
                        m.xValue = g.b;
                    }
                    if (this.u1(p) != this.u1(g.c)) {
                        m.yValue = g.c;
                    }
                    m.series = a;
                    let q = false;
                    if (g.d != m.ay) {
                        m.ay = g.d;
                        q = true;
                    }
                    if (n || q) {
                        if (this.calloutLabelUpdating != null) {
                            let r = ((() => {
                                let $ret = new CalloutLabelUpdatingEventArgs();
                                $ret.d = m.ac;
                                $ret.e = m.ad;
                                $ret.item = h;
                                $ret.a = a;
                                $ret.f = a.name;
                                return $ret;
                            })());
                            this.calloutLabelUpdating(this, r);
                            if (r.c != null && !Base.equalsStatic(r.c, l.b.ao)) {
                                let s = r.c;
                                l.b.text = s != null ? s.toString() : "";
                            }
                        }
                        else {
                            if (g.d != null) {
                                m.text = g.d;
                            }
                        }
                    }
                    if (m.ao == null) {
                        continue;
                    }
                    if (n || q) {
                        if (this.calloutContentUpdating != null) {
                            let t = ((() => {
                                let $ret = new CalloutContentUpdatingEventArgs();
                                $ret.c = m.ac;
                                $ret.d = m.ad;
                                $ret.item = h;
                                $ret.a = i;
                                return $ret;
                            })());
                            this.calloutContentUpdating(this, t);
                            if (t.a != null && t.a != l.b.aa) {
                                l.b.content = t.a;
                            }
                        }
                        else {
                            if (i != null && i != l.b.aa) {
                                l.b.content = i;
                            }
                        }
                    }
                    if (n) {
                        this.ww(l);
                    }
                    if (l.c == null) {
                        let u = new LabelCollisionInfo();
                        l.c = u;
                        let v = this.tk.cn(this.u7(l), l.b.backgroundPadding);
                        u.k = v.height / 2;
                        u.l = v.width / 2;
                    }
                    let w = this.t6(l);
                    if (w == null || w.b < this.p7.left || w.b > this.p7.right || w.c < this.p7.top || w.c > this.p7.bottom) {
                        continue;
                    }
                    l.e = w.b;
                    l.f = w.c;
                    c.add(l);
                }
            }
        }
        bq() {
            return 1;
        }
        au(a, b) {
            let c = this.t3.f(a, b);
            if (c == null) {
                return null;
            }
            return c.u;
        }
        ez(a, b) {
            if (this.t3 == null) {
                return false;
            }
            return this.t3.f(a, b) != null;
        }
        wu(a, b) {
            let c = 0;
            let d = new HashSet$1(CalloutAnnotationWrapper.$, 0);
            for (c = 0; c < a.q.count; c++) {
                let e = a.n._inner[c];
                if (isNaN_(a.u._inner[c]) || isNaN_(a.v._inner[c])) {
                    continue;
                }
                let f = this.tk.b8.item(e);
                d.add_1(e);
                if (f.h != a.q._inner[c]) {
                    f.h = a.q._inner[c];
                    let g = f.u();
                }
                f.e = a.o._inner[c];
                f.m = a.f._inner[c];
                f.p = a.p._inner[c];
                f.o = f.e > 0 ? a.i._inner[c] : this.b1.bq();
                f.n = a.h._inner[c];
                f.x = new Thickness(1, a.k._inner[c], a.m._inner[c], a.l._inner[c], a.j._inner[c]);
                f.d = a.g._inner[c];
                this.tk.cg(f, Math.min(a.s._inner[c], a.s._inner[c] + a.u._inner[c]), Math.min(a.t._inner[c], a.t._inner[c] + a.v._inner[c]));
                this.tk.ch(f, e, a.r._inner[c]);
                f.r = { $type: Point_$type, x: a.u._inner[c], y: a.v._inner[c] };
            }
            let h = new List$1(CalloutAnnotationWrapper.$, 0);
            for (let i of fromEnum(this.tk.b8.c)) {
                if (!d.contains(i)) {
                    h.add(i);
                }
            }
            for (let j = 0; j < h.count; j++) {
                this.tk.b8.h(h._inner[j]);
            }
        }
        r8(a, b) {
            super.r8(a, b);
            if (this.cw()) {
                this.wu(this.qr, true);
            }
            else {
                this.wu(this.qp, false);
            }
        }
        ep() {
            return true;
        }
        l9(a, b, c, d) {
            super.l9(a, b, c, d);
            switch (b) {
                case CalloutLayer.$$p[24]:
                    this.tr = null;
                    this.tk.cf();
                    this.mn(true);
                    break;
                case CalloutLayer.$$p[22]:
                case CalloutLayer.$$p[23]:
                    this.mn(true);
                    break;
                case CalloutLayer.$$p[14]:
                    this.mn(true);
                    break;
                case "SeriesViewer":
                    if (c != null) {
                        let e = c;
                        e.seriesAnimating = delegateRemove(e.seriesAnimating, runOn(this, this.wt));
                    }
                    if (d != null) {
                        let f = d;
                        f.seriesAnimating = delegateCombine(f.seriesAnimating, runOn(this, this.wt));
                    }
                    if (d == null) {
                        this.wm();
                    }
                    break;
                case "AutoCalloutVisibilityMode":
                    this.te = this.tg();
                    this.wn();
                    break;
                case "AllowedPositions":
                    if (c != null) {
                        let g = c;
                        g.collectionChanged = delegateRemove(g.collectionChanged, runOn(this, this.wh));
                    }
                    if (d != null) {
                        let h = d;
                        h.collectionChanged = delegateCombine(h.collectionChanged, runOn(this, this.wh));
                    }
                    this.tb = this.tc(this.tm);
                    this.wn();
                    break;
                case CalloutLayer.$$p[16]:
                case CalloutLayer.$$p[17]:
                case CalloutLayer.$$p[1]:
                case CalloutLayer.$$p[6]:
                case CalloutLayer.$$p[5]:
                case CalloutLayer.$$p[25]:
                case CalloutLayer.$$p[26]:
                case CalloutLayer.$$p[19]:
                case CalloutLayer.$$p[18]:
                case CalloutLayer.$$p[8]:
                case CalloutLayer.$$p[10]:
                case CalloutLayer.$$p[9]:
                case CalloutLayer.$$p[7]:
                case CalloutLayer.$$p[12]:
                case CalloutLayer.$$p[13]:
                    this.wn();
                    break;
                case CalloutLayer.$$p[21]:
                    if (this.cl != null) {
                        this.cl.deregisterColumn(this.t0);
                        this.t0 = this.ck(this.v1);
                    }
                    break;
                case "LabelColumn":
                    this.wn();
                    break;
                case CalloutLayer.$$p[15]:
                    if (this.cl != null) {
                        this.cl.deregisterColumn(this.ty);
                        this.ty = this.ck(this.vr);
                    }
                    break;
                case "ContentColumn":
                    this.wn();
                    break;
                case CalloutLayer.$$p[28]:
                    if (this.cl != null) {
                        this.cl.deregisterColumn(this.t1);
                        this.t1 = stringIsNullOrEmpty(this.wc) == false ? this.ck(this.wc) : null;
                    }
                    break;
                case "XColumn":
                    this.wn();
                    break;
                case CalloutLayer.$$p[29]:
                    if (this.cl != null) {
                        this.cl.deregisterColumn(this.t2);
                        this.t2 = this.ck(this.wf);
                    }
                    break;
                case "YColumn":
                    this.wn();
                    break;
                case CalloutLayer.$$p[20]:
                    if (this.cl != null) {
                        this.cl.deregisterColumn(this.tz);
                        this.tz = this.ck(this.vy);
                    }
                    break;
                case "KeyColumn":
                    this.wn();
                    break;
                case "FastItemsSource":
                    this.t8 = true;
                    if (typeCast(IFastItemsSource_$type, c) != null) {
                        c.deregisterColumn(this.t0);
                        c.deregisterColumn(this.ty);
                        c.deregisterColumn(this.t1);
                        c.deregisterColumn(this.t2);
                        c.deregisterColumn(this.tz);
                        this.t0 = null;
                        this.ty = null;
                        this.t1 = null;
                        this.t2 = null;
                        this.tz = null;
                        this.ur.clear();
                    }
                    if (typeCast(IFastItemsSource_$type, d) != null) {
                        this.t0 = this.ck(this.v1);
                        this.ty = this.ck(this.vr);
                        if (stringIsNullOrEmpty(this.wc) == false) {
                            this.t1 = this.ck(this.wc);
                        }
                        this.t2 = this.ck(this.wf);
                        this.tz = this.ck(this.vy);
                    }
                    this.wn();
                    break;
            }
        }
        tg() {
            if (this.tf == 0) {
                return 1;
            }
            return this.tf;
        }
        tc(a) {
            if (a == null || a.count == 0) {
                return null;
            }
            let b = new Array(a.count);
            for (let c = 0; c < a.count; c++) {
                b[c] = a._inner[c];
            }
            return b;
        }
        wt(a) {
            if (a.dd) {
                return;
            }
            if ((a == this.tq || this.tq == null) && this.ue) {
                this.mn(false);
            }
        }
        wn() {
            if (this.t7 == false) {
                this.t7 = true;
                this.mn(false);
            }
        }
        wl() {
            this.tk.b8.clear();
            this.uo.g();
            this.ul.clear();
        }
        wo() {
            if (this.t2 == null || this.t0 == null) {
                let a = this.uo.c;
                while (a != null) {
                    this.ww(a.c);
                    a = a.a;
                }
                return;
            }
            let b = this.um();
            for (let c = 0; c < this.t2.count; c++) {
                let d;
                if (this.ur.count <= c) {
                    let e = new CalloutAnnotation();
                    d = new CalloutAnnotationWrapper();
                    d.b = e;
                    d.b.series = this.tq;
                    this.ur.add(d);
                }
                else {
                    d = this.ur._inner[c];
                }
                this.wv(c, b);
            }
        }
    }
    CalloutLayer.$t = /*@__PURE__*/ markType(CalloutLayer, 'CalloutLayer', AnnotationLayer.$);
    CalloutLayer.xb = /*@__PURE__*/ DependencyProperty.i("AutoCalloutVisibilityMode", AutoCalloutVisibilityMode_$type, CalloutLayer.$, /*@__PURE__*/ new PropertyMetadata(2, /*@__PURE__*/ enumGetBox(AutoCalloutVisibilityMode_$type, 0), (a, b) => a.raisePropertyChanged("AutoCalloutVisibilityMode", b.oldValue, b.newValue)));
    CalloutLayer.$$p = /*@__PURE__*/ markDep(DependencyProperty, PropertyMetadata, CalloutLayer, 'raisePropertyChanged', ['AutoCalloutLabelPrecision:u3:wx', [1, 5], 'CalloutBackground:xs:wy', [Brush.$, null], 'CalloutCollisionMode:th:wz', [CalloutCollisionMode_$type, /*@__PURE__*/ enumGetBox(CalloutCollisionMode_$type, 3)], 'CalloutCornerRadius:uu:w0', [1, NaN], 'CalloutInterpolatedValuePrecision:u4:w1', [1, -1], 'CalloutLeaderBrush:xt:w2', [Brush.$, null], 'CalloutOutline:xu:w3', [Brush.$, null], 'CalloutPaddingBottom:uv:w4', [1, NaN], 'CalloutPaddingLeft:uw:w5', [1, NaN], 'CalloutPaddingRight:ux:w6', [1, NaN], 'CalloutPaddingTop:uy:w7', [1, NaN], 'CalloutPositionPadding:uz:w8', [1, 10], 'CalloutStrokeThickness:u0:w9', [1, NaN], 'CalloutTextColor:xv:xa', [Brush.$, null], 'CollisionChannel:vo:xc', [2, null], 'ContentMemberPath:vr:xd', [2, null], 'IsAutoCalloutBehaviorEnabled:ue:xe', [0, false], 'IsCalloutOffsettingEnabled:uf:xf', [0, true], 'IsCustomCalloutRenderStyleEnabled:ug:xg', [0, false], 'IsCustomCalloutStyleEnabled:uh:xh', [0, false], 'KeyMemberPath:vy:xi', [2, null], 'LabelMemberPath:v1:xj', [2, null], 'TargetSeriesName:v3:xk', [2, null], 'TargetSeries:tq:xl', [Series.$, null], 'TextStyle:v6:xm', [2, null], 'UseInterpolatedValueForAutoCalloutLabels:ui:xn', [0, false], 'UseSeriesColorForOutline:uj:xo', [0, false], 'UseValueForAutoCalloutLabels:uk:xp', [0, true], 'XMemberPath:wc:xq', [2, null], 'YMemberPath:wf:xr', [2, null]]);
    return CalloutLayer;
})();
/**
 * @hidden
 */
export let CalloutLayerView = /*@__PURE__*/ (() => {
    class CalloutLayerView extends AnnotationLayerView {
        constructor(a) {
            super(a);
            this.b4 = null;
            this.b9 = null;
            this.b8 = null;
            this.ca = NaN;
            this.b5 = null;
            this.b4 = a;
            this.b9 = new List$1(CalloutView.$, 0);
        }
        as() {
            super.as();
            this.b8 = ((() => {
                let $ret = new HashPool$2(CalloutAnnotationWrapper.$, CalloutView.$);
                $ret.create = runOn(this, this.b6);
                $ret.activate = runOn(this, this.cc);
                $ret.disactivate = runOn(this, this.ce);
                $ret.destroy = runOn(this, this.cd);
                return $ret;
            })());
        }
        b6() {
            let a = new CalloutView(this);
            this.b9.add(a);
            return a;
        }
        cc(a) {
            a.y = 0;
        }
        ce(a) {
            a.y = 1;
        }
        cd(a) {
            this.b9.remove(a);
        }
        cm(a) {
            if (a == null) {
                return a;
            }
            return BrushUtil.l(a, 0.1);
        }
        a6(a, b) {
            super.a6(a, b);
            a.ad(this.b7());
            if (a.d && !b) {
                for (let c = 0; c < this.b9.count; c++) {
                    let d = this.b9._inner[c];
                    if (d.y == 0) {
                        d.j(a);
                    }
                }
            }
        }
        b7() {
            if (this.b4.ts != null) {
                return this.b4.ts;
            }
            return this.e.ce.getFontInfo();
        }
        al(a) {
            super.al(a);
            for (let b = 0; b < this.b9.count; b++) {
                let c = this.b9._inner[b];
                if (c.y != 0) {
                    continue;
                }
                c.i(this.b4, this.b7(), a);
            }
        }
        co(a) {
            this.k.ad(this.b7());
            this.ca = this.cb();
            let b = this.k.ah(a, this.ca, true);
            return new Size(1, b.c, b.b);
        }
        cb() {
            let a = this.b7();
            if (isNaN_(this.ca)) {
                let b = FontUtil.getCurrentFontHeight(this.e.ce.cu.j.ae, a);
                this.ca = b;
            }
            return this.ca;
        }
        cn(a, b) {
            if (this.b5 == null) {
                this.b5 = new CalloutView(this);
            }
            this.b5.h = a;
            this.b5.x = b;
            let c = this.b5.u();
            this.b5.h = null;
            return c;
        }
        cg(a, b, c) {
            a.f = b;
            a.g = c;
        }
        ch(a, b, c) {
            a.k(this.e, b, c);
        }
        ci(a) {
            if (a != null) {
                return this.cm(a.pa);
            }
            return this.e.pa;
        }
        cl() {
            return ((() => {
                let $ret = new Brush();
                $ret.color = Color.u(255, 255, 255, 255);
                return $ret;
            })());
        }
        ck(a) {
            if (this.b4.uj) {
                if (a != null) {
                    return this.cm(a.pa);
                }
            }
            return ((() => {
                let $ret = new Brush();
                $ret.color = Color.u(255, 255, 255, 255);
                return $ret;
            })());
        }
        cj(a) {
            if (a != null) {
                return this.cm(a.o5);
            }
            return this.e.o5;
        }
        cf() {
            this.ca = NaN;
        }
    }
    CalloutLayerView.$t = /*@__PURE__*/ markType(CalloutLayerView, 'CalloutLayerView', AnnotationLayerView.$);
    return CalloutLayerView;
})();
/**
 * @hidden
 */
export let CalloutView = /*@__PURE__*/ (() => {
    class CalloutView extends Base {
        constructor(a) {
            super();
            this.a = null;
            this.y = 0;
            this.l = null;
            this.t = null;
            this.q = { $type: Point_$type, x: 0, y: 0 };
            this.s = null;
            this.w = new Thickness(0, 0);
            this.v = null;
            this.c = 0;
            this.f = 0;
            this.g = 0;
            this.b = null;
            this.s = new Line();
            this.s.ab = false;
            this.s._stroke = ((() => {
                let $ret = new Brush();
                $ret.color = Color.u(255, 0, 0, 0);
                return $ret;
            })());
            this.s.ad = 2;
            this.l = new TextBlock();
            this.t = new Rectangle();
            this.t.ad = 0;
            this.a = a;
            this.y = 0;
        }
        j(a) {
            a.aa();
            a.ag(this.f, this.g);
            let b = new TranslateTransform();
            b.j = this.v.left;
            b.k = this.v.top;
            this.t.j = b;
            a.s(this.s);
            a.aa();
            this.t.width = this.l.m + this.w.left + this.w.right;
            this.t.height = this.l.l + this.w.top + this.w.bottom;
            this.t.ap = this.c;
            this.t.aq = this.c;
            a.k(this.t.j);
            a.w(this.t);
            this.l.ag = true;
            this.l.o = this.w.top;
            this.l.n = this.w.left;
            a.x(this.l);
            a.z();
            a.z();
        }
        get r() {
            return this.q;
        }
        set r(a) {
            if (this.q.x != a.x || this.q.y != a.y) {
                let b = this.u();
                let c = b.height;
                let d = b.width;
                this.q = a;
                let e = CalloutViewHelper.b(this.r, d, c, this.s);
                this.v = e;
            }
        }
        get p() {
            return this.l.ao;
        }
        set p(a) {
            this.l.ao = a;
        }
        get o() {
            return this.t._stroke;
        }
        set o(a) {
            this.t._stroke = a;
        }
        get n() {
            return this.s._stroke;
        }
        set n(a) {
            this.s._stroke = a;
        }
        get m() {
            return this.t._fill;
        }
        set m(a) {
            this.t._fill = a;
        }
        get e() {
            return this.t.ad;
        }
        set e(a) {
            this.t.ad = a;
        }
        get x() {
            return this.w;
        }
        set x(a) {
            this.w = a;
        }
        get d() {
            return this.c;
        }
        set d(a) {
            this.c = a;
        }
        get h() {
            return this.l.al;
        }
        set h(a) {
            if (a == null) {
                this.l.al = "";
            }
            else {
                this.l.al = a.toString();
            }
            let b = this.u();
            let c = b.height;
            let d = b.width;
            let e = CalloutViewHelper.b(this.r, d, c, this.s);
            this.v = e;
        }
        u() {
            let a = this.a.co(this.l);
            this.l.m = a.width;
            this.l.l = a.height;
            return new Size(1, a.width + this.w.left + this.w.right, a.height + this.w.top + this.w.bottom);
        }
        k(a, b, c) {
            if (this.b == null) {
                this.b = new DataContext();
            }
            this.b.series = a;
            this.b.item = c;
            if (b.c != null) {
                b.c.u = this.b;
            }
        }
        i(a, b, c) {
            a.a9.exportCalloutData(this.f, this.g, this.v.left, this.v.top, c, this.t, this.l, b, this.s, "callout", ["Main", "Callout"]);
        }
    }
    CalloutView.$t = /*@__PURE__*/ markType(CalloutView, 'CalloutView');
    return CalloutView;
})();
