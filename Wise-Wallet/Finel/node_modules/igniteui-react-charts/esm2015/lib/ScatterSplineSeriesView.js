/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ScatterBaseView } from "./ScatterBaseView";
import { Path } from "igniteui-react-core";
import { Defaults } from "./Defaults";
import { markType } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
/**
 * @hidden
 */
export let ScatterSplineSeriesView = /*@__PURE__*/ (() => {
    class ScatterSplineSeriesView extends ScatterBaseView {
        constructor(a) {
            super(a);
            this.dg = new Path();
            this.df = new Path();
        }
        as() {
            super.as();
            if (!this.q) {
                this.b1.ql = Defaults.e;
            }
        }
        bb() {
            super.bb();
        }
        bc() {
            super.bc();
            this.df.an = this.dg.an;
            let a = this.bo();
            this.df._stroke = a;
            this.df.ad = this.e.fy + 3;
        }
        a6(a, b) {
            super.a6(a, b);
            if (a.d) {
                if (b) {
                    a.t(this.df);
                }
                else {
                    a.t(this.dg);
                }
            }
        }
        c4(a) {
            super.c4(a);
            this.dg.an = null;
            this.df.an = null;
        }
        al(a) {
            super.al(a);
            this.e.a9.exportPathData(a, this.dg, "shape", ["Main"]);
        }
        af() {
            let a = new Color();
            a.colorString = "rgba(95,95,95,0.5)";
            this.e.ph = a;
            this.e.g1 = 3;
            this.e.g2 = 1;
            this.e.g3 = 4;
            this.e.fb = false;
        }
    }
    ScatterSplineSeriesView.$t = /*@__PURE__*/ markType(ScatterSplineSeriesView, 'ScatterSplineSeriesView', ScatterBaseView.$);
    return ScatterSplineSeriesView;
})();
