/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { VoidEventArgsDescriptionMetadata } from "./VoidEventArgsDescriptionMetadata";
import { WebDropdownDescriptionMetadata } from "./WebDropdownDescriptionMetadata";
import { WebSelectDescription } from "./WebSelectDescription";
/**
 * @hidden
 */
export let WebSelectDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebSelectDescriptionMetadata extends Base {
        static b(a) {
            if (WebSelectDescriptionMetadata.a == null) {
                WebSelectDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebSelectDescriptionMetadata.c(WebSelectDescriptionMetadata.a);
            }
            if (a.k(WebSelectDescriptionMetadata.a)) {
                return;
            }
            a.ab(WebSelectDescriptionMetadata.a);
            VoidEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            WebDropdownDescriptionMetadata.c(a);
            a.item("__qualifiedNameTS", "String:Select");
            a.item("__tagNameWC", "String:igc-select");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
            a.item("Value", "String");
            a.item("Name", "String");
            a.item("Disabled", "Boolean");
            a.item("Required", "Boolean");
            a.item("Invalid", "Boolean");
            a.item("Outlined", "Boolean");
            a.item("Autofocus", "Boolean");
            a.item("Label", "String");
            a.item("Placeholder", "String");
            a.item("Dir", "ExportedType:string:SelectDir");
            a.item("Dir@stringUnion", "WebComponents;React");
            a.item("Dir@names", "Ltr;Rtl;Auto");
            a.item("FocusRef", "EventRef::focus");
            a.item("BlurRef", "EventRef::blur");
        }
        static d(a) {
            WebSelectDescriptionMetadata.b(a);
            a.ad("WebSelect", () => new WebSelectDescription());
            a.ac("WebSelect", WebSelectDescriptionMetadata.a);
        }
    }
    WebSelectDescriptionMetadata.$t = /*@__PURE__*/ markType(WebSelectDescriptionMetadata, 'WebSelectDescriptionMetadata');
    WebSelectDescriptionMetadata.a = null;
    return WebSelectDescriptionMetadata;
})();
