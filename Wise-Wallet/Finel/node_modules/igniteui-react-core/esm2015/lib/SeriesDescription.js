/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let SeriesDescription = /*@__PURE__*/ (() => {
    class SeriesDescription extends Description {
        get_type() {
            return "Series";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.bu = null;
            this.b2 = null;
            this.b1 = null;
            this.bz = null;
            this.bq = null;
            this.bp = null;
            this.bo = null;
            this.by = null;
            this.bx = null;
            this.b0 = null;
            this.bv = null;
            this.cb = null;
            this.cc = null;
            this.bh = 0;
            this.ag = 0;
            this.ao = 0;
            this.aw = 0;
            this.at = 0;
            this.au = 0;
            this.av = 0;
            this.bs = null;
            this.bl = null;
            this.b5 = null;
            this.br = null;
            this.b4 = null;
            this.as = 0;
            this.ah = 0;
            this.h = null;
            this.bm = null;
            this.ae = 0;
            this.ak = 0;
            this.k = false;
            this.l = false;
            this.o = false;
            this.q = false;
            this.n = false;
            this.ap = 0;
            this.b8 = null;
            this.s = false;
            this.aq = 0;
            this.ar = 0;
            this.ai = 0;
            this.ad = 0;
            this.al = 0;
            this.af = 0;
            this.m = false;
            this.r = false;
            this.cf = null;
            this.b6 = null;
            this.bi = 0;
            this.cd = null;
            this.b3 = null;
            this.p = false;
            this.bt = null;
            this.j = false;
            this.bw = null;
            this.bn = null;
            this.aj = 0;
            this.an = 0;
            this.am = 0;
            this.ce = null;
            this.b7 = null;
            this.ca = null;
            this.b9 = null;
        }
        get dataSourceRef() {
            return this.bu;
        }
        set dataSourceRef(a) {
            this.bu = a;
            this.g("DataSourceRef");
        }
        get legendRef() {
            return this.b2;
        }
        set legendRef(a) {
            this.b2 = a;
            this.g("LegendRef");
        }
        get legendItemVisibility() {
            return this.b1;
        }
        set legendItemVisibility(a) {
            this.b1 = a;
            this.g("LegendItemVisibility");
        }
        get legendItemBadgeTemplateRef() {
            return this.bz;
        }
        set legendItemBadgeTemplateRef(a) {
            this.bz = a;
            this.g("LegendItemBadgeTemplateRef");
        }
        get actualLegendItemBadgeTemplateRef() {
            return this.bq;
        }
        set actualLegendItemBadgeTemplateRef(a) {
            this.bq = a;
            this.g("ActualLegendItemBadgeTemplateRef");
        }
        get actualLegendItemBadgeOutline() {
            return this.bp;
        }
        set actualLegendItemBadgeOutline(a) {
            this.bp = a;
            this.g("ActualLegendItemBadgeOutline");
        }
        get actualLegendItemBadgeBrush() {
            return this.bo;
        }
        set actualLegendItemBadgeBrush(a) {
            this.bo = a;
            this.g("ActualLegendItemBadgeBrush");
        }
        get legendItemBadgeShape() {
            return this.by;
        }
        set legendItemBadgeShape(a) {
            this.by = a;
            this.g("LegendItemBadgeShape");
        }
        get legendItemBadgeMode() {
            return this.bx;
        }
        set legendItemBadgeMode(a) {
            this.bx = a;
            this.g("LegendItemBadgeMode");
        }
        get legendItemTemplateRef() {
            return this.b0;
        }
        set legendItemTemplateRef(a) {
            this.b0 = a;
            this.g("LegendItemTemplateRef");
        }
        get discreteLegendItemTemplateRef() {
            return this.bv;
        }
        set discreteLegendItemTemplateRef(a) {
            this.bv = a;
            this.g("DiscreteLegendItemTemplateRef");
        }
        get transitionEasingFunctionRef() {
            return this.cb;
        }
        set transitionEasingFunctionRef(a) {
            this.cb = a;
            this.g("TransitionEasingFunctionRef");
        }
        get transitionInEasingFunctionRef() {
            return this.cc;
        }
        set transitionInEasingFunctionRef(a) {
            this.cc = a;
            this.g("TransitionInEasingFunctionRef");
        }
        get transitionDuration() {
            return this.bh;
        }
        set transitionDuration(a) {
            this.bh = a;
            this.g("TransitionDuration");
        }
        get actualResolution() {
            return this.ag;
        }
        set actualResolution(a) {
            this.ag = a;
            this.g("ActualResolution");
        }
        get resolution() {
            return this.ao;
        }
        set resolution(a) {
            this.ao = a;
            this.g("Resolution");
        }
        get visibleRangeMarginTop() {
            return this.aw;
        }
        set visibleRangeMarginTop(a) {
            this.aw = a;
            this.g("VisibleRangeMarginTop");
        }
        get visibleRangeMarginBottom() {
            return this.at;
        }
        set visibleRangeMarginBottom(a) {
            this.at = a;
            this.g("VisibleRangeMarginBottom");
        }
        get visibleRangeMarginLeft() {
            return this.au;
        }
        set visibleRangeMarginLeft(a) {
            this.au = a;
            this.g("VisibleRangeMarginLeft");
        }
        get visibleRangeMarginRight() {
            return this.av;
        }
        set visibleRangeMarginRight(a) {
            this.av = a;
            this.g("VisibleRangeMarginRight");
        }
        get brush() {
            return this.bs;
        }
        set brush(a) {
            this.bs = a;
            this.g("Brush");
        }
        get actualBrush() {
            return this.bl;
        }
        set actualBrush(a) {
            this.bl = a;
            this.g("ActualBrush");
        }
        get outline() {
            return this.b5;
        }
        set outline(a) {
            this.b5 = a;
            this.g("Outline");
        }
        get actualOutline() {
            return this.br;
        }
        set actualOutline(a) {
            this.br = a;
            this.g("ActualOutline");
        }
        get lineJoin() {
            return this.b4;
        }
        set lineJoin(a) {
            this.b4 = a;
            this.g("LineJoin");
        }
        get thickness() {
            return this.as;
        }
        set thickness(a) {
            this.as = a;
            this.g("Thickness");
        }
        get actualThickness() {
            return this.ah;
        }
        set actualThickness(a) {
            this.ah = a;
            this.g("ActualThickness");
        }
        get dashArray() {
            return this.h;
        }
        set dashArray(a) {
            this.h = a;
            this.g("DashArray");
        }
        get actualHighlightingMode() {
            return this.bm;
        }
        set actualHighlightingMode(a) {
            this.bm = a;
            this.g("ActualHighlightingMode");
        }
        get actualHighlightingFadeOpacity() {
            return this.ae;
        }
        set actualHighlightingFadeOpacity(a) {
            this.ae = a;
            this.g("ActualHighlightingFadeOpacity");
        }
        get highlightingFadeOpacity() {
            return this.ak;
        }
        set highlightingFadeOpacity(a) {
            this.ak = a;
            this.g("HighlightingFadeOpacity");
        }
        get isActualLegendFinancial() {
            return this.k;
        }
        set isActualLegendFinancial(a) {
            this.k = a;
            this.g("IsActualLegendFinancial");
        }
        get isComponentHighlightingModeIgnored() {
            return this.l;
        }
        set isComponentHighlightingModeIgnored(a) {
            this.l = a;
            this.g("IsComponentHighlightingModeIgnored");
        }
        get isHighlightingEnabled() {
            return this.o;
        }
        set isHighlightingEnabled(a) {
            this.o = a;
            this.g("IsHighlightingEnabled");
        }
        get shouldHideAutoCallouts() {
            return this.q;
        }
        set shouldHideAutoCallouts(a) {
            this.q = a;
            this.g("ShouldHideAutoCallouts");
        }
        get isDropShadowEnabled() {
            return this.n;
        }
        set isDropShadowEnabled(a) {
            this.n = a;
            this.g("IsDropShadowEnabled");
        }
        get shadowBlur() {
            return this.ap;
        }
        set shadowBlur(a) {
            this.ap = a;
            this.g("ShadowBlur");
        }
        get shadowColor() {
            return this.b8;
        }
        set shadowColor(a) {
            this.b8 = a;
            this.g("ShadowColor");
        }
        get useSingleShadow() {
            return this.s;
        }
        set useSingleShadow(a) {
            this.s = a;
            this.g("UseSingleShadow");
        }
        get shadowOffsetX() {
            return this.aq;
        }
        set shadowOffsetX(a) {
            this.aq = a;
            this.g("ShadowOffsetX");
        }
        get shadowOffsetY() {
            return this.ar;
        }
        set shadowOffsetY(a) {
            this.ar = a;
            this.g("ShadowOffsetY");
        }
        get areaFillOpacity() {
            return this.ai;
        }
        set areaFillOpacity(a) {
            this.ai = a;
            this.g("AreaFillOpacity");
        }
        get actualAreaFillOpacity() {
            return this.ad;
        }
        set actualAreaFillOpacity(a) {
            this.ad = a;
            this.g("ActualAreaFillOpacity");
        }
        get markerFillOpacity() {
            return this.al;
        }
        set markerFillOpacity(a) {
            this.al = a;
            this.g("MarkerFillOpacity");
        }
        get actualMarkerFillOpacity() {
            return this.af;
        }
        set actualMarkerFillOpacity(a) {
            this.af = a;
            this.g("ActualMarkerFillOpacity");
        }
        get isDefaultToolTipSelected() {
            return this.m;
        }
        set isDefaultToolTipSelected(a) {
            this.m = a;
            this.g("IsDefaultToolTipSelected");
        }
        get showDefaultTooltip() {
            return this.r;
        }
        set showDefaultTooltip(a) {
            this.r = a;
            this.g("ShowDefaultTooltip");
        }
        get visibleRangeMode() {
            return this.cf;
        }
        set visibleRangeMode(a) {
            this.cf = a;
            this.g("VisibleRangeMode");
        }
        get outlineMode() {
            return this.b6;
        }
        set outlineMode(a) {
            this.b6 = a;
            this.g("OutlineMode");
        }
        get transitionInDuration() {
            return this.bi;
        }
        set transitionInDuration(a) {
            this.bi = a;
            this.g("TransitionInDuration");
        }
        get transitionInSpeedType() {
            return this.cd;
        }
        set transitionInSpeedType(a) {
            this.cd = a;
            this.g("TransitionInSpeedType");
        }
        get lineCap() {
            return this.b3;
        }
        set lineCap(a) {
            this.b3 = a;
            this.g("LineCap");
        }
        get mouseOverEnabled() {
            return this.p;
        }
        set mouseOverEnabled(a) {
            this.p = a;
            this.g("MouseOverEnabled");
        }
        get coercionMethodsRef() {
            return this.bt;
        }
        set coercionMethodsRef(a) {
            this.bt = a;
            this.g("CoercionMethodsRef");
        }
        get expectFunctions() {
            return this.j;
        }
        set expectFunctions(a) {
            this.j = a;
            this.g("ExpectFunctions");
        }
        get hitTestMode() {
            return this.bw;
        }
        set hitTestMode(a) {
            this.bw = a;
            this.g("HitTestMode");
        }
        get actualHitTestMode() {
            return this.bn;
        }
        set actualHitTestMode(a) {
            this.bn = a;
            this.g("ActualHitTestMode");
        }
        get finalValue() {
            return this.aj;
        }
        set finalValue(a) {
            this.aj = a;
            this.g("FinalValue");
        }
        get percentChange() {
            return this.an;
        }
        set percentChange(a) {
            this.an = a;
            this.g("PercentChange");
        }
        get opacity() {
            return this.am;
        }
        set opacity(a) {
            this.am = a;
            this.g("Opacity");
        }
        get visibility() {
            return this.ce;
        }
        set visibility(a) {
            this.ce = a;
            this.g("Visibility");
        }
        get renderRequestedRef() {
            return this.b7;
        }
        set renderRequestedRef(a) {
            this.b7 = a;
            this.g("RenderRequestedRef");
        }
        get tooltipTemplateRef() {
            return this.ca;
        }
        set tooltipTemplateRef(a) {
            this.ca = a;
            this.g("TooltipTemplateRef");
        }
        get title() {
            return this.b9;
        }
        set title(a) {
            this.b9 = a;
            this.g("Title");
        }
    }
    SeriesDescription.$t = /*@__PURE__*/ markType(SeriesDescription, 'SeriesDescription', Description.$);
    return SeriesDescription;
})();
