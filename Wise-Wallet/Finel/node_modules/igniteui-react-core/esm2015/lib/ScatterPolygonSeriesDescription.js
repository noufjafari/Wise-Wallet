/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ShapeSeriesBaseDescription } from "./ShapeSeriesBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let ScatterPolygonSeriesDescription = /*@__PURE__*/ (() => {
    class ScatterPolygonSeriesDescription extends ShapeSeriesBaseDescription {
        get_type() {
            return "ScatterPolygonSeries";
        }
        constructor() {
            super();
            this.d3 = null;
            this.eg = null;
            this.ef = null;
            this.d5 = 0;
            this.d9 = null;
            this.ea = null;
            this.d7 = null;
            this.ed = null;
            this.d8 = null;
            this.eb = null;
            this.ee = null;
            this.ec = null;
        }
        get shapeStyle() {
            return this.d3;
        }
        set shapeStyle(a) {
            this.d3 = a;
            this.g("ShapeStyle");
        }
        get markerType() {
            return this.eg;
        }
        set markerType(a) {
            this.eg = a;
            this.g("MarkerType");
        }
        get markerTemplateRef() {
            return this.ef;
        }
        set markerTemplateRef(a) {
            this.ef = a;
            this.g("MarkerTemplateRef");
        }
        get markerThickness() {
            return this.d5;
        }
        set markerThickness(a) {
            this.d5 = a;
            this.g("MarkerThickness");
        }
        get actualMarkerTemplateRef() {
            return this.d9;
        }
        set actualMarkerTemplateRef(a) {
            this.d9 = a;
            this.g("ActualMarkerTemplateRef");
        }
        get markerBrush() {
            return this.ea;
        }
        set markerBrush(a) {
            this.ea = a;
            this.g("MarkerBrush");
        }
        get actualMarkerBrush() {
            return this.d7;
        }
        set actualMarkerBrush(a) {
            this.d7 = a;
            this.g("ActualMarkerBrush");
        }
        get markerOutline() {
            return this.ed;
        }
        set markerOutline(a) {
            this.ed = a;
            this.g("MarkerOutline");
        }
        get actualMarkerOutline() {
            return this.d8;
        }
        set actualMarkerOutline(a) {
            this.d8 = a;
            this.g("ActualMarkerOutline");
        }
        get markerCollisionAvoidance() {
            return this.eb;
        }
        set markerCollisionAvoidance(a) {
            this.eb = a;
            this.g("MarkerCollisionAvoidance");
        }
        get markerOutlineMode() {
            return this.ee;
        }
        set markerOutlineMode(a) {
            this.ee = a;
            this.g("MarkerOutlineMode");
        }
        get markerFillMode() {
            return this.ec;
        }
        set markerFillMode(a) {
            this.ec = a;
            this.g("MarkerFillMode");
        }
    }
    ScatterPolygonSeriesDescription.$t = /*@__PURE__*/ markType(ScatterPolygonSeriesDescription, 'ScatterPolygonSeriesDescription', ShapeSeriesBaseDescription.$);
    return ScatterPolygonSeriesDescription;
})();
