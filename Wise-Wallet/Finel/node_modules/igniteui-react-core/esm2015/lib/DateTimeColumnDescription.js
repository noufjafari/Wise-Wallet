/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { DataGridColumnDescription } from "./DataGridColumnDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let DateTimeColumnDescription = /*@__PURE__*/ (() => {
    class DateTimeColumnDescription extends DataGridColumnDescription {
        get_type() {
            return "DateTimeColumn";
        }
        constructor() {
            super();
            this.fp = null;
            this.fw = null;
            this.fr = null;
            this.fh = null;
            this.fv = null;
            this.fm = false;
            this.ft = null;
            this.fq = null;
            this.fj = null;
            this.fs = null;
            this.fu = null;
        }
        get dateTimeFormat() {
            return this.fp;
        }
        set dateTimeFormat(a) {
            this.fp = a;
            this.g("DateTimeFormat");
        }
        get formatString() {
            return this.fw;
        }
        set formatString(a) {
            this.fw = a;
            this.g("FormatString");
        }
        get editorFormatString() {
            return this.fr;
        }
        set editorFormatString(a) {
            this.fr = a;
            this.g("EditorFormatString");
        }
        get formatSpecifiers() {
            return this.fh;
        }
        set formatSpecifiers(a) {
            this.fh = a;
            this.g("FormatSpecifiers");
        }
        get formatOverrideRef() {
            return this.fv;
        }
        set formatOverrideRef(a) {
            this.fv = a;
            this.g("FormatOverrideRef");
        }
        get showTodayButton() {
            return this.fm;
        }
        set showTodayButton(a) {
            this.fm = a;
            this.g("ShowTodayButton");
        }
        get editorType() {
            return this.ft;
        }
        set editorType(a) {
            this.ft = a;
            this.g("EditorType");
        }
        get editorDataSourceRef() {
            return this.fq;
        }
        set editorDataSourceRef(a) {
            this.fq = a;
            this.g("EditorDataSourceRef");
        }
        get editorDataSource() {
            return this.fj;
        }
        set editorDataSource(a) {
            this.fj = a;
            this.g("EditorDataSource");
        }
        get editorTextField() {
            return this.fs;
        }
        set editorTextField(a) {
            this.fs = a;
            this.g("EditorTextField");
        }
        get editorValueField() {
            return this.fu;
        }
        set editorValueField(a) {
            this.fu = a;
            this.g("EditorValueField");
        }
    }
    DateTimeColumnDescription.$t = /*@__PURE__*/ markType(DateTimeColumnDescription, 'DateTimeColumnDescription', DataGridColumnDescription.$);
    DateTimeColumnDescription.__canMarshalByValue1 = true;
    DateTimeColumnDescription.__marshalByValueAlias1 = "DateTimeColumn";
    return DateTimeColumnDescription;
})();
