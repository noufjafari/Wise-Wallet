/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebSearchInfoDescription } from "./WebSearchInfoDescription";
/**
 * @hidden
 */
export let WebSearchInfoDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebSearchInfoDescriptionMetadata extends Base {
        static b(a) {
            if (WebSearchInfoDescriptionMetadata.a == null) {
                WebSearchInfoDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebSearchInfoDescriptionMetadata.c(WebSearchInfoDescriptionMetadata.a);
            }
            if (a.k(WebSearchInfoDescriptionMetadata.a)) {
                return;
            }
            a.ab(WebSearchInfoDescriptionMetadata.a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:SearchInfo");
            a.item("__packageNameWC", "String:grids");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
            a.item("__isPlainObject", "Boolean");
            a.item("SearchText", "String");
            a.item("CaseSensitive", "Boolean");
            a.item("ExactMatch", "Boolean");
            a.item("ActiveMatchIndex", "Number:double");
            a.item("MatchInfoCacheRef", "(w:MatchInfoCache,wf:MatchInfoCache)DataRef:object");
        }
        static d(a) {
            WebSearchInfoDescriptionMetadata.b(a);
            a.ad("WebSearchInfo", () => new WebSearchInfoDescription());
            a.ac("WebSearchInfo", WebSearchInfoDescriptionMetadata.a);
        }
    }
    WebSearchInfoDescriptionMetadata.$t = /*@__PURE__*/ markType(WebSearchInfoDescriptionMetadata, 'WebSearchInfoDescriptionMetadata');
    WebSearchInfoDescriptionMetadata.a = null;
    return WebSearchInfoDescriptionMetadata;
})();
