/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let DataLegendSeriesValueInfoDescription = /*@__PURE__*/ (() => {
    class DataLegendSeriesValueInfoDescription extends Description {
        get_type() {
            return "DataLegendSeriesValueInfo";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.ab = 0;
            this.ao = null;
            this.ap = null;
            this.aq = null;
            this.ar = null;
            this.aj = null;
            this.ae = 0;
            this.ad = 0;
            this.p = false;
            this.o = false;
            this.k = false;
            this.n = false;
            this.l = false;
            this.m = false;
            this.j = false;
            this.as = null;
            this.af = 0;
            this.q = false;
            this.i = false;
            this.h = false;
            this.al = null;
            this.ak = null;
            this.am = null;
            this.an = null;
        }
        get value() {
            return this.ab;
        }
        set value(a) {
            this.ab = a;
            this.g("Value");
        }
        get valueNegativePrefix() {
            return this.ao;
        }
        set valueNegativePrefix(a) {
            this.ao = a;
            this.g("ValueNegativePrefix");
        }
        get valueNegativeSuffix() {
            return this.ap;
        }
        set valueNegativeSuffix(a) {
            this.ap = a;
            this.g("ValueNegativeSuffix");
        }
        get valuePositivePrefix() {
            return this.aq;
        }
        set valuePositivePrefix(a) {
            this.aq = a;
            this.g("ValuePositivePrefix");
        }
        get valuePositiveSuffix() {
            return this.ar;
        }
        set valuePositiveSuffix(a) {
            this.ar = a;
            this.g("ValuePositiveSuffix");
        }
        get formatWithSeriesColor() {
            return this.aj;
        }
        set formatWithSeriesColor(a) {
            this.aj = a;
            this.g("FormatWithSeriesColor");
        }
        get formatMinFractions() {
            return this.ae;
        }
        set formatMinFractions(a) {
            this.ae = a;
            this.g("FormatMinFractions");
        }
        get formatMaxFractions() {
            return this.ad;
        }
        set formatMaxFractions(a) {
            this.ad = a;
            this.g("FormatMaxFractions");
        }
        get formatUsePositiveColor() {
            return this.p;
        }
        set formatUsePositiveColor(a) {
            this.p = a;
            this.g("FormatUsePositiveColor");
        }
        get formatUseNegativeColor() {
            return this.o;
        }
        set formatUseNegativeColor(a) {
            this.o = a;
            this.g("FormatUseNegativeColor");
        }
        get formatAllowCurrency() {
            return this.k;
        }
        set formatAllowCurrency(a) {
            this.k = a;
            this.g("FormatAllowCurrency");
        }
        get formatAllowPercent() {
            return this.n;
        }
        set formatAllowPercent(a) {
            this.n = a;
            this.g("FormatAllowPercent");
        }
        get formatAllowDecimal() {
            return this.l;
        }
        set formatAllowDecimal(a) {
            this.l = a;
            this.g("FormatAllowDecimal");
        }
        get formatAllowInteger() {
            return this.m;
        }
        set formatAllowInteger(a) {
            this.m = a;
            this.g("FormatAllowInteger");
        }
        get formatAllowAbbreviation() {
            return this.j;
        }
        set formatAllowAbbreviation(a) {
            this.j = a;
            this.g("FormatAllowAbbreviation");
        }
        get valueType() {
            return this.as;
        }
        set valueType(a) {
            this.as = a;
            this.g("ValueType");
        }
        get index() {
            return this.af;
        }
        set index(a) {
            this.af = a;
            this.g("Index");
        }
        get isExcludeByDefault() {
            return this.q;
        }
        set isExcludeByDefault(a) {
            this.q = a;
            this.g("IsExcludeByDefault");
        }
        get allowUnits() {
            return this.i;
        }
        set allowUnits(a) {
            this.i = a;
            this.g("AllowUnits");
        }
        get allowLabels() {
            return this.h;
        }
        set allowLabels(a) {
            this.h = a;
            this.g("AllowLabels");
        }
        get memberPath() {
            return this.al;
        }
        set memberPath(a) {
            this.al = a;
            this.g("MemberPath");
        }
        get memberLabel() {
            return this.ak;
        }
        set memberLabel(a) {
            this.ak = a;
            this.g("MemberLabel");
        }
        get memberSymbol() {
            return this.am;
        }
        set memberSymbol(a) {
            this.am = a;
            this.g("MemberSymbol");
        }
        get memberUnit() {
            return this.an;
        }
        set memberUnit(a) {
            this.an = a;
            this.g("MemberUnit");
        }
    }
    DataLegendSeriesValueInfoDescription.$t = /*@__PURE__*/ markType(DataLegendSeriesValueInfoDescription, 'DataLegendSeriesValueInfoDescription', Description.$);
    return DataLegendSeriesValueInfoDescription;
})();
