/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { XYChartDescription } from "./XYChartDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let CategoryChartDescription = /*@__PURE__*/ (() => {
    class CategoryChartDescription extends XYChartDescription {
        get tooltipTemplateRef() {
            return this.u8;
        }
        set tooltipTemplateRef(a) {
            this.u8 = a;
            this.g("TooltipTemplateRef");
        }
        get width() {
            return this.vc;
        }
        set width(a) {
            this.vc = a;
            this.g("Width");
        }
        get height() {
            return this.u6;
        }
        set height(a) {
            this.u6 = a;
            this.g("Height");
        }
        get background() {
            return this.u4;
        }
        set background(a) {
            this.u4 = a;
            this.g("Background");
        }
        get_type() {
            return "CategoryChart";
        }
        constructor() {
            super();
            this.u8 = null;
            this.vc = null;
            this.u6 = null;
            this.u4 = null;
            this.uz = 0;
            this.u9 = null;
            this.u5 = null;
            this.u7 = null;
            this.th = false;
            this.ti = false;
            this.va = null;
            this.vb = null;
            this.t4 = 0;
            this.t7 = 0;
            this.t3 = 0;
            this.t6 = 0;
            this.t5 = 0;
            this.t8 = 0;
            this.ue = 0;
            this.u3 = null;
            this.tj = false;
            this.tk = false;
            this.t1 = 0;
            this.t2 = 0;
            this.to = false;
            this.tl = false;
            this.tn = false;
            this.vd = null;
            this.tp = false;
            this.u0 = 0;
            this.ug = 0;
            this.uf = 0;
            this.uh = 0;
            this.tb = null;
            this.tc = null;
            this.tm = false;
            this.t9 = 0;
            this.ua = 0;
            this.ub = 0;
            this.uc = 0;
            this.ud = 0;
            this.tf = false;
            this.tg = false;
        }
        get transitionInDuration() {
            return this.uz;
        }
        set transitionInDuration(a) {
            this.uz = a;
            this.g("TransitionInDuration");
        }
        get transitionInEasingFunctionRef() {
            return this.u9;
        }
        set transitionInEasingFunctionRef(a) {
            this.u9 = a;
            this.g("TransitionInEasingFunctionRef");
        }
        get chartType() {
            return this.u5;
        }
        set chartType(a) {
            this.u5 = a;
            this.g("ChartType");
        }
        get markerCollisionAvoidance() {
            return this.u7;
        }
        set markerCollisionAvoidance(a) {
            this.u7 = a;
            this.g("MarkerCollisionAvoidance");
        }
        get isSplineShapePartOfRange() {
            return this.th;
        }
        set isSplineShapePartOfRange(a) {
            this.th = a;
            this.g("IsSplineShapePartOfRange");
        }
        get isTransitionInEnabled() {
            return this.ti;
        }
        set isTransitionInEnabled(a) {
            this.ti = a;
            this.g("IsTransitionInEnabled");
        }
        get transitionInMode() {
            return this.va;
        }
        set transitionInMode(a) {
            this.va = a;
            this.g("TransitionInMode");
        }
        get transitionInSpeedType() {
            return this.vb;
        }
        set transitionInSpeedType(a) {
            this.vb = a;
            this.g("TransitionInSpeedType");
        }
        get xAxisInterval() {
            return this.t4;
        }
        set xAxisInterval(a) {
            this.t4 = a;
            this.g("XAxisInterval");
        }
        get xAxisMinorInterval() {
            return this.t7;
        }
        set xAxisMinorInterval(a) {
            this.t7 = a;
            this.g("XAxisMinorInterval");
        }
        get xAxisGap() {
            return this.t3;
        }
        set xAxisGap(a) {
            this.t3 = a;
            this.g("XAxisGap");
        }
        get xAxisMinimumGapSize() {
            return this.t6;
        }
        set xAxisMinimumGapSize(a) {
            this.t6 = a;
            this.g("XAxisMinimumGapSize");
        }
        get xAxisMaximumGap() {
            return this.t5;
        }
        set xAxisMaximumGap(a) {
            this.t5 = a;
            this.g("XAxisMaximumGap");
        }
        get xAxisOverlap() {
            return this.t8;
        }
        set xAxisOverlap(a) {
            this.t8 = a;
            this.g("XAxisOverlap");
        }
        get yAxisInterval() {
            return this.ue;
        }
        set yAxisInterval(a) {
            this.ue = a;
            this.g("YAxisInterval");
        }
        get autoMarginAndAngleUpdateMode() {
            return this.u3;
        }
        set autoMarginAndAngleUpdateMode(a) {
            this.u3 = a;
            this.g("AutoMarginAndAngleUpdateMode");
        }
        get shouldAutoExpandMarginForInitialLabels() {
            return this.tj;
        }
        set shouldAutoExpandMarginForInitialLabels(a) {
            this.tj = a;
            this.g("ShouldAutoExpandMarginForInitialLabels");
        }
        get shouldConsiderAutoRotationForInitialLabels() {
            return this.tk;
        }
        set shouldConsiderAutoRotationForInitialLabels(a) {
            this.tk = a;
            this.g("ShouldConsiderAutoRotationForInitialLabels");
        }
        get autoExpandMarginExtraPadding() {
            return this.t1;
        }
        set autoExpandMarginExtraPadding(a) {
            this.t1 = a;
            this.g("AutoExpandMarginExtraPadding");
        }
        get autoExpandMarginMaximumValue() {
            return this.t2;
        }
        set autoExpandMarginMaximumValue(a) {
            this.t2 = a;
            this.g("AutoExpandMarginMaximumValue");
        }
        get yAxisFavorLabellingScaleEnd() {
            return this.to;
        }
        set yAxisFavorLabellingScaleEnd(a) {
            this.to = a;
            this.g("YAxisFavorLabellingScaleEnd");
        }
        get xAxisEnhancedIntervalPreferMoreCategoryLabels() {
            return this.tl;
        }
        set xAxisEnhancedIntervalPreferMoreCategoryLabels(a) {
            this.tl = a;
            this.g("XAxisEnhancedIntervalPreferMoreCategoryLabels");
        }
        get yAxisEnhancedIntervalPreferMoreCategoryLabels() {
            return this.tn;
        }
        set yAxisEnhancedIntervalPreferMoreCategoryLabels(a) {
            this.tn = a;
            this.g("YAxisEnhancedIntervalPreferMoreCategoryLabels");
        }
        get yAxisAutoRangeBufferMode() {
            return this.vd;
        }
        set yAxisAutoRangeBufferMode(a) {
            this.vd = a;
            this.g("YAxisAutoRangeBufferMode");
        }
        get yAxisIsLogarithmic() {
            return this.tp;
        }
        set yAxisIsLogarithmic(a) {
            this.tp = a;
            this.g("YAxisIsLogarithmic");
        }
        get yAxisLogarithmBase() {
            return this.u0;
        }
        set yAxisLogarithmBase(a) {
            this.u0 = a;
            this.g("YAxisLogarithmBase");
        }
        get yAxisMinimumValue() {
            return this.ug;
        }
        set yAxisMinimumValue(a) {
            this.ug = a;
            this.g("YAxisMinimumValue");
        }
        get yAxisMaximumValue() {
            return this.uf;
        }
        set yAxisMaximumValue(a) {
            this.uf = a;
            this.g("YAxisMaximumValue");
        }
        get yAxisMinorInterval() {
            return this.uh;
        }
        set yAxisMinorInterval(a) {
            this.uh = a;
            this.g("YAxisMinorInterval");
        }
        get negativeBrushes() {
            return this.tb;
        }
        set negativeBrushes(a) {
            this.tb = a;
            this.g("NegativeBrushes");
        }
        get negativeOutlines() {
            return this.tc;
        }
        set negativeOutlines(a) {
            this.tc = a;
            this.g("NegativeOutlines");
        }
        get yAxisAbbreviateLargeNumbers() {
            return this.tm;
        }
        set yAxisAbbreviateLargeNumbers(a) {
            this.tm = a;
            this.g("YAxisAbbreviateLargeNumbers");
        }
        get xAxisZoomMaximumCategoryRange() {
            return this.t9;
        }
        set xAxisZoomMaximumCategoryRange(a) {
            this.t9 = a;
            this.g("XAxisZoomMaximumCategoryRange");
        }
        get xAxisZoomMaximumItemSpan() {
            return this.ua;
        }
        set xAxisZoomMaximumItemSpan(a) {
            this.ua = a;
            this.g("XAxisZoomMaximumItemSpan");
        }
        get xAxisZoomToCategoryRange() {
            return this.ub;
        }
        set xAxisZoomToCategoryRange(a) {
            this.ub = a;
            this.g("XAxisZoomToCategoryRange");
        }
        get xAxisZoomToCategoryStart() {
            return this.uc;
        }
        set xAxisZoomToCategoryStart(a) {
            this.uc = a;
            this.g("XAxisZoomToCategoryStart");
        }
        get xAxisZoomToItemSpan() {
            return this.ud;
        }
        set xAxisZoomToItemSpan(a) {
            this.ud = a;
            this.g("XAxisZoomToItemSpan");
        }
        get isCategoryHighlightingEnabled() {
            return this.tf;
        }
        set isCategoryHighlightingEnabled(a) {
            this.tf = a;
            this.g("IsCategoryHighlightingEnabled");
        }
        get isItemHighlightingEnabled() {
            return this.tg;
        }
        set isItemHighlightingEnabled(a) {
            this.tg = a;
            this.g("IsItemHighlightingEnabled");
        }
    }
    CategoryChartDescription.$t = /*@__PURE__*/ markType(CategoryChartDescription, 'CategoryChartDescription', XYChartDescription.$);
    return CategoryChartDescription;
})();
