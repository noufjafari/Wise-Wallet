/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebTreeSelectionOptionsEventArgsDescriptionMetadata } from "./WebTreeSelectionOptionsEventArgsDescriptionMetadata";
import { WebTreeItemComponentEventArgsDescriptionMetadata } from "./WebTreeItemComponentEventArgsDescriptionMetadata";
import { WebTreeDescription } from "./WebTreeDescription";
/**
 * @hidden
 */
export let WebTreeDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebTreeDescriptionMetadata extends Base {
        static b(a) {
            if (WebTreeDescriptionMetadata.a == null) {
                WebTreeDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebTreeDescriptionMetadata.c(WebTreeDescriptionMetadata.a);
            }
            if (a.k(WebTreeDescriptionMetadata.a)) {
                return;
            }
            a.ab(WebTreeDescriptionMetadata.a);
            WebTreeSelectionOptionsEventArgsDescriptionMetadata.d(a);
            WebTreeItemComponentEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:Tree");
            a.item("__tagNameWC", "String:igc-tree");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
            a.item("SingleBranchExpand", "Boolean");
            a.item("Selection", "ExportedType:string:TreeSelection");
            a.item("Selection@stringUnion", "WebComponents;React");
            a.item("Selection@names", "Multiple;None;Cascade");
            a.item("Dir", "ExportedType:string:Direction");
            a.item("Dir@stringUnion", "WebComponents;React");
            a.item("Dir@names", "Ltr;Rtl;Auto");
            a.item("Size", "ExportedType:string:SizableComponentSize");
            a.item("Size@names", "Large;Small;Medium");
            a.item("SelectionChangedRef", "EventRef::selectionChanged");
            a.item("ItemExpandingRef", "EventRef::itemExpanding");
            a.item("ItemExpandedRef", "EventRef::itemExpanded");
            a.item("ItemCollapsingRef", "EventRef::itemCollapsing");
            a.item("ItemCollapsedRef", "EventRef::itemCollapsed");
            a.item("ActiveItemRef", "EventRef::activeItem");
        }
        static d(a) {
            WebTreeDescriptionMetadata.b(a);
            a.ad("WebTree", () => new WebTreeDescription());
            a.ac("WebTree", WebTreeDescriptionMetadata.a);
        }
    }
    WebTreeDescriptionMetadata.$t = /*@__PURE__*/ markType(WebTreeDescriptionMetadata, 'WebTreeDescriptionMetadata');
    WebTreeDescriptionMetadata.a = null;
    return WebTreeDescriptionMetadata;
})();
