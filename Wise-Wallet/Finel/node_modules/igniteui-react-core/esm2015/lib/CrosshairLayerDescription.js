/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { AnnotationLayerDescription } from "./AnnotationLayerDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let CrosshairLayerDescription = /*@__PURE__*/ (() => {
    class CrosshairLayerDescription extends AnnotationLayerDescription {
        get_type() {
            return "CrosshairLayer";
        }
        constructor() {
            super();
            this.fh = null;
            this.fl = null;
            this.fj = null;
            this.fk = null;
            this.el = false;
            this.ej = false;
            this.fp = null;
            this.fn = null;
            this.ep = 0;
            this.fd = 0;
            this.fo = null;
            this.er = 0;
            this.et = 0;
            this.es = 0;
            this.eq = 0;
            this.ex = 0;
            this.ez = 0;
            this.ey = 0;
            this.ew = 0;
            this.eu = 0;
            this.fs = null;
            this.fq = null;
            this.ev = 0;
            this.fe = 0;
            this.fr = null;
            this.e0 = 0;
            this.fm = null;
            this.fi = null;
            this.ek = false;
        }
        get horizontalLineStroke() {
            return this.fh;
        }
        set horizontalLineStroke(a) {
            this.fh = a;
            this.g("HorizontalLineStroke");
        }
        get verticalLineStroke() {
            return this.fl;
        }
        set verticalLineStroke(a) {
            this.fl = a;
            this.g("VerticalLineStroke");
        }
        get targetSeriesName() {
            return this.fj;
        }
        set targetSeriesName(a) {
            this.fj = a;
            this.g("TargetSeriesName");
        }
        get targetSeriesRef() {
            return this.fk;
        }
        set targetSeriesRef(a) {
            this.fk = a;
            this.g("TargetSeriesRef");
        }
        get useInterpolation() {
            return this.el;
        }
        set useInterpolation(a) {
            this.el = a;
            this.g("UseInterpolation");
        }
        get isAxisAnnotationEnabled() {
            return this.ej;
        }
        set isAxisAnnotationEnabled(a) {
            this.ej = a;
            this.g("IsAxisAnnotationEnabled");
        }
        get xAxisAnnotationTextColor() {
            return this.fp;
        }
        set xAxisAnnotationTextColor(a) {
            this.fp = a;
            this.g("XAxisAnnotationTextColor");
        }
        get xAxisAnnotationBackground() {
            return this.fn;
        }
        set xAxisAnnotationBackground(a) {
            this.fn = a;
            this.g("XAxisAnnotationBackground");
        }
        get xAxisAnnotationBackgroundCornerRadius() {
            return this.ep;
        }
        set xAxisAnnotationBackgroundCornerRadius(a) {
            this.ep = a;
            this.g("XAxisAnnotationBackgroundCornerRadius");
        }
        get xAxisAnnotationInterpolatedValuePrecision() {
            return this.fd;
        }
        set xAxisAnnotationInterpolatedValuePrecision(a) {
            this.fd = a;
            this.g("XAxisAnnotationInterpolatedValuePrecision");
        }
        get xAxisAnnotationOutline() {
            return this.fo;
        }
        set xAxisAnnotationOutline(a) {
            this.fo = a;
            this.g("XAxisAnnotationOutline");
        }
        get xAxisAnnotationPaddingLeft() {
            return this.er;
        }
        set xAxisAnnotationPaddingLeft(a) {
            this.er = a;
            this.g("XAxisAnnotationPaddingLeft");
        }
        get xAxisAnnotationPaddingTop() {
            return this.et;
        }
        set xAxisAnnotationPaddingTop(a) {
            this.et = a;
            this.g("XAxisAnnotationPaddingTop");
        }
        get xAxisAnnotationPaddingRight() {
            return this.es;
        }
        set xAxisAnnotationPaddingRight(a) {
            this.es = a;
            this.g("XAxisAnnotationPaddingRight");
        }
        get xAxisAnnotationPaddingBottom() {
            return this.eq;
        }
        set xAxisAnnotationPaddingBottom(a) {
            this.eq = a;
            this.g("XAxisAnnotationPaddingBottom");
        }
        get yAxisAnnotationPaddingLeft() {
            return this.ex;
        }
        set yAxisAnnotationPaddingLeft(a) {
            this.ex = a;
            this.g("YAxisAnnotationPaddingLeft");
        }
        get yAxisAnnotationPaddingTop() {
            return this.ez;
        }
        set yAxisAnnotationPaddingTop(a) {
            this.ez = a;
            this.g("YAxisAnnotationPaddingTop");
        }
        get yAxisAnnotationPaddingRight() {
            return this.ey;
        }
        set yAxisAnnotationPaddingRight(a) {
            this.ey = a;
            this.g("YAxisAnnotationPaddingRight");
        }
        get yAxisAnnotationPaddingBottom() {
            return this.ew;
        }
        set yAxisAnnotationPaddingBottom(a) {
            this.ew = a;
            this.g("YAxisAnnotationPaddingBottom");
        }
        get xAxisAnnotationStrokeThickness() {
            return this.eu;
        }
        set xAxisAnnotationStrokeThickness(a) {
            this.eu = a;
            this.g("XAxisAnnotationStrokeThickness");
        }
        get yAxisAnnotationTextColor() {
            return this.fs;
        }
        set yAxisAnnotationTextColor(a) {
            this.fs = a;
            this.g("YAxisAnnotationTextColor");
        }
        get yAxisAnnotationBackground() {
            return this.fq;
        }
        set yAxisAnnotationBackground(a) {
            this.fq = a;
            this.g("YAxisAnnotationBackground");
        }
        get yAxisAnnotationBackgroundCornerRadius() {
            return this.ev;
        }
        set yAxisAnnotationBackgroundCornerRadius(a) {
            this.ev = a;
            this.g("YAxisAnnotationBackgroundCornerRadius");
        }
        get yAxisAnnotationInterpolatedValuePrecision() {
            return this.fe;
        }
        set yAxisAnnotationInterpolatedValuePrecision(a) {
            this.fe = a;
            this.g("YAxisAnnotationInterpolatedValuePrecision");
        }
        get yAxisAnnotationOutline() {
            return this.fr;
        }
        set yAxisAnnotationOutline(a) {
            this.fr = a;
            this.g("YAxisAnnotationOutline");
        }
        get yAxisAnnotationStrokeThickness() {
            return this.e0;
        }
        set yAxisAnnotationStrokeThickness(a) {
            this.e0 = a;
            this.g("YAxisAnnotationStrokeThickness");
        }
        get verticalLineVisibility() {
            return this.fm;
        }
        set verticalLineVisibility(a) {
            this.fm = a;
            this.g("VerticalLineVisibility");
        }
        get horizontalLineVisibility() {
            return this.fi;
        }
        set horizontalLineVisibility(a) {
            this.fi = a;
            this.g("HorizontalLineVisibility");
        }
        get skipUnknownValues() {
            return this.ek;
        }
        set skipUnknownValues(a) {
            this.ek = a;
            this.g("SkipUnknownValues");
        }
    }
    CrosshairLayerDescription.$t = /*@__PURE__*/ markType(CrosshairLayerDescription, 'CrosshairLayerDescription', AnnotationLayerDescription.$);
    return CrosshairLayerDescription;
})();
