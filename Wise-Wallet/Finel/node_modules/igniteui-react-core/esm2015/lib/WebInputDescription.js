/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { WebInputBaseDescription } from "./WebInputBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebInputDescription = /*@__PURE__*/ (() => {
    class WebInputDescription extends WebInputBaseDescription {
        get_type() {
            return "WebInput";
        }
        constructor() {
            super();
            this.ax = null;
            this.as = null;
            this.at = null;
            this.aw = null;
            this.af = false;
            this.aj = 0;
            this.ai = 0;
            this.av = null;
            this.au = null;
            this.ak = 0;
            this.ae = false;
            this.aq = null;
            this.al = 0;
            this.ar = null;
        }
        get value() {
            return this.ax;
        }
        set value(a) {
            this.ax = a;
            this.g("Value");
        }
        get displayType() {
            return this.as;
        }
        set displayType(a) {
            this.as = a;
            this.g("DisplayType");
        }
        get inputmode() {
            return this.at;
        }
        set inputmode(a) {
            this.at = a;
            this.g("Inputmode");
        }
        get pattern() {
            return this.aw;
        }
        set pattern(a) {
            this.aw = a;
            this.g("Pattern");
        }
        get invalid() {
            return this.af;
        }
        set invalid(a) {
            this.af = a;
            this.g("Invalid");
        }
        get minlength() {
            return this.aj;
        }
        set minlength(a) {
            this.aj = a;
            this.g("Minlength");
        }
        get maxlength() {
            return this.ai;
        }
        set maxlength(a) {
            this.ai = a;
            this.g("Maxlength");
        }
        get min() {
            return this.av;
        }
        set min(a) {
            this.av = a;
            this.g("Min");
        }
        get max() {
            return this.au;
        }
        set max(a) {
            this.au = a;
            this.g("Max");
        }
        get step() {
            return this.ak;
        }
        set step(a) {
            this.ak = a;
            this.g("Step");
        }
        get autofocus() {
            return this.ae;
        }
        set autofocus(a) {
            this.ae = a;
            this.g("Autofocus");
        }
        get autocomplete() {
            return this.aq;
        }
        set autocomplete(a) {
            this.aq = a;
            this.g("Autocomplete");
        }
        get tabIndex() {
            return this.al;
        }
        set tabIndex(a) {
            this.al = a;
            this.g("TabIndex");
        }
        get changeRef() {
            return this.ar;
        }
        set changeRef(a) {
            this.ar = a;
            this.g("ChangeRef");
        }
    }
    WebInputDescription.$t = /*@__PURE__*/ markType(WebInputDescription, 'WebInputDescription', WebInputBaseDescription.$);
    return WebInputDescription;
})();
