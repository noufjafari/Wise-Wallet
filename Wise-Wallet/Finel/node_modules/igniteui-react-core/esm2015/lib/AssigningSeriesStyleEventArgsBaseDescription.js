/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let AssigningSeriesStyleEventArgsBaseDescription = /*@__PURE__*/ (() => {
    class AssigningSeriesStyleEventArgsBaseDescription extends Description {
        get_type() {
            return "AssigningSeriesStyleEventArgsBase";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.ag = 0;
            this.af = 0;
            this.s = new Date();
            this.r = new Date();
            this.ak = null;
            this.aj = null;
            this.al = null;
            this.x = 0;
            this.v = 0;
            this.h = null;
            this.w = 0;
            this.y = 0;
            this.z = 0;
            this.k = false;
            this.j = false;
            this.l = false;
            this.m = false;
        }
        get startIndex() {
            return this.ag;
        }
        set startIndex(a) {
            this.ag = a;
            this.g("StartIndex");
        }
        get endIndex() {
            return this.af;
        }
        set endIndex(a) {
            this.af = a;
            this.g("EndIndex");
        }
        get startDate() {
            return this.s;
        }
        set startDate(a) {
            this.s = a;
            this.g("StartDate");
        }
        get endDate() {
            return this.r;
        }
        set endDate(a) {
            this.r = a;
            this.g("EndDate");
        }
        get getItemsRef() {
            return this.ak;
        }
        set getItemsRef(a) {
            this.ak = a;
            this.g("GetItemsRef");
        }
        get fill() {
            return this.aj;
        }
        set fill(a) {
            this.aj = a;
            this.g("Fill");
        }
        get stroke() {
            return this.al;
        }
        set stroke(a) {
            this.al = a;
            this.g("Stroke");
        }
        get opacity() {
            return this.x;
        }
        set opacity(a) {
            this.x = a;
            this.g("Opacity");
        }
        get fadeOpacity() {
            return this.v;
        }
        set fadeOpacity(a) {
            this.v = a;
            this.g("FadeOpacity");
        }
        get highlightingInfo() {
            return this.h;
        }
        set highlightingInfo(a) {
            this.h = a;
            this.g("HighlightingInfo");
        }
        get maxAllSeriesHighlightingProgress() {
            return this.w;
        }
        set maxAllSeriesHighlightingProgress(a) {
            this.w = a;
            this.g("MaxAllSeriesHighlightingProgress");
        }
        get sumAllSeriesHighlightingProgress() {
            return this.y;
        }
        set sumAllSeriesHighlightingProgress(a) {
            this.y = a;
            this.g("SumAllSeriesHighlightingProgress");
        }
        get totalAllSeriesHighlightingProgress() {
            return this.z;
        }
        set totalAllSeriesHighlightingProgress(a) {
            this.z = a;
            this.g("TotalAllSeriesHighlightingProgress");
        }
        get highlightingHandled() {
            return this.k;
        }
        set highlightingHandled(a) {
            this.k = a;
            this.g("HighlightingHandled");
        }
        get hasDateRange() {
            return this.j;
        }
        set hasDateRange(a) {
            this.j = a;
            this.g("HasDateRange");
        }
        get isNegativeShape() {
            return this.l;
        }
        set isNegativeShape(a) {
            this.l = a;
            this.g("IsNegativeShape");
        }
        get isThumbnail() {
            return this.m;
        }
        set isThumbnail(a) {
            this.m = a;
            this.g("IsThumbnail");
        }
    }
    AssigningSeriesStyleEventArgsBaseDescription.$t = /*@__PURE__*/ markType(AssigningSeriesStyleEventArgsBaseDescription, 'AssigningSeriesStyleEventArgsBaseDescription', Description.$);
    return AssigningSeriesStyleEventArgsBaseDescription;
})();
