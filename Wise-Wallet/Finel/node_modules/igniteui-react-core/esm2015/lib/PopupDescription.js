/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let PopupDescription = /*@__PURE__*/ (() => {
    class PopupDescription extends Description {
        get_type() {
            return "Popup";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.j = false;
            this.u = 0;
            this.h = false;
            this.ac = null;
            this.v = 0;
            this.t = 0;
            this.ab = null;
            this.aa = null;
            this.z = null;
            this.ad = null;
            this.r = 0;
            this.k = false;
            this.i = false;
            this.l = false;
            this.ah = null;
            this.ag = null;
            this.ae = null;
            this.af = null;
            this.ai = null;
            this.aj = null;
        }
        get isFocusable() {
            return this.j;
        }
        set isFocusable(a) {
            this.j = a;
            this.g("IsFocusable");
        }
        get animationDuration() {
            return this.u;
        }
        set animationDuration(a) {
            this.u = a;
            this.g("AnimationDuration");
        }
        get animationEnabled() {
            return this.h;
        }
        set animationEnabled(a) {
            this.h = a;
            this.g("AnimationEnabled");
        }
        get animationType() {
            return this.ac;
        }
        set animationType(a) {
            this.ac = a;
            this.g("AnimationType");
        }
        get elevation() {
            return this.v;
        }
        set elevation(a) {
            this.v = a;
            this.g("Elevation");
        }
        get actualElevation() {
            return this.t;
        }
        set actualElevation(a) {
            this.t = a;
            this.g("ActualElevation");
        }
        get actualUmbraShadowColor() {
            return this.ab;
        }
        set actualUmbraShadowColor(a) {
            this.ab = a;
            this.g("ActualUmbraShadowColor");
        }
        get actualPenumbraShadowColor() {
            return this.aa;
        }
        set actualPenumbraShadowColor(a) {
            this.aa = a;
            this.g("ActualPenumbraShadowColor");
        }
        get actualAmbientShadowColor() {
            return this.z;
        }
        set actualAmbientShadowColor(a) {
            this.z = a;
            this.g("ActualAmbientShadowColor");
        }
        get background() {
            return this.ad;
        }
        set background(a) {
            this.ad = a;
            this.g("Background");
        }
        get cornerRadius() {
            return this.r;
        }
        set cornerRadius(a) {
            this.r = a;
            this.g("CornerRadius");
        }
        get isHitTestVisible() {
            return this.k;
        }
        set isHitTestVisible(a) {
            this.k = a;
            this.g("IsHitTestVisible");
        }
        get disableHitTestDuringAnimation() {
            return this.i;
        }
        set disableHitTestDuringAnimation(a) {
            this.i = a;
            this.g("DisableHitTestDuringAnimation");
        }
        get isPointerEnabled() {
            return this.l;
        }
        set isPointerEnabled(a) {
            this.l = a;
            this.g("IsPointerEnabled");
        }
        get pointerPosition() {
            return this.ah;
        }
        set pointerPosition(a) {
            this.ah = a;
            this.g("PointerPosition");
        }
        get pointerBackground() {
            return this.ag;
        }
        set pointerBackground(a) {
            this.ag = a;
            this.g("PointerBackground");
        }
        get onClosedRef() {
            return this.ae;
        }
        set onClosedRef(a) {
            this.ae = a;
            this.g("OnClosedRef");
        }
        get onPopupRef() {
            return this.af;
        }
        set onPopupRef(a) {
            this.af = a;
            this.g("OnPopupRef");
        }
        get popupGotFocusRef() {
            return this.ai;
        }
        set popupGotFocusRef(a) {
            this.ai = a;
            this.g("PopupGotFocusRef");
        }
        get popupLostFocusRef() {
            return this.aj;
        }
        set popupLostFocusRef(a) {
            this.aj = a;
            this.g("PopupLostFocusRef");
        }
    }
    PopupDescription.$t = /*@__PURE__*/ markType(PopupDescription, 'PopupDescription', Description.$);
    return PopupDescription;
})();
