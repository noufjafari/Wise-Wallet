/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { SeriesDescription } from "./SeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let AnnotationLayerDescription = /*@__PURE__*/ (() => {
    class AnnotationLayerDescription extends SeriesDescription {
        get_type() {
            return "AnnotationLayer";
        }
        constructor() {
            super();
            this.dp = false;
            this.dq = false;
            this.dk = null;
            this.dm = false;
            this.ea = null;
            this.d7 = null;
            this.dz = 0;
            this.dw = 0;
            this.eb = null;
            this.d8 = null;
            this.ec = null;
            this.d9 = null;
            this.dy = 0;
            this.dv = 0;
            this.d0 = 0;
            this.dx = 0;
            this.de = null;
            this.dc = null;
            this.df = null;
            this.dd = null;
            this.dn = false;
        }
        get useIndex() {
            return this.dp;
        }
        set useIndex(a) {
            this.dp = a;
            this.g("UseIndex");
        }
        get useLegend() {
            return this.dq;
        }
        set useLegend(a) {
            this.dq = a;
            this.g("UseLegend");
        }
        get cursorPosition() {
            return this.dk;
        }
        set cursorPosition(a) {
            this.dk = a;
            this.g("CursorPosition");
        }
        get isDefaultCrosshairDisabled() {
            return this.dm;
        }
        set isDefaultCrosshairDisabled(a) {
            this.dm = a;
            this.g("IsDefaultCrosshairDisabled");
        }
        get appearanceMode() {
            return this.ea;
        }
        set appearanceMode(a) {
            this.ea = a;
            this.g("AppearanceMode");
        }
        get actualAppearanceMode() {
            return this.d7;
        }
        set actualAppearanceMode(a) {
            this.d7 = a;
            this.g("ActualAppearanceMode");
        }
        get shiftAmount() {
            return this.dz;
        }
        set shiftAmount(a) {
            this.dz = a;
            this.g("ShiftAmount");
        }
        get actualShiftAmount() {
            return this.dw;
        }
        set actualShiftAmount(a) {
            this.dw = a;
            this.g("ActualShiftAmount");
        }
        get horizontalAppearanceMode() {
            return this.eb;
        }
        set horizontalAppearanceMode(a) {
            this.eb = a;
            this.g("HorizontalAppearanceMode");
        }
        get actualHorizontalAppearanceMode() {
            return this.d8;
        }
        set actualHorizontalAppearanceMode(a) {
            this.d8 = a;
            this.g("ActualHorizontalAppearanceMode");
        }
        get verticalAppearanceMode() {
            return this.ec;
        }
        set verticalAppearanceMode(a) {
            this.ec = a;
            this.g("VerticalAppearanceMode");
        }
        get actualVerticalAppearanceMode() {
            return this.d9;
        }
        set actualVerticalAppearanceMode(a) {
            this.d9 = a;
            this.g("ActualVerticalAppearanceMode");
        }
        get horizontalShiftAmount() {
            return this.dy;
        }
        set horizontalShiftAmount(a) {
            this.dy = a;
            this.g("HorizontalShiftAmount");
        }
        get actualHorizontalShiftAmount() {
            return this.dv;
        }
        set actualHorizontalShiftAmount(a) {
            this.dv = a;
            this.g("ActualHorizontalShiftAmount");
        }
        get verticalShiftAmount() {
            return this.d0;
        }
        set verticalShiftAmount(a) {
            this.d0 = a;
            this.g("VerticalShiftAmount");
        }
        get actualVerticalShiftAmount() {
            return this.dx;
        }
        set actualVerticalShiftAmount(a) {
            this.dx = a;
            this.g("ActualVerticalShiftAmount");
        }
        get horizontalDashArray() {
            return this.de;
        }
        set horizontalDashArray(a) {
            this.de = a;
            this.g("HorizontalDashArray");
        }
        get actualHorizontalDashArray() {
            return this.dc;
        }
        set actualHorizontalDashArray(a) {
            this.dc = a;
            this.g("ActualHorizontalDashArray");
        }
        get verticalDashArray() {
            return this.df;
        }
        set verticalDashArray(a) {
            this.df = a;
            this.g("VerticalDashArray");
        }
        get actualVerticalDashArray() {
            return this.dd;
        }
        set actualVerticalDashArray(a) {
            this.dd = a;
            this.g("ActualVerticalDashArray");
        }
        get shouldRenderAsOverlay() {
            return this.dn;
        }
        set shouldRenderAsOverlay(a) {
            this.dn = a;
            this.g("ShouldRenderAsOverlay");
        }
    }
    AnnotationLayerDescription.$t = /*@__PURE__*/ markType(AnnotationLayerDescription, 'AnnotationLayerDescription', SeriesDescription.$);
    return AnnotationLayerDescription;
})();
