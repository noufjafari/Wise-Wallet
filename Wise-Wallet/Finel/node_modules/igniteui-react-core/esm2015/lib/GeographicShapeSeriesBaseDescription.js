/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { GeographicMapSeriesHostDescription } from "./GeographicMapSeriesHostDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let GeographicShapeSeriesBaseDescription = /*@__PURE__*/ (() => {
    class GeographicShapeSeriesBaseDescription extends GeographicMapSeriesHostDescription {
        get_type() {
            return "GeographicShapeSeriesBase";
        }
        constructor() {
            super();
            this.dw = null;
            this.dj = false;
            this.di = false;
            this.dv = null;
            this.dq = 0;
            this.dp = 0;
            this.dg = null;
            this.dm = 0;
            this.du = null;
            this.dt = null;
        }
        get shapeMemberPath() {
            return this.dw;
        }
        set shapeMemberPath(a) {
            this.dw = a;
            this.g("ShapeMemberPath");
        }
        get isCustomShapeStyleAllowed() {
            return this.dj;
        }
        set isCustomShapeStyleAllowed(a) {
            this.dj = a;
            this.g("IsCustomShapeStyleAllowed");
        }
        get isCustomShapeMarkerStyleAllowed() {
            return this.di;
        }
        set isCustomShapeMarkerStyleAllowed(a) {
            this.di = a;
            this.g("IsCustomShapeMarkerStyleAllowed");
        }
        get itemSearchMode() {
            return this.dv;
        }
        set itemSearchMode(a) {
            this.dv = a;
            this.g("ItemSearchMode");
        }
        get itemSearchThreshold() {
            return this.dq;
        }
        set itemSearchThreshold(a) {
            this.dq = a;
            this.g("ItemSearchThreshold");
        }
        get itemSearchPointsThreshold() {
            return this.dp;
        }
        set itemSearchPointsThreshold(a) {
            this.dp = a;
            this.g("ItemSearchPointsThreshold");
        }
        get shapefileDataSource() {
            return this.dg;
        }
        set shapefileDataSource(a) {
            this.dg = a;
            this.g("ShapefileDataSource");
        }
        get shapeFilterResolution() {
            return this.dm;
        }
        set shapeFilterResolution(a) {
            this.dm = a;
            this.g("ShapeFilterResolution");
        }
        get assigningShapeStyleRef() {
            return this.du;
        }
        set assigningShapeStyleRef(a) {
            this.du = a;
            this.g("AssigningShapeStyleRef");
        }
        get assigningShapeMarkerStyleRef() {
            return this.dt;
        }
        set assigningShapeMarkerStyleRef(a) {
            this.dt = a;
            this.g("AssigningShapeMarkerStyleRef");
        }
    }
    GeographicShapeSeriesBaseDescription.$t = /*@__PURE__*/ markType(GeographicShapeSeriesBaseDescription, 'GeographicShapeSeriesBaseDescription', GeographicMapSeriesHostDescription.$);
    return GeographicShapeSeriesBaseDescription;
})();
