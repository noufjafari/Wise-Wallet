/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebDensityChangedEventArgsDescriptionMetadata } from "./WebDensityChangedEventArgsDescriptionMetadata";
import { WebDisplayDensityBaseDescription } from "./WebDisplayDensityBaseDescription";
/**
 * @hidden
 */
export let WebDisplayDensityBaseDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebDisplayDensityBaseDescriptionMetadata extends Base {
        static b(a) {
            if (WebDisplayDensityBaseDescriptionMetadata.a == null) {
                WebDisplayDensityBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebDisplayDensityBaseDescriptionMetadata.c(WebDisplayDensityBaseDescriptionMetadata.a);
            }
            if (a.k(WebDisplayDensityBaseDescriptionMetadata.a)) {
                return;
            }
            a.ab(WebDisplayDensityBaseDescriptionMetadata.a);
            WebDensityChangedEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:DisplayDensityBase");
            a.item("__tagNameWC", "String:igc-display-density-base");
            a.item("__packageNameWC", "String:grids");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
            a.item("__skipSuffix", "Boolean");
            a.item("DisplayDensity", "ExportedType:string:DisplayDensity");
            a.item("DisplayDensity@stringUnion", "WebComponents;React");
            a.item("DisplayDensity@names", "Comfortable;Cosy;Compact");
            a.item("DensityChangedRef", "EventRef::densityChanged:customEvent");
        }
        static d(a) {
            WebDisplayDensityBaseDescriptionMetadata.b(a);
            a.ad("WebDisplayDensityBase", () => new WebDisplayDensityBaseDescription());
            a.ac("WebDisplayDensityBase", WebDisplayDensityBaseDescriptionMetadata.a);
        }
    }
    WebDisplayDensityBaseDescriptionMetadata.$t = /*@__PURE__*/ markType(WebDisplayDensityBaseDescriptionMetadata, 'WebDisplayDensityBaseDescriptionMetadata');
    WebDisplayDensityBaseDescriptionMetadata.a = null;
    return WebDisplayDensityBaseDescriptionMetadata;
})();
