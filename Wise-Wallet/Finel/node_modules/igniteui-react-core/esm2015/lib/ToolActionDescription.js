/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let ToolActionDescription = /*@__PURE__*/ (() => {
    class ToolActionDescription extends Description {
        get_type() {
            return "ToolAction";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.h = null;
            this.y = 0;
            this.bc = null;
            this.ax = null;
            this.av = null;
            this.bb = null;
            this.az = null;
            this.ay = null;
            this.an = null;
            this.v = 0;
            this.m = 0;
            this.w = 0;
            this.n = 0;
            this.u = 0;
            this.l = 0;
            this.x = 0;
            this.o = 0;
            this.ar = null;
            this.a4 = null;
            this.ap = null;
            this.aw = null;
            this.au = null;
            this.bf = null;
            this.aq = null;
            this.a0 = null;
            this.a1 = null;
            this.p = 0;
            this.a2 = null;
            this.a3 = null;
            this.j = false;
            this.a9 = null;
            this.bg = null;
            this.be = null;
            this.a7 = null;
            this.a5 = null;
            this.r = 0;
            this.s = 0;
            this.t = 0;
            this.q = 0;
            this.a6 = null;
            this.as = null;
            this.a8 = null;
            this.at = null;
            this.bh = null;
            this.ba = null;
            this.bd = null;
        }
        get actions() {
            return this.h;
        }
        set actions(a) {
            this.h = a;
            this.g("Actions");
        }
        get width() {
            return this.y;
        }
        set width(a) {
            this.y = a;
            this.g("Width");
        }
        get parentId() {
            return this.bc;
        }
        set parentId(a) {
            this.bc = a;
            this.g("ParentId");
        }
        get beforeId() {
            return this.ax;
        }
        set beforeId(a) {
            this.ax = a;
            this.g("BeforeId");
        }
        get afterId() {
            return this.av;
        }
        set afterId(a) {
            this.av = a;
            this.g("AfterId");
        }
        get overlayId() {
            return this.bb;
        }
        set overlayId(a) {
            this.bb = a;
            this.g("OverlayId");
        }
        get commandId() {
            return this.az;
        }
        set commandId(a) {
            this.az = a;
            this.g("CommandId");
        }
        get commandArgument() {
            return this.ay;
        }
        set commandArgument(a) {
            this.ay = a;
            this.g("CommandArgument");
        }
        get commandArgumentValue() {
            return this.an;
        }
        set commandArgumentValue(a) {
            this.an = a;
            this.g("CommandArgumentValue");
        }
        get paddingLeft() {
            return this.v;
        }
        set paddingLeft(a) {
            this.v = a;
            this.g("PaddingLeft");
        }
        get actualPaddingLeft() {
            return this.m;
        }
        set actualPaddingLeft(a) {
            this.m = a;
            this.g("ActualPaddingLeft");
        }
        get paddingRight() {
            return this.w;
        }
        set paddingRight(a) {
            this.w = a;
            this.g("PaddingRight");
        }
        get actualPaddingRight() {
            return this.n;
        }
        set actualPaddingRight(a) {
            this.n = a;
            this.g("ActualPaddingRight");
        }
        get paddingBottom() {
            return this.u;
        }
        set paddingBottom(a) {
            this.u = a;
            this.g("PaddingBottom");
        }
        get actualPaddingBottom() {
            return this.l;
        }
        set actualPaddingBottom(a) {
            this.l = a;
            this.g("ActualPaddingBottom");
        }
        get paddingTop() {
            return this.x;
        }
        set paddingTop(a) {
            this.x = a;
            this.g("PaddingTop");
        }
        get actualPaddingTop() {
            return this.o;
        }
        set actualPaddingTop(a) {
            this.o = a;
            this.g("ActualPaddingTop");
        }
        get actualHoverBackground() {
            return this.ar;
        }
        set actualHoverBackground(a) {
            this.ar = a;
            this.g("ActualHoverBackground");
        }
        get hoverBackground() {
            return this.a4;
        }
        set hoverBackground(a) {
            this.a4 = a;
            this.g("HoverBackground");
        }
        get actualBackground() {
            return this.ap;
        }
        set actualBackground(a) {
            this.ap = a;
            this.g("ActualBackground");
        }
        get background() {
            return this.aw;
        }
        set background(a) {
            this.aw = a;
            this.g("Background");
        }
        get actualTextColor() {
            return this.au;
        }
        set actualTextColor(a) {
            this.au = a;
            this.g("ActualTextColor");
        }
        get textColor() {
            return this.bf;
        }
        set textColor(a) {
            this.bf = a;
            this.g("TextColor");
        }
        get actualDisabledTextColor() {
            return this.aq;
        }
        set actualDisabledTextColor(a) {
            this.aq = a;
            this.g("ActualDisabledTextColor");
        }
        get disabledTextColor() {
            return this.a0;
        }
        set disabledTextColor(a) {
            this.a0 = a;
            this.g("DisabledTextColor");
        }
        get fontFamily() {
            return this.a1;
        }
        set fontFamily(a) {
            this.a1 = a;
            this.g("FontFamily");
        }
        get fontSize() {
            return this.p;
        }
        set fontSize(a) {
            this.p = a;
            this.g("FontSize");
        }
        get fontStyle() {
            return this.a2;
        }
        set fontStyle(a) {
            this.a2 = a;
            this.g("FontStyle");
        }
        get fontWeight() {
            return this.a3;
        }
        set fontWeight(a) {
            this.a3 = a;
            this.g("FontWeight");
        }
        get isDisabled() {
            return this.j;
        }
        set isDisabled(a) {
            this.j = a;
            this.g("IsDisabled");
        }
        get name() {
            return this.a9;
        }
        set name(a) {
            this.a9 = a;
            this.g("Name");
        }
        get title() {
            return this.bg;
        }
        set title(a) {
            this.bg = a;
            this.g("Title");
        }
        get subtitle() {
            return this.be;
        }
        set subtitle(a) {
            this.be = a;
            this.g("Subtitle");
        }
        get iconName() {
            return this.a7;
        }
        set iconName(a) {
            this.a7 = a;
            this.g("IconName");
        }
        get iconCollectionName() {
            return this.a5;
        }
        set iconCollectionName(a) {
            this.a5 = a;
            this.g("IconCollectionName");
        }
        get iconViewBoxLeft() {
            return this.r;
        }
        set iconViewBoxLeft(a) {
            this.r = a;
            this.g("IconViewBoxLeft");
        }
        get iconViewBoxTop() {
            return this.s;
        }
        set iconViewBoxTop(a) {
            this.s = a;
            this.g("IconViewBoxTop");
        }
        get iconViewBoxWidth() {
            return this.t;
        }
        set iconViewBoxWidth(a) {
            this.t = a;
            this.g("IconViewBoxWidth");
        }
        get iconViewBoxHeight() {
            return this.q;
        }
        set iconViewBoxHeight(a) {
            this.q = a;
            this.g("IconViewBoxHeight");
        }
        get iconFill() {
            return this.a6;
        }
        set iconFill(a) {
            this.a6 = a;
            this.g("IconFill");
        }
        get actualIconFill() {
            return this.as;
        }
        set actualIconFill(a) {
            this.as = a;
            this.g("ActualIconFill");
        }
        get iconStroke() {
            return this.a8;
        }
        set iconStroke(a) {
            this.a8 = a;
            this.g("IconStroke");
        }
        get actualIconStroke() {
            return this.at;
        }
        set actualIconStroke(a) {
            this.at = a;
            this.g("ActualIconStroke");
        }
        get visibility() {
            return this.bh;
        }
        set visibility(a) {
            this.bh = a;
            this.g("Visibility");
        }
        get onCommandRef() {
            return this.ba;
        }
        set onCommandRef(a) {
            this.ba = a;
            this.g("OnCommandRef");
        }
        get performedRef() {
            return this.bd;
        }
        set performedRef(a) {
            this.bd = a;
            this.g("PerformedRef");
        }
    }
    ToolActionDescription.$t = /*@__PURE__*/ markType(ToolActionDescription, 'ToolActionDescription', Description.$);
    return ToolActionDescription;
})();
