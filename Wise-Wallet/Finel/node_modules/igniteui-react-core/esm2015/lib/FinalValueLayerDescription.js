/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { AnnotationLayerDescription } from "./AnnotationLayerDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let FinalValueLayerDescription = /*@__PURE__*/ (() => {
    class FinalValueLayerDescription extends AnnotationLayerDescription {
        get_type() {
            return "FinalValueLayer";
        }
        constructor() {
            super();
            this.e1 = null;
            this.e2 = null;
            this.e0 = null;
            this.ez = null;
            this.ex = null;
            this.ej = 0;
            this.ev = 0;
            this.ey = null;
            this.el = 0;
            this.en = 0;
            this.em = 0;
            this.ek = 0;
            this.eo = 0;
        }
        get targetSeriesName() {
            return this.e1;
        }
        set targetSeriesName(a) {
            this.e1 = a;
            this.g("TargetSeriesName");
        }
        get targetSeriesRef() {
            return this.e2;
        }
        set targetSeriesRef(a) {
            this.e2 = a;
            this.g("TargetSeriesRef");
        }
        get finalValueSelectionMode() {
            return this.e0;
        }
        set finalValueSelectionMode(a) {
            this.e0 = a;
            this.g("FinalValueSelectionMode");
        }
        get axisAnnotationTextColor() {
            return this.ez;
        }
        set axisAnnotationTextColor(a) {
            this.ez = a;
            this.g("AxisAnnotationTextColor");
        }
        get axisAnnotationBackground() {
            return this.ex;
        }
        set axisAnnotationBackground(a) {
            this.ex = a;
            this.g("AxisAnnotationBackground");
        }
        get axisAnnotationBackgroundCornerRadius() {
            return this.ej;
        }
        set axisAnnotationBackgroundCornerRadius(a) {
            this.ej = a;
            this.g("AxisAnnotationBackgroundCornerRadius");
        }
        get axisAnnotationInterpolatedValuePrecision() {
            return this.ev;
        }
        set axisAnnotationInterpolatedValuePrecision(a) {
            this.ev = a;
            this.g("AxisAnnotationInterpolatedValuePrecision");
        }
        get axisAnnotationOutline() {
            return this.ey;
        }
        set axisAnnotationOutline(a) {
            this.ey = a;
            this.g("AxisAnnotationOutline");
        }
        get axisAnnotationPaddingLeft() {
            return this.el;
        }
        set axisAnnotationPaddingLeft(a) {
            this.el = a;
            this.g("AxisAnnotationPaddingLeft");
        }
        get axisAnnotationPaddingTop() {
            return this.en;
        }
        set axisAnnotationPaddingTop(a) {
            this.en = a;
            this.g("AxisAnnotationPaddingTop");
        }
        get axisAnnotationPaddingRight() {
            return this.em;
        }
        set axisAnnotationPaddingRight(a) {
            this.em = a;
            this.g("AxisAnnotationPaddingRight");
        }
        get axisAnnotationPaddingBottom() {
            return this.ek;
        }
        set axisAnnotationPaddingBottom(a) {
            this.ek = a;
            this.g("AxisAnnotationPaddingBottom");
        }
        get axisAnnotationStrokeThickness() {
            return this.eo;
        }
        set axisAnnotationStrokeThickness(a) {
            this.eo = a;
            this.g("AxisAnnotationStrokeThickness");
        }
    }
    FinalValueLayerDescription.$t = /*@__PURE__*/ markType(FinalValueLayerDescription, 'FinalValueLayerDescription', AnnotationLayerDescription.$);
    return FinalValueLayerDescription;
})();
