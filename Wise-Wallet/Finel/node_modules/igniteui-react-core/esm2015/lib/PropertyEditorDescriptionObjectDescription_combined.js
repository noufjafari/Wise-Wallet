/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let PropertyEditorDescriptionObjectDescription = /*@__PURE__*/ (() => {
    class PropertyEditorDescriptionObjectDescription extends Description {
        get_type() {
            return "PropertyEditorDescriptionObject";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.j = null;
            this.h = null;
        }
        get descriptionType() {
            return this.j;
        }
        set descriptionType(a) {
            this.j = a;
            this.g("DescriptionType");
        }
        get properties() {
            return this.h;
        }
        set properties(a) {
            this.h = a;
            this.g("Properties");
        }
    }
    PropertyEditorDescriptionObjectDescription.$t = /*@__PURE__*/ markType(PropertyEditorDescriptionObjectDescription, 'PropertyEditorDescriptionObjectDescription', Description.$);
    return PropertyEditorDescriptionObjectDescription;
})();
/**
 * @hidden
 */
export let PropertyEditorPropertyDescriptionDescription = /*@__PURE__*/ (() => {
    class PropertyEditorPropertyDescriptionDescription extends Description {
        get_type() {
            return "PropertyEditorPropertyDescription";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.ak = null;
            this.ai = null;
            this.am = null;
            this.aj = null;
            this.r = false;
            this.ah = null;
            this.i = null;
            this.j = null;
            this.ad = null;
            this.w = 0;
            this.t = 0;
            this.u = 0;
            this.v = 0;
            this.x = 0;
            this.p = null;
            this.h = null;
            this.k = null;
            this.af = null;
            this.ag = null;
            this.al = null;
        }
        get propertyPath() {
            return this.ak;
        }
        set propertyPath(a) {
            this.ak = a;
            this.g("PropertyPath");
        }
        get label() {
            return this.ai;
        }
        set label(a) {
            this.ai = a;
            this.g("Label");
        }
        get valueType() {
            return this.am;
        }
        set valueType(a) {
            this.am = a;
            this.g("ValueType");
        }
        get propertyDescriptionType() {
            return this.aj;
        }
        set propertyDescriptionType(a) {
            this.aj = a;
            this.g("PropertyDescriptionType");
        }
        get shouldOverrideDefaultEditor() {
            return this.r;
        }
        set shouldOverrideDefaultEditor(a) {
            this.r = a;
            this.g("ShouldOverrideDefaultEditor");
        }
        get elementDescriptionType() {
            return this.ah;
        }
        set elementDescriptionType(a) {
            this.ah = a;
            this.g("ElementDescriptionType");
        }
        get dropDownNames() {
            return this.i;
        }
        set dropDownNames(a) {
            this.i = a;
            this.g("DropDownNames");
        }
        get dropDownValues() {
            return this.j;
        }
        set dropDownValues(a) {
            this.j = a;
            this.g("DropDownValues");
        }
        get primitiveValue() {
            return this.ad;
        }
        set primitiveValue(a) {
            this.ad = a;
            this.g("PrimitiveValue");
        }
        get min() {
            return this.w;
        }
        set min(a) {
            this.w = a;
            this.g("Min");
        }
        get editorWidth() {
            return this.t;
        }
        set editorWidth(a) {
            this.t = a;
            this.g("EditorWidth");
        }
        get labelWidth() {
            return this.u;
        }
        set labelWidth(a) {
            this.u = a;
            this.g("LabelWidth");
        }
        get max() {
            return this.v;
        }
        set max(a) {
            this.v = a;
            this.g("Max");
        }
        get step() {
            return this.x;
        }
        set step(a) {
            this.x = a;
            this.g("Step");
        }
        get complexValue() {
            return this.p;
        }
        set complexValue(a) {
            this.p = a;
            this.g("ComplexValue");
        }
        get complexValues() {
            return this.h;
        }
        set complexValues(a) {
            this.h = a;
            this.g("ComplexValues");
        }
        get properties() {
            return this.k;
        }
        set properties(a) {
            this.k = a;
            this.g("Properties");
        }
        get buttonClickedRef() {
            return this.af;
        }
        set buttonClickedRef(a) {
            this.af = a;
            this.g("ButtonClickedRef");
        }
        get changedRef() {
            return this.ag;
        }
        set changedRef(a) {
            this.ag = a;
            this.g("ChangedRef");
        }
        get targetPropertyUpdatingRef() {
            return this.al;
        }
        set targetPropertyUpdatingRef(a) {
            this.al = a;
            this.g("TargetPropertyUpdatingRef");
        }
    }
    PropertyEditorPropertyDescriptionDescription.$t = /*@__PURE__*/ markType(PropertyEditorPropertyDescriptionDescription, 'PropertyEditorPropertyDescriptionDescription', Description.$);
    return PropertyEditorPropertyDescriptionDescription;
})();
