/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebDockManagerDescription = /*@__PURE__*/ (() => {
    class WebDockManagerDescription extends Description {
        get_type() {
            return "WebDockManager";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.j = null;
            this.l = null;
            this.p = null;
            this.h = null;
            this.v = false;
            this.ac = null;
            this.m = null;
            this.r = null;
            this.t = false;
            this.w = false;
            this.u = false;
            this.ab = null;
        }
        get layout() {
            return this.j;
        }
        set layout(a) {
            this.j = a;
            this.g("Layout");
        }
        get draggedPane() {
            return this.l;
        }
        set draggedPane(a) {
            this.l = a;
            this.g("DraggedPane");
        }
        get dropPosition() {
            return this.p;
        }
        set dropPosition(a) {
            this.p = a;
            this.g("DropPosition");
        }
        get activePane() {
            return this.h;
        }
        set activePane(a) {
            this.h = a;
            this.g("ActivePane");
        }
        get allowMaximize() {
            return this.v;
        }
        set allowMaximize(a) {
            this.v = a;
            this.g("AllowMaximize");
        }
        get showHeaderIconOnHover() {
            return this.ac;
        }
        set showHeaderIconOnHover(a) {
            this.ac = a;
            this.g("ShowHeaderIconOnHover");
        }
        get maximizedPane() {
            return this.m;
        }
        set maximizedPane(a) {
            this.m = a;
            this.g("MaximizedPane");
        }
        get resourceStrings() {
            return this.r;
        }
        set resourceStrings(a) {
            this.r = a;
            this.g("ResourceStrings");
        }
        get allowFloatingPanesResize() {
            return this.t;
        }
        set allowFloatingPanesResize(a) {
            this.t = a;
            this.g("AllowFloatingPanesResize");
        }
        get disableKeyboardNavigation() {
            return this.w;
        }
        set disableKeyboardNavigation(a) {
            this.w = a;
            this.g("DisableKeyboardNavigation");
        }
        get allowInnerDock() {
            return this.u;
        }
        set allowInnerDock(a) {
            this.u = a;
            this.g("AllowInnerDock");
        }
        get layoutChangeRef() {
            return this.ab;
        }
        set layoutChangeRef(a) {
            this.ab = a;
            this.g("LayoutChangeRef");
        }
    }
    WebDockManagerDescription.$t = /*@__PURE__*/ markType(WebDockManagerDescription, 'WebDockManagerDescription', Description.$);
    return WebDockManagerDescription;
})();
