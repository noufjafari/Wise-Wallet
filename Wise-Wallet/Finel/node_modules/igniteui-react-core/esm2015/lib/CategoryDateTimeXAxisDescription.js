/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { TimeAxisBaseDescription } from "./TimeAxisBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let CategoryDateTimeXAxisDescription = /*@__PURE__*/ (() => {
    class CategoryDateTimeXAxisDescription extends TimeAxisBaseDescription {
        get_type() {
            return "CategoryDateTimeXAxis";
        }
        constructor() {
            super();
            this.et = null;
            this.el = 0;
            this.ej = 0;
            this.em = 0;
            this.ek = 0;
            this.er = null;
            this.es = null;
        }
        get displayType() {
            return this.et;
        }
        set displayType(a) {
            this.et = a;
            this.g("DisplayType");
        }
        get interval() {
            return this.el;
        }
        set interval(a) {
            this.el = a;
            this.g("Interval");
        }
        get actualInterval() {
            return this.ej;
        }
        set actualInterval(a) {
            this.ej = a;
            this.g("ActualInterval");
        }
        get minorInterval() {
            return this.em;
        }
        set minorInterval(a) {
            this.em = a;
            this.g("MinorInterval");
        }
        get actualMinorInterval() {
            return this.ek;
        }
        set actualMinorInterval(a) {
            this.ek = a;
            this.g("ActualMinorInterval");
        }
        get actualIntervalChangeRef() {
            return this.er;
        }
        set actualIntervalChangeRef(a) {
            this.er = a;
            this.g("ActualIntervalChangeRef");
        }
        get actualMinorIntervalChangeRef() {
            return this.es;
        }
        set actualMinorIntervalChangeRef(a) {
            this.es = a;
            this.g("ActualMinorIntervalChangeRef");
        }
    }
    CategoryDateTimeXAxisDescription.$t = /*@__PURE__*/ markType(CategoryDateTimeXAxisDescription, 'CategoryDateTimeXAxisDescription', TimeAxisBaseDescription.$);
    return CategoryDateTimeXAxisDescription;
})();
