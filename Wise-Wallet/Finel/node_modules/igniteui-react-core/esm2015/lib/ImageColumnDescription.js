/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { DataGridColumnDescription } from "./DataGridColumnDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let ImageColumnDescription = /*@__PURE__*/ (() => {
    class ImageColumnDescription extends DataGridColumnDescription {
        get_type() {
            return "ImageColumn";
        }
        constructor() {
            super();
            this.fp = null;
            this.fn = null;
            this.fl = null;
            this.fh = null;
            this.fm = null;
            this.fo = null;
        }
        get imageStretchOption() {
            return this.fp;
        }
        set imageStretchOption(a) {
            this.fp = a;
            this.g("ImageStretchOption");
        }
        get editorType() {
            return this.fn;
        }
        set editorType(a) {
            this.fn = a;
            this.g("EditorType");
        }
        get editorDataSourceRef() {
            return this.fl;
        }
        set editorDataSourceRef(a) {
            this.fl = a;
            this.g("EditorDataSourceRef");
        }
        get editorDataSource() {
            return this.fh;
        }
        set editorDataSource(a) {
            this.fh = a;
            this.g("EditorDataSource");
        }
        get editorTextField() {
            return this.fm;
        }
        set editorTextField(a) {
            this.fm = a;
            this.g("EditorTextField");
        }
        get editorValueField() {
            return this.fo;
        }
        set editorValueField(a) {
            this.fo = a;
            this.g("EditorValueField");
        }
    }
    ImageColumnDescription.$t = /*@__PURE__*/ markType(ImageColumnDescription, 'ImageColumnDescription', DataGridColumnDescription.$);
    ImageColumnDescription.__canMarshalByValue1 = true;
    ImageColumnDescription.__marshalByValueAlias1 = "ImageColumn";
    return ImageColumnDescription;
})();
