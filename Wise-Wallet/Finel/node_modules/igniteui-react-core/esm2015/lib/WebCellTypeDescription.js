/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebCellTypeDescription = /*@__PURE__*/ (() => {
    class WebCellTypeDescription extends Description {
        get_type() {
            return "WebCellType";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.af = null;
            this.ad = null;
            this.u = false;
            this.q = false;
            this.r = false;
            this.s = false;
            this.h = null;
            this.j = null;
            this.l = null;
            this.ac = null;
            this.n = null;
            this.t = false;
            this.ae = null;
            this.al = null;
            this.aa = 0;
        }
        get value() {
            return this.af;
        }
        set value(a) {
            this.af = a;
            this.g("Value");
        }
        get editValue() {
            return this.ad;
        }
        set editValue(a) {
            this.ad = a;
            this.g("EditValue");
        }
        get selected() {
            return this.u;
        }
        set selected(a) {
            this.u = a;
            this.g("Selected");
        }
        get active() {
            return this.q;
        }
        set active(a) {
            this.q = a;
            this.g("Active");
        }
        get editable() {
            return this.r;
        }
        set editable(a) {
            this.r = a;
            this.g("Editable");
        }
        get editMode() {
            return this.s;
        }
        set editMode(a) {
            this.s = a;
            this.g("EditMode");
        }
        get column() {
            return this.h;
        }
        set column(a) {
            this.h = a;
            this.g("Column");
        }
        get grid() {
            return this.j;
        }
        set grid(a) {
            this.j = a;
            this.g("Grid");
        }
        get id() {
            return this.l;
        }
        set id(a) {
            this.l = a;
            this.g("Id");
        }
        get cellID() {
            return this.ac;
        }
        set cellID(a) {
            this.ac = a;
            this.g("CellID");
        }
        get validation() {
            return this.n;
        }
        set validation(a) {
            this.n = a;
            this.g("Validation");
        }
        get readonly() {
            return this.t;
        }
        set readonly(a) {
            this.t = a;
            this.g("Readonly");
        }
        get title() {
            return this.ae;
        }
        set title(a) {
            this.ae = a;
            this.g("Title");
        }
        get width() {
            return this.al;
        }
        set width(a) {
            this.al = a;
            this.g("Width");
        }
        get visibleColumnIndex() {
            return this.aa;
        }
        set visibleColumnIndex(a) {
            this.aa = a;
            this.g("VisibleColumnIndex");
        }
    }
    WebCellTypeDescription.$t = /*@__PURE__*/ markType(WebCellTypeDescription, 'WebCellTypeDescription', Description.$);
    WebCellTypeDescription.__marshalByValue = true;
    WebCellTypeDescription.__marshalByValueAlias = "CellType";
    return WebCellTypeDescription;
})();
