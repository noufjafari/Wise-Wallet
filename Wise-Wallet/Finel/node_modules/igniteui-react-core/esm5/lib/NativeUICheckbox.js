/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { NativeUIComponent } from "./NativeUIComponent";
import { markType } from "./type";
/**
 * @hidden
 */
var NativeUICheckbox = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(NativeUICheckbox, _super);
    function NativeUICheckbox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.bg = null;
        return _this;
    }
    NativeUICheckbox.prototype.get_e = function () {
        return 6;
    };
    Object.defineProperty(NativeUICheckbox.prototype, "bi", {
        get: function () {
            var a = this.ae(4);
            return a;
        },
        set: function (a) {
            this.a0(4, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUICheckbox.prototype, "bj", {
        get: function () {
            var a = this.ae(7);
            return a;
        },
        set: function (a) {
            this.a0(7, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUICheckbox.prototype, "bk", {
        get: function () {
            var a = this.ae(17);
            return a;
        },
        set: function (a) {
            this.a0(17, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUICheckbox.prototype, "bh", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            var b = this.bg;
            this.bg = a;
            if (this.bg != b) {
                if (b != null) {
                    this.ay(2, b);
                }
                if (this.bg != null) {
                    this.an(2, this.bg);
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    NativeUICheckbox.$t = markType(NativeUICheckbox, 'NativeUICheckbox', NativeUIComponent.$);
    return NativeUICheckbox;
}(NativeUIComponent));
export { NativeUICheckbox };
