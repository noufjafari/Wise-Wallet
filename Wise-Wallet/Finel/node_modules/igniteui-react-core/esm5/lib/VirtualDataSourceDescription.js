/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BaseDataSourceDescription } from "./BaseDataSourceDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var VirtualDataSourceDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(VirtualDataSourceDescription, _super);
    function VirtualDataSourceDescription() {
        var _this = _super.call(this) || this;
        _this.az = false;
        _this.a0 = false;
        _this.a6 = 0;
        _this.a5 = 0;
        _this.a4 = 0;
        _this.ba = null;
        _this.ay = false;
        return _this;
    }
    VirtualDataSourceDescription.prototype.get_type = function () {
        return "VirtualDataSource";
    };
    Object.defineProperty(VirtualDataSourceDescription.prototype, "isSectionCollapsable", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.g("IsSectionCollapsable");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(VirtualDataSourceDescription.prototype, "isSectionExpandedDefault", {
        get: function () {
            return this.a0;
        },
        set: function (a) {
            this.a0 = a;
            this.g("IsSectionExpandedDefault");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(VirtualDataSourceDescription.prototype, "pageSizeRequested", {
        get: function () {
            return this.a6;
        },
        set: function (a) {
            this.a6 = a;
            this.g("PageSizeRequested");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(VirtualDataSourceDescription.prototype, "maxCachedPages", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("MaxCachedPages");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(VirtualDataSourceDescription.prototype, "actualPageSize", {
        get: function () {
            return this.a4;
        },
        set: function (a) {
            this.a4 = a;
            this.g("ActualPageSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(VirtualDataSourceDescription.prototype, "concurrencyTag", {
        get: function () {
            return this.ba;
        },
        set: function (a) {
            this.ba = a;
            this.g("ConcurrencyTag");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(VirtualDataSourceDescription.prototype, "isBatchingEnabled", {
        get: function () {
            return this.ay;
        },
        set: function (a) {
            this.ay = a;
            this.g("IsBatchingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    VirtualDataSourceDescription.$t = markType(VirtualDataSourceDescription, 'VirtualDataSourceDescription', BaseDataSourceDescription.$);
    return VirtualDataSourceDescription;
}(BaseDataSourceDescription));
export { VirtualDataSourceDescription };
