/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { XYChartDescription } from "./XYChartDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var FinancialChartDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialChartDescription, _super);
    function FinancialChartDescription() {
        var _this = _super.call(this) || this;
        _this.v5 = null;
        _this.v7 = null;
        _this.v4 = null;
        _this.v2 = null;
        _this.ur = 0;
        _this.t3 = false;
        _this.uv = 0;
        _this.ub = false;
        _this.vu = 0;
        _this.u2 = 0;
        _this.u4 = 0;
        _this.u3 = 0;
        _this.u5 = 0;
        _this.v6 = null;
        _this.v8 = null;
        _this.ux = 0;
        _this.u0 = 0;
        _this.uy = 0;
        _this.uz = 0;
        _this.u1 = 0;
        _this.wa = null;
        _this.t5 = false;
        _this.v3 = null;
        _this.v9 = null;
        _this.t7 = false;
        _this.tf = null;
        _this.tk = null;
        _this.t9 = false;
        _this.uu = 0;
        _this.t8 = false;
        _this.ua = false;
        _this.wb = null;
        _this.tg = null;
        _this.th = null;
        _this.ti = null;
        _this.tj = null;
        _this.tn = null;
        _this.tm = null;
        _this.te = null;
        _this.tc = null;
        _this.uw = 0;
        _this.ut = 0;
        _this.us = 0;
        _this.uq = 0;
        _this.td = null;
        _this.vq = 0;
        _this.up = 0;
        _this.vt = 0;
        _this.vr = 0;
        _this.vp = 0;
        _this.vs = 0;
        _this.tl = null;
        _this.tb = null;
        _this.t6 = false;
        _this.wc = null;
        _this.u6 = 0;
        _this.t4 = false;
        _this.um = new Date();
        _this.ul = new Date();
        _this.to = null;
        _this.v1 = null;
        return _this;
    }
    Object.defineProperty(FinancialChartDescription.prototype, "tooltipTemplateRef", {
        get: function () {
            return this.v5;
        },
        set: function (a) {
            this.v5 = a;
            this.g("TooltipTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "width", {
        get: function () {
            return this.v7;
        },
        set: function (a) {
            this.v7 = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "height", {
        get: function () {
            return this.v4;
        },
        set: function (a) {
            this.v4 = a;
            this.g("Height");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "background", {
        get: function () {
            return this.v2;
        },
        set: function (a) {
            this.v2 = a;
            this.g("Background");
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartDescription.prototype.get_type = function () {
        return "FinancialChart";
    };
    Object.defineProperty(FinancialChartDescription.prototype, "leftMargin", {
        get: function () {
            return this.ur;
        },
        set: function (a) {
            this.ur = a;
            this.g("LeftMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isHorizontalZoomEnabled", {
        get: function () {
            return this.t3;
        },
        set: function (a) {
            this.t3 = a;
            this.g("IsHorizontalZoomEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "toolbarHeight", {
        get: function () {
            return this.uv;
        },
        set: function (a) {
            this.uv = a;
            this.g("ToolbarHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisIsLogarithmic", {
        get: function () {
            return this.ub;
        },
        set: function (a) {
            this.ub = a;
            this.g("YAxisIsLogarithmic");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisLogarithmBase", {
        get: function () {
            return this.vu;
        },
        set: function (a) {
            this.vu = a;
            this.g("YAxisLogarithmBase");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisInterval", {
        get: function () {
            return this.u2;
        },
        set: function (a) {
            this.u2 = a;
            this.g("YAxisInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMinimumValue", {
        get: function () {
            return this.u4;
        },
        set: function (a) {
            this.u4 = a;
            this.g("YAxisMinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMaximumValue", {
        get: function () {
            return this.u3;
        },
        set: function (a) {
            this.u3 = a;
            this.g("YAxisMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMinorInterval", {
        get: function () {
            return this.u5;
        },
        set: function (a) {
            this.u5 = a;
            this.g("YAxisMinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeType", {
        get: function () {
            return this.v6;
        },
        set: function (a) {
            this.v6 = a;
            this.g("VolumeType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMode", {
        get: function () {
            return this.v8;
        },
        set: function (a) {
            this.v8 = a;
            this.g("XAxisMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisZoomMaximumCategoryRange", {
        get: function () {
            return this.ux;
        },
        set: function (a) {
            this.ux = a;
            this.g("XAxisZoomMaximumCategoryRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisZoomToCategoryStart", {
        get: function () {
            return this.u0;
        },
        set: function (a) {
            this.u0 = a;
            this.g("XAxisZoomToCategoryStart");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisZoomMaximumItemSpan", {
        get: function () {
            return this.uy;
        },
        set: function (a) {
            this.uy = a;
            this.g("XAxisZoomMaximumItemSpan");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisZoomToCategoryRange", {
        get: function () {
            return this.uz;
        },
        set: function (a) {
            this.uz = a;
            this.g("XAxisZoomToCategoryRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisZoomToItemSpan", {
        get: function () {
            return this.u1;
        },
        set: function (a) {
            this.u1 = a;
            this.g("XAxisZoomToItemSpan");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMode", {
        get: function () {
            return this.wa;
        },
        set: function (a) {
            this.wa = a;
            this.g("YAxisMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isToolbarVisible", {
        get: function () {
            return this.t5;
        },
        set: function (a) {
            this.t5 = a;
            this.g("IsToolbarVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "chartType", {
        get: function () {
            return this.v3;
        },
        set: function (a) {
            this.v3 = a;
            this.g("ChartType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisLabelHorizontalAlignment", {
        get: function () {
            return this.v9;
        },
        set: function (a) {
            this.v9 = a;
            this.g("YAxisLabelHorizontalAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isWindowSyncedToVisibleRange", {
        get: function () {
            return this.t7;
        },
        set: function (a) {
            this.t7 = a;
            this.g("IsWindowSyncedToVisibleRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorTypes", {
        get: function () {
            return this.tf;
        },
        set: function (a) {
            this.tf = a;
            this.g("IndicatorTypes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayTypes", {
        get: function () {
            return this.tk;
        },
        set: function (a) {
            this.tk = a;
            this.g("OverlayTypes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisAbbreviateLargeNumbers", {
        get: function () {
            return this.t9;
        },
        set: function (a) {
            this.t9 = a;
            this.g("YAxisAbbreviateLargeNumbers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "resolution", {
        get: function () {
            return this.uu;
        },
        set: function (a) {
            this.uu = a;
            this.g("Resolution");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisEnhancedIntervalPreferMoreCategoryLabels", {
        get: function () {
            return this.t8;
        },
        set: function (a) {
            this.t8 = a;
            this.g("XAxisEnhancedIntervalPreferMoreCategoryLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisEnhancedIntervalPreferMoreCategoryLabels", {
        get: function () {
            return this.ua;
        },
        set: function (a) {
            this.ua = a;
            this.g("YAxisEnhancedIntervalPreferMoreCategoryLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderType", {
        get: function () {
            return this.wb;
        },
        set: function (a) {
            this.wb = a;
            this.g("ZoomSliderType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "negativeBrushes", {
        get: function () {
            return this.tg;
        },
        set: function (a) {
            this.tg = a;
            this.g("NegativeBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "negativeOutlines", {
        get: function () {
            return this.th;
        },
        set: function (a) {
            this.th = a;
            this.g("NegativeOutlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayBrushes", {
        get: function () {
            return this.ti;
        },
        set: function (a) {
            this.ti = a;
            this.g("OverlayBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayOutlines", {
        get: function () {
            return this.tj;
        },
        set: function (a) {
            this.tj = a;
            this.g("OverlayOutlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeOutlines", {
        get: function () {
            return this.tn;
        },
        set: function (a) {
            this.tn = a;
            this.g("VolumeOutlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeBrushes", {
        get: function () {
            return this.tm;
        },
        set: function (a) {
            this.tm = a;
            this.g("VolumeBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorNegativeBrushes", {
        get: function () {
            return this.te;
        },
        set: function (a) {
            this.te = a;
            this.g("IndicatorNegativeBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorBrushes", {
        get: function () {
            return this.tc;
        },
        set: function (a) {
            this.tc = a;
            this.g("IndicatorBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeThickness", {
        get: function () {
            return this.uw;
        },
        set: function (a) {
            this.uw = a;
            this.g("VolumeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayThickness", {
        get: function () {
            return this.ut;
        },
        set: function (a) {
            this.ut = a;
            this.g("OverlayThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayMultiplier", {
        get: function () {
            return this.us;
        },
        set: function (a) {
            this.us = a;
            this.g("OverlayMultiplier");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorThickness", {
        get: function () {
            return this.uq;
        },
        set: function (a) {
            this.uq = a;
            this.g("IndicatorThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorDisplayTypes", {
        get: function () {
            return this.td;
        },
        set: function (a) {
            this.td = a;
            this.g("IndicatorDisplayTypes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorPeriod", {
        get: function () {
            return this.vq;
        },
        set: function (a) {
            this.vq = a;
            this.g("IndicatorPeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorMultiplier", {
        get: function () {
            return this.up;
        },
        set: function (a) {
            this.up = a;
            this.g("IndicatorMultiplier");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorSmoothingPeriod", {
        get: function () {
            return this.vt;
        },
        set: function (a) {
            this.vt = a;
            this.g("IndicatorSmoothingPeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorShortPeriod", {
        get: function () {
            return this.vr;
        },
        set: function (a) {
            this.vr = a;
            this.g("IndicatorShortPeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorLongPeriod", {
        get: function () {
            return this.vp;
        },
        set: function (a) {
            this.vp = a;
            this.g("IndicatorLongPeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorSignalPeriod", {
        get: function () {
            return this.vs;
        },
        set: function (a) {
            this.vs = a;
            this.g("IndicatorSignalPeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "rangeSelectorOptions", {
        get: function () {
            return this.tl;
        },
        set: function (a) {
            this.tl = a;
            this.g("RangeSelectorOptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "customIndicatorNames", {
        get: function () {
            return this.tb;
        },
        set: function (a) {
            this.tb = a;
            this.g("CustomIndicatorNames");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isVerticalZoomEnabled", {
        get: function () {
            return this.t6;
        },
        set: function (a) {
            this.t6 = a;
            this.g("IsVerticalZoomEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderXAxisMajorStroke", {
        get: function () {
            return this.wc;
        },
        set: function (a) {
            this.wc = a;
            this.g("ZoomSliderXAxisMajorStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderXAxisMajorStrokeThickness", {
        get: function () {
            return this.u6;
        },
        set: function (a) {
            this.u6 = a;
            this.g("ZoomSliderXAxisMajorStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isLegendVisible", {
        get: function () {
            return this.t4;
        },
        set: function (a) {
            this.t4 = a;
            this.g("IsLegendVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMinimumValue", {
        get: function () {
            return this.um;
        },
        set: function (a) {
            this.um = a;
            this.g("XAxisMinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMaximumValue", {
        get: function () {
            return this.ul;
        },
        set: function (a) {
            this.ul = a;
            this.g("XAxisMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisBreaks", {
        get: function () {
            return this.to;
        },
        set: function (a) {
            this.to = a;
            this.g("XAxisBreaks");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "applyCustomIndicatorsRef", {
        get: function () {
            return this.v1;
        },
        set: function (a) {
            this.v1 = a;
            this.g("ApplyCustomIndicatorsRef");
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartDescription.$t = markType(FinancialChartDescription, 'FinancialChartDescription', XYChartDescription.$);
    return FinancialChartDescription;
}(XYChartDescription));
export { FinancialChartDescription };
