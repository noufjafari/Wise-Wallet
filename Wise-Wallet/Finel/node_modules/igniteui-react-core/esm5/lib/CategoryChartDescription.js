/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { XYChartDescription } from "./XYChartDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var CategoryChartDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryChartDescription, _super);
    function CategoryChartDescription() {
        var _this = _super.call(this) || this;
        _this.u8 = null;
        _this.vc = null;
        _this.u6 = null;
        _this.u4 = null;
        _this.uz = 0;
        _this.u9 = null;
        _this.u5 = null;
        _this.u7 = null;
        _this.th = false;
        _this.ti = false;
        _this.va = null;
        _this.vb = null;
        _this.t4 = 0;
        _this.t7 = 0;
        _this.t3 = 0;
        _this.t6 = 0;
        _this.t5 = 0;
        _this.t8 = 0;
        _this.ue = 0;
        _this.u3 = null;
        _this.tj = false;
        _this.tk = false;
        _this.t1 = 0;
        _this.t2 = 0;
        _this.to = false;
        _this.tl = false;
        _this.tn = false;
        _this.vd = null;
        _this.tp = false;
        _this.u0 = 0;
        _this.ug = 0;
        _this.uf = 0;
        _this.uh = 0;
        _this.tb = null;
        _this.tc = null;
        _this.tm = false;
        _this.t9 = 0;
        _this.ua = 0;
        _this.ub = 0;
        _this.uc = 0;
        _this.ud = 0;
        _this.tf = false;
        _this.tg = false;
        return _this;
    }
    Object.defineProperty(CategoryChartDescription.prototype, "tooltipTemplateRef", {
        get: function () {
            return this.u8;
        },
        set: function (a) {
            this.u8 = a;
            this.g("TooltipTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "width", {
        get: function () {
            return this.vc;
        },
        set: function (a) {
            this.vc = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "height", {
        get: function () {
            return this.u6;
        },
        set: function (a) {
            this.u6 = a;
            this.g("Height");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "background", {
        get: function () {
            return this.u4;
        },
        set: function (a) {
            this.u4 = a;
            this.g("Background");
        },
        enumerable: false,
        configurable: true
    });
    CategoryChartDescription.prototype.get_type = function () {
        return "CategoryChart";
    };
    Object.defineProperty(CategoryChartDescription.prototype, "transitionInDuration", {
        get: function () {
            return this.uz;
        },
        set: function (a) {
            this.uz = a;
            this.g("TransitionInDuration");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "transitionInEasingFunctionRef", {
        get: function () {
            return this.u9;
        },
        set: function (a) {
            this.u9 = a;
            this.g("TransitionInEasingFunctionRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "chartType", {
        get: function () {
            return this.u5;
        },
        set: function (a) {
            this.u5 = a;
            this.g("ChartType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "markerCollisionAvoidance", {
        get: function () {
            return this.u7;
        },
        set: function (a) {
            this.u7 = a;
            this.g("MarkerCollisionAvoidance");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "isSplineShapePartOfRange", {
        get: function () {
            return this.th;
        },
        set: function (a) {
            this.th = a;
            this.g("IsSplineShapePartOfRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "isTransitionInEnabled", {
        get: function () {
            return this.ti;
        },
        set: function (a) {
            this.ti = a;
            this.g("IsTransitionInEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "transitionInMode", {
        get: function () {
            return this.va;
        },
        set: function (a) {
            this.va = a;
            this.g("TransitionInMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "transitionInSpeedType", {
        get: function () {
            return this.vb;
        },
        set: function (a) {
            this.vb = a;
            this.g("TransitionInSpeedType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisInterval", {
        get: function () {
            return this.t4;
        },
        set: function (a) {
            this.t4 = a;
            this.g("XAxisInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisMinorInterval", {
        get: function () {
            return this.t7;
        },
        set: function (a) {
            this.t7 = a;
            this.g("XAxisMinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisGap", {
        get: function () {
            return this.t3;
        },
        set: function (a) {
            this.t3 = a;
            this.g("XAxisGap");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisMinimumGapSize", {
        get: function () {
            return this.t6;
        },
        set: function (a) {
            this.t6 = a;
            this.g("XAxisMinimumGapSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisMaximumGap", {
        get: function () {
            return this.t5;
        },
        set: function (a) {
            this.t5 = a;
            this.g("XAxisMaximumGap");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisOverlap", {
        get: function () {
            return this.t8;
        },
        set: function (a) {
            this.t8 = a;
            this.g("XAxisOverlap");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisInterval", {
        get: function () {
            return this.ue;
        },
        set: function (a) {
            this.ue = a;
            this.g("YAxisInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "autoMarginAndAngleUpdateMode", {
        get: function () {
            return this.u3;
        },
        set: function (a) {
            this.u3 = a;
            this.g("AutoMarginAndAngleUpdateMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "shouldAutoExpandMarginForInitialLabels", {
        get: function () {
            return this.tj;
        },
        set: function (a) {
            this.tj = a;
            this.g("ShouldAutoExpandMarginForInitialLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "shouldConsiderAutoRotationForInitialLabels", {
        get: function () {
            return this.tk;
        },
        set: function (a) {
            this.tk = a;
            this.g("ShouldConsiderAutoRotationForInitialLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "autoExpandMarginExtraPadding", {
        get: function () {
            return this.t1;
        },
        set: function (a) {
            this.t1 = a;
            this.g("AutoExpandMarginExtraPadding");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "autoExpandMarginMaximumValue", {
        get: function () {
            return this.t2;
        },
        set: function (a) {
            this.t2 = a;
            this.g("AutoExpandMarginMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisFavorLabellingScaleEnd", {
        get: function () {
            return this.to;
        },
        set: function (a) {
            this.to = a;
            this.g("YAxisFavorLabellingScaleEnd");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisEnhancedIntervalPreferMoreCategoryLabels", {
        get: function () {
            return this.tl;
        },
        set: function (a) {
            this.tl = a;
            this.g("XAxisEnhancedIntervalPreferMoreCategoryLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisEnhancedIntervalPreferMoreCategoryLabels", {
        get: function () {
            return this.tn;
        },
        set: function (a) {
            this.tn = a;
            this.g("YAxisEnhancedIntervalPreferMoreCategoryLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisAutoRangeBufferMode", {
        get: function () {
            return this.vd;
        },
        set: function (a) {
            this.vd = a;
            this.g("YAxisAutoRangeBufferMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisIsLogarithmic", {
        get: function () {
            return this.tp;
        },
        set: function (a) {
            this.tp = a;
            this.g("YAxisIsLogarithmic");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisLogarithmBase", {
        get: function () {
            return this.u0;
        },
        set: function (a) {
            this.u0 = a;
            this.g("YAxisLogarithmBase");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisMinimumValue", {
        get: function () {
            return this.ug;
        },
        set: function (a) {
            this.ug = a;
            this.g("YAxisMinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisMaximumValue", {
        get: function () {
            return this.uf;
        },
        set: function (a) {
            this.uf = a;
            this.g("YAxisMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisMinorInterval", {
        get: function () {
            return this.uh;
        },
        set: function (a) {
            this.uh = a;
            this.g("YAxisMinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "negativeBrushes", {
        get: function () {
            return this.tb;
        },
        set: function (a) {
            this.tb = a;
            this.g("NegativeBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "negativeOutlines", {
        get: function () {
            return this.tc;
        },
        set: function (a) {
            this.tc = a;
            this.g("NegativeOutlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisAbbreviateLargeNumbers", {
        get: function () {
            return this.tm;
        },
        set: function (a) {
            this.tm = a;
            this.g("YAxisAbbreviateLargeNumbers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisZoomMaximumCategoryRange", {
        get: function () {
            return this.t9;
        },
        set: function (a) {
            this.t9 = a;
            this.g("XAxisZoomMaximumCategoryRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisZoomMaximumItemSpan", {
        get: function () {
            return this.ua;
        },
        set: function (a) {
            this.ua = a;
            this.g("XAxisZoomMaximumItemSpan");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisZoomToCategoryRange", {
        get: function () {
            return this.ub;
        },
        set: function (a) {
            this.ub = a;
            this.g("XAxisZoomToCategoryRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisZoomToCategoryStart", {
        get: function () {
            return this.uc;
        },
        set: function (a) {
            this.uc = a;
            this.g("XAxisZoomToCategoryStart");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisZoomToItemSpan", {
        get: function () {
            return this.ud;
        },
        set: function (a) {
            this.ud = a;
            this.g("XAxisZoomToItemSpan");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "isCategoryHighlightingEnabled", {
        get: function () {
            return this.tf;
        },
        set: function (a) {
            this.tf = a;
            this.g("IsCategoryHighlightingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "isItemHighlightingEnabled", {
        get: function () {
            return this.tg;
        },
        set: function (a) {
            this.tg = a;
            this.g("IsItemHighlightingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    CategoryChartDescription.$t = markType(CategoryChartDescription, 'CategoryChartDescription', XYChartDescription.$);
    return CategoryChartDescription;
}(XYChartDescription));
export { CategoryChartDescription };
