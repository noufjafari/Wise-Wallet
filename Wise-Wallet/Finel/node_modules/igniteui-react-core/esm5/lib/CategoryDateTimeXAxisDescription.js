/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { TimeAxisBaseDescription } from "./TimeAxisBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var CategoryDateTimeXAxisDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryDateTimeXAxisDescription, _super);
    function CategoryDateTimeXAxisDescription() {
        var _this = _super.call(this) || this;
        _this.et = null;
        _this.el = 0;
        _this.ej = 0;
        _this.em = 0;
        _this.ek = 0;
        _this.er = null;
        _this.es = null;
        return _this;
    }
    CategoryDateTimeXAxisDescription.prototype.get_type = function () {
        return "CategoryDateTimeXAxis";
    };
    Object.defineProperty(CategoryDateTimeXAxisDescription.prototype, "displayType", {
        get: function () {
            return this.et;
        },
        set: function (a) {
            this.et = a;
            this.g("DisplayType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryDateTimeXAxisDescription.prototype, "interval", {
        get: function () {
            return this.el;
        },
        set: function (a) {
            this.el = a;
            this.g("Interval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryDateTimeXAxisDescription.prototype, "actualInterval", {
        get: function () {
            return this.ej;
        },
        set: function (a) {
            this.ej = a;
            this.g("ActualInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryDateTimeXAxisDescription.prototype, "minorInterval", {
        get: function () {
            return this.em;
        },
        set: function (a) {
            this.em = a;
            this.g("MinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryDateTimeXAxisDescription.prototype, "actualMinorInterval", {
        get: function () {
            return this.ek;
        },
        set: function (a) {
            this.ek = a;
            this.g("ActualMinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryDateTimeXAxisDescription.prototype, "actualIntervalChangeRef", {
        get: function () {
            return this.er;
        },
        set: function (a) {
            this.er = a;
            this.g("ActualIntervalChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryDateTimeXAxisDescription.prototype, "actualMinorIntervalChangeRef", {
        get: function () {
            return this.es;
        },
        set: function (a) {
            this.es = a;
            this.g("ActualMinorIntervalChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    CategoryDateTimeXAxisDescription.$t = markType(CategoryDateTimeXAxisDescription, 'CategoryDateTimeXAxisDescription', TimeAxisBaseDescription.$);
    return CategoryDateTimeXAxisDescription;
}(TimeAxisBaseDescription));
export { CategoryDateTimeXAxisDescription };
