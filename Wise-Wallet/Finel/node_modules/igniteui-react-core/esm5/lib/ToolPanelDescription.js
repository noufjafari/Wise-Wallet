/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var ToolPanelDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolPanelDescription, _super);
    function ToolPanelDescription() {
        var _this = _super.call(this) || this;
        _this.h = null;
        _this.j = false;
        _this.bi = null;
        _this.v = 0;
        _this.bj = null;
        _this.bk = null;
        _this.bh = null;
        _this.bg = null;
        _this.a3 = null;
        _this.bx = null;
        _this.bc = null;
        _this.bn = null;
        _this.a5 = null;
        _this.bw = null;
        _this.bb = null;
        _this.bo = null;
        _this.a6 = null;
        _this.bq = null;
        _this.a8 = null;
        _this.by = null;
        _this.bd = null;
        _this.bm = null;
        _this.a4 = null;
        _this.bp = null;
        _this.a7 = null;
        _this.b0 = null;
        _this.bf = null;
        _this.bz = null;
        _this.be = null;
        _this.ae = 0;
        _this.t = 0;
        _this.af = 0;
        _this.u = 0;
        _this.br = null;
        _this.a9 = null;
        _this.bs = null;
        _this.ba = null;
        _this.ab = 0;
        _this.q = 0;
        _this.ac = 0;
        _this.r = 0;
        _this.ad = 0;
        _this.s = 0;
        _this.aa = 0;
        _this.p = 0;
        _this.x = 0;
        _this.m = 0;
        _this.y = 0;
        _this.n = 0;
        _this.z = 0;
        _this.o = 0;
        _this.w = 0;
        _this.l = 0;
        _this.bv = null;
        _this.a1 = 0;
        _this.bt = null;
        _this.bl = null;
        _this.bu = null;
        return _this;
    }
    ToolPanelDescription.prototype.get_type = function () {
        return "ToolPanel";
    };
    Object.defineProperty(ToolPanelDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actions", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Actions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "showOnHover", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("ShowOnHover");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "cellFontFamily", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            this.bi = a;
            this.g("CellFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "cellFontSize", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("CellFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "cellFontStyle", {
        get: function () {
            return this.bj;
        },
        set: function (a) {
            this.bj = a;
            this.g("CellFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "cellFontWeight", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            this.bk = a;
            this.g("CellFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "baseTheme", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.g("BaseTheme");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "backgroundColor", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.g("BackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualBackgroundColor", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.g("ActualBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "submenuBackgroundColor", {
        get: function () {
            return this.bx;
        },
        set: function (a) {
            this.bx = a;
            this.g("SubmenuBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSubmenuBackgroundColor", {
        get: function () {
            return this.bc;
        },
        set: function (a) {
            this.bc = a;
            this.g("ActualSubmenuBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "groupHeaderBackgroundColor", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            this.bn = a;
            this.g("GroupHeaderBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualGroupHeaderBackgroundColor", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("ActualGroupHeaderBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorBackgroundColor", {
        get: function () {
            return this.bw;
        },
        set: function (a) {
            this.bw = a;
            this.g("SeparatorBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorBackgroundColor", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            this.bb = a;
            this.g("ActualSeparatorBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "groupHeaderSeparatorBackgroundColor", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            this.bo = a;
            this.g("GroupHeaderSeparatorBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualGroupHeaderSeparatorBackgroundColor", {
        get: function () {
            return this.a6;
        },
        set: function (a) {
            this.a6 = a;
            this.g("ActualGroupHeaderSeparatorBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "hoverBackgroundColor", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            this.bq = a;
            this.g("HoverBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualHoverBackgroundColor", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            this.a8 = a;
            this.g("ActualHoverBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "textColor", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            this.by = a;
            this.g("TextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualTextColor", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.g("ActualTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "disabledTextColor", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            this.bm = a;
            this.g("DisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualDisabledTextColor", {
        get: function () {
            return this.a4;
        },
        set: function (a) {
            this.a4 = a;
            this.g("ActualDisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "groupHeaderTextColor", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            this.bp = a;
            this.g("GroupHeaderTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualGroupHeaderTextColor", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.g("ActualGroupHeaderTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "toolTipTextColor", {
        get: function () {
            return this.b0;
        },
        set: function (a) {
            this.b0 = a;
            this.g("ToolTipTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualToolTipTextColor", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.g("ActualToolTipTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "toolTipBackgroundColor", {
        get: function () {
            return this.bz;
        },
        set: function (a) {
            this.bz = a;
            this.g("ToolTipBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualToolTipBackgroundColor", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            this.be = a;
            this.g("ActualToolTipBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "toolTipCornerRadius", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("ToolTipCornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualToolTipCornerRadius", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("ActualToolTipCornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "toolTipElevation", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("ToolTipElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualToolTipElevation", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("ActualToolTipElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "iconFill", {
        get: function () {
            return this.br;
        },
        set: function (a) {
            this.br = a;
            this.g("IconFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualIconFill", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            this.a9 = a;
            this.g("ActualIconFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "iconStroke", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            this.bs = a;
            this.g("IconStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualIconStroke", {
        get: function () {
            return this.ba;
        },
        set: function (a) {
            this.ba = a;
            this.g("ActualIconStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorVerticalPaddingLeft", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("SeparatorVerticalPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorVerticalPaddingLeft", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("ActualSeparatorVerticalPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorVerticalPaddingRight", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("SeparatorVerticalPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorVerticalPaddingRight", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("ActualSeparatorVerticalPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorVerticalPaddingTop", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("SeparatorVerticalPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorVerticalPaddingTop", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("ActualSeparatorVerticalPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorVerticalPaddingBottom", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("SeparatorVerticalPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorVerticalPaddingBottom", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("ActualSeparatorVerticalPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorHorizontalPaddingLeft", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("SeparatorHorizontalPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorHorizontalPaddingLeft", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("ActualSeparatorHorizontalPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorHorizontalPaddingRight", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("SeparatorHorizontalPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorHorizontalPaddingRight", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("ActualSeparatorHorizontalPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorHorizontalPaddingTop", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("SeparatorHorizontalPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorHorizontalPaddingTop", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("ActualSeparatorHorizontalPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorHorizontalPaddingBottom", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("SeparatorHorizontalPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorHorizontalPaddingBottom", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("ActualSeparatorHorizontalPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "orientation", {
        get: function () {
            return this.bv;
        },
        set: function (a) {
            this.bv = a;
            this.g("Orientation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "rowHeight", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.g("RowHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "nestedActionMode", {
        get: function () {
            return this.bt;
        },
        set: function (a) {
            this.bt = a;
            this.g("NestedActionMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "contentRefreshedRef", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            this.bl = a;
            this.g("ContentRefreshedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "onCommandRef", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            this.bu = a;
            this.g("OnCommandRef");
        },
        enumerable: false,
        configurable: true
    });
    ToolPanelDescription.$t = markType(ToolPanelDescription, 'ToolPanelDescription', Description.$);
    return ToolPanelDescription;
}(Description));
export { ToolPanelDescription };
