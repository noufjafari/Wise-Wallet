/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebBaseExporterDescriptionMetadata } from "./WebBaseExporterDescriptionMetadata";
import { WebExporterOptionsBaseDescriptionMetadata } from "./WebExporterOptionsBaseDescriptionMetadata";
import { WebGridBaseDirectiveDescriptionMetadata } from "./WebGridBaseDirectiveDescriptionMetadata";
import { WebExporterEventDescription } from "./WebExporterEventDescription";
/**
 * @hidden
 */
var WebExporterEventDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebExporterEventDescriptionMetadata, _super);
    function WebExporterEventDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebExporterEventDescriptionMetadata.b = function (a) {
        if (WebExporterEventDescriptionMetadata.a == null) {
            WebExporterEventDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebExporterEventDescriptionMetadata.c(WebExporterEventDescriptionMetadata.a);
        }
        if (a.k(WebExporterEventDescriptionMetadata.a)) {
            return;
        }
        a.ab(WebExporterEventDescriptionMetadata.a);
        WebBaseExporterDescriptionMetadata.d(a);
        WebExporterOptionsBaseDescriptionMetadata.d(a);
        WebGridBaseDirectiveDescriptionMetadata.d(a);
    };
    WebExporterEventDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:ExporterEvent");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__isPlainObject", "Boolean");
        a.item("__skipSuffix", "Boolean");
        a.item("Exporter", "ExportedType:WebBaseExporter");
        a.item("Options", "ExportedType:WebExporterOptionsBase");
        a.item("Grid", "ExportedType:WebGridBaseDirective");
        a.item("Cancel", "Boolean");
    };
    WebExporterEventDescriptionMetadata.d = function (a) {
        WebExporterEventDescriptionMetadata.b(a);
        a.ad("WebExporterEvent", function () { return new WebExporterEventDescription(); });
        a.ac("WebExporterEvent", WebExporterEventDescriptionMetadata.a);
    };
    WebExporterEventDescriptionMetadata.$t = markType(WebExporterEventDescriptionMetadata, 'WebExporterEventDescriptionMetadata');
    WebExporterEventDescriptionMetadata.a = null;
    return WebExporterEventDescriptionMetadata;
}(Base));
export { WebExporterEventDescriptionMetadata };
