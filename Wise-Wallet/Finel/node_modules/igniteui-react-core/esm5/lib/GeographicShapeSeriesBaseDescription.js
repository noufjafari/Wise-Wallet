/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { GeographicMapSeriesHostDescription } from "./GeographicMapSeriesHostDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var GeographicShapeSeriesBaseDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GeographicShapeSeriesBaseDescription, _super);
    function GeographicShapeSeriesBaseDescription() {
        var _this = _super.call(this) || this;
        _this.dw = null;
        _this.dj = false;
        _this.di = false;
        _this.dv = null;
        _this.dq = 0;
        _this.dp = 0;
        _this.dg = null;
        _this.dm = 0;
        _this.du = null;
        _this.dt = null;
        return _this;
    }
    GeographicShapeSeriesBaseDescription.prototype.get_type = function () {
        return "GeographicShapeSeriesBase";
    };
    Object.defineProperty(GeographicShapeSeriesBaseDescription.prototype, "shapeMemberPath", {
        get: function () {
            return this.dw;
        },
        set: function (a) {
            this.dw = a;
            this.g("ShapeMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesBaseDescription.prototype, "isCustomShapeStyleAllowed", {
        get: function () {
            return this.dj;
        },
        set: function (a) {
            this.dj = a;
            this.g("IsCustomShapeStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesBaseDescription.prototype, "isCustomShapeMarkerStyleAllowed", {
        get: function () {
            return this.di;
        },
        set: function (a) {
            this.di = a;
            this.g("IsCustomShapeMarkerStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesBaseDescription.prototype, "itemSearchMode", {
        get: function () {
            return this.dv;
        },
        set: function (a) {
            this.dv = a;
            this.g("ItemSearchMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesBaseDescription.prototype, "itemSearchThreshold", {
        get: function () {
            return this.dq;
        },
        set: function (a) {
            this.dq = a;
            this.g("ItemSearchThreshold");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesBaseDescription.prototype, "itemSearchPointsThreshold", {
        get: function () {
            return this.dp;
        },
        set: function (a) {
            this.dp = a;
            this.g("ItemSearchPointsThreshold");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesBaseDescription.prototype, "shapefileDataSource", {
        get: function () {
            return this.dg;
        },
        set: function (a) {
            this.dg = a;
            this.g("ShapefileDataSource");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesBaseDescription.prototype, "shapeFilterResolution", {
        get: function () {
            return this.dm;
        },
        set: function (a) {
            this.dm = a;
            this.g("ShapeFilterResolution");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesBaseDescription.prototype, "assigningShapeStyleRef", {
        get: function () {
            return this.du;
        },
        set: function (a) {
            this.du = a;
            this.g("AssigningShapeStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesBaseDescription.prototype, "assigningShapeMarkerStyleRef", {
        get: function () {
            return this.dt;
        },
        set: function (a) {
            this.dt = a;
            this.g("AssigningShapeMarkerStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    GeographicShapeSeriesBaseDescription.$t = markType(GeographicShapeSeriesBaseDescription, 'GeographicShapeSeriesBaseDescription', GeographicMapSeriesHostDescription.$);
    return GeographicShapeSeriesBaseDescription;
}(GeographicMapSeriesHostDescription));
export { GeographicShapeSeriesBaseDescription };
