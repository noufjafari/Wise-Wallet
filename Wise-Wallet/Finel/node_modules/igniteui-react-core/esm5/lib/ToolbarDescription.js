/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var ToolbarDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolbarDescription, _super);
    function ToolbarDescription() {
        var _this = _super.call(this) || this;
        _this.an = null;
        _this.j = null;
        _this.h = null;
        _this.i = null;
        _this.az = null;
        _this.a2 = null;
        _this.am = null;
        _this.a1 = null;
        _this.as = null;
        _this.a0 = null;
        _this.av = null;
        _this.a3 = null;
        _this.ar = null;
        _this.at = null;
        _this.a5 = null;
        _this.a4 = null;
        _this.y = 0;
        _this.z = 0;
        _this.aw = null;
        _this.ax = null;
        _this.ao = null;
        _this.p = 0;
        _this.ap = null;
        _this.aq = null;
        _this.v = 0;
        _this.w = 0;
        _this.x = 0;
        _this.u = 0;
        _this.r = 0;
        _this.s = 0;
        _this.t = 0;
        _this.q = 0;
        _this.n = false;
        _this.ay = null;
        _this.a6 = null;
        _this.au = null;
        _this.al = null;
        return _this;
    }
    ToolbarDescription.prototype.get_type = function () {
        return "Toolbar";
    };
    Object.defineProperty(ToolbarDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "baseTheme", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("BaseTheme");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "autoGeneratedActions", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("AutoGeneratedActions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "actions", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Actions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "actualActions", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("ActualActions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "orientation", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.g("Orientation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "targetRef", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            this.a2 = a;
            this.g("TargetRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "backgroundColor", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.g("BackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "submenuBackgroundColor", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.g("SubmenuBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "groupHeaderBackgroundColor", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("GroupHeaderBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "separatorBackgroundColor", {
        get: function () {
            return this.a0;
        },
        set: function (a) {
            this.a0 = a;
            this.g("SeparatorBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "hoverBackgroundColor", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.g("HoverBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "textColor", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.g("TextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "disabledTextColor", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("DisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "groupHeaderTextColor", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("GroupHeaderTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "toolTipTextColor", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("ToolTipTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "toolTipBackgroundColor", {
        get: function () {
            return this.a4;
        },
        set: function (a) {
            this.a4 = a;
            this.g("ToolTipBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "toolTipCornerRadius", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("ToolTipCornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "toolTipElevation", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("ToolTipElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "iconFill", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.g("IconFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "iconStroke", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.g("IconStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "cellFontFamily", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("CellFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "cellFontSize", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("CellFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "cellFontStyle", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("CellFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "cellFontWeight", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("CellFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "separatorVerticalPaddingLeft", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("SeparatorVerticalPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "separatorVerticalPaddingRight", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("SeparatorVerticalPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "separatorVerticalPaddingTop", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("SeparatorVerticalPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "separatorVerticalPaddingBottom", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("SeparatorVerticalPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "separatorHorizontalPaddingLeft", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("SeparatorHorizontalPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "separatorHorizontalPaddingRight", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("SeparatorHorizontalPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "separatorHorizontalPaddingTop", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("SeparatorHorizontalPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "separatorHorizontalPaddingBottom", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("SeparatorHorizontalPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "showOnHover", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("ShowOnHover");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "onCommandRef", {
        get: function () {
            return this.ay;
        },
        set: function (a) {
            this.ay = a;
            this.g("OnCommandRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "width", {
        get: function () {
            return this.a6;
        },
        set: function (a) {
            this.a6 = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "height", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("Height");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarDescription.prototype, "background", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.g("Background");
        },
        enumerable: false,
        configurable: true
    });
    ToolbarDescription.$t = markType(ToolbarDescription, 'ToolbarDescription', Description.$);
    return ToolbarDescription;
}(Description));
export { ToolbarDescription };
