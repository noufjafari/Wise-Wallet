/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { SeriesDescription } from "./SeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var ValueOverlayDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ValueOverlayDescription, _super);
    function ValueOverlayDescription() {
        var _this = _super.call(this) || this;
        _this.dz = null;
        _this.dk = 0;
        _this.dc = false;
        _this.dw = null;
        _this.dy = null;
        _this.dv = null;
        _this.de = 0;
        _this.dt = 0;
        _this.dx = null;
        _this.dg = 0;
        _this.di = 0;
        _this.dh = 0;
        _this.df = 0;
        _this.dj = 0;
        return _this;
    }
    ValueOverlayDescription.prototype.get_type = function () {
        return "ValueOverlay";
    };
    Object.defineProperty(ValueOverlayDescription.prototype, "axisRef", {
        get: function () {
            return this.dz;
        },
        set: function (a) {
            this.dz = a;
            this.g("AxisRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "value", {
        get: function () {
            return this.dk;
        },
        set: function (a) {
            this.dk = a;
            this.g("Value");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "isAxisAnnotationEnabled", {
        get: function () {
            return this.dc;
        },
        set: function (a) {
            this.dc = a;
            this.g("IsAxisAnnotationEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationFormatLabelRef", {
        get: function () {
            return this.dw;
        },
        set: function (a) {
            this.dw = a;
            this.g("AxisAnnotationFormatLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationTextColor", {
        get: function () {
            return this.dy;
        },
        set: function (a) {
            this.dy = a;
            this.g("AxisAnnotationTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationBackground", {
        get: function () {
            return this.dv;
        },
        set: function (a) {
            this.dv = a;
            this.g("AxisAnnotationBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationBackgroundCornerRadius", {
        get: function () {
            return this.de;
        },
        set: function (a) {
            this.de = a;
            this.g("AxisAnnotationBackgroundCornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationInterpolatedValuePrecision", {
        get: function () {
            return this.dt;
        },
        set: function (a) {
            this.dt = a;
            this.g("AxisAnnotationInterpolatedValuePrecision");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationOutline", {
        get: function () {
            return this.dx;
        },
        set: function (a) {
            this.dx = a;
            this.g("AxisAnnotationOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationPaddingLeft", {
        get: function () {
            return this.dg;
        },
        set: function (a) {
            this.dg = a;
            this.g("AxisAnnotationPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationPaddingTop", {
        get: function () {
            return this.di;
        },
        set: function (a) {
            this.di = a;
            this.g("AxisAnnotationPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationPaddingRight", {
        get: function () {
            return this.dh;
        },
        set: function (a) {
            this.dh = a;
            this.g("AxisAnnotationPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationPaddingBottom", {
        get: function () {
            return this.df;
        },
        set: function (a) {
            this.df = a;
            this.g("AxisAnnotationPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationStrokeThickness", {
        get: function () {
            return this.dj;
        },
        set: function (a) {
            this.dj = a;
            this.g("AxisAnnotationStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    ValueOverlayDescription.$t = markType(ValueOverlayDescription, 'ValueOverlayDescription', SeriesDescription.$);
    return ValueOverlayDescription;
}(SeriesDescription));
export { ValueOverlayDescription };
