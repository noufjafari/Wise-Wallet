/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var PropertyEditorDescriptionObjectDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PropertyEditorDescriptionObjectDescription, _super);
    function PropertyEditorDescriptionObjectDescription() {
        var _this = _super.call(this) || this;
        _this.j = null;
        _this.h = null;
        return _this;
    }
    PropertyEditorDescriptionObjectDescription.prototype.get_type = function () {
        return "PropertyEditorDescriptionObject";
    };
    Object.defineProperty(PropertyEditorDescriptionObjectDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorDescriptionObjectDescription.prototype, "descriptionType", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("DescriptionType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorDescriptionObjectDescription.prototype, "properties", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Properties");
        },
        enumerable: false,
        configurable: true
    });
    PropertyEditorDescriptionObjectDescription.$t = markType(PropertyEditorDescriptionObjectDescription, 'PropertyEditorDescriptionObjectDescription', Description.$);
    return PropertyEditorDescriptionObjectDescription;
}(Description));
export { PropertyEditorDescriptionObjectDescription };
/**
 * @hidden
 */
var PropertyEditorPropertyDescriptionDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PropertyEditorPropertyDescriptionDescription, _super);
    function PropertyEditorPropertyDescriptionDescription() {
        var _this = _super.call(this) || this;
        _this.ak = null;
        _this.ai = null;
        _this.am = null;
        _this.aj = null;
        _this.r = false;
        _this.ah = null;
        _this.i = null;
        _this.j = null;
        _this.ad = null;
        _this.w = 0;
        _this.t = 0;
        _this.u = 0;
        _this.v = 0;
        _this.x = 0;
        _this.p = null;
        _this.h = null;
        _this.k = null;
        _this.af = null;
        _this.ag = null;
        _this.al = null;
        return _this;
    }
    PropertyEditorPropertyDescriptionDescription.prototype.get_type = function () {
        return "PropertyEditorPropertyDescription";
    };
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "propertyPath", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.g("PropertyPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "label", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.g("Label");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "valueType", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.g("ValueType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "propertyDescriptionType", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("PropertyDescriptionType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "shouldOverrideDefaultEditor", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("ShouldOverrideDefaultEditor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "elementDescriptionType", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.g("ElementDescriptionType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "dropDownNames", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("DropDownNames");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "dropDownValues", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("DropDownValues");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "primitiveValue", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("PrimitiveValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "min", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("Min");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "editorWidth", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("EditorWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "labelWidth", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("LabelWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "max", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("Max");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "step", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("Step");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "complexValue", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("ComplexValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "complexValues", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("ComplexValues");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "properties", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("Properties");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "buttonClickedRef", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("ButtonClickedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "changedRef", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.g("ChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "targetPropertyUpdatingRef", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.g("TargetPropertyUpdatingRef");
        },
        enumerable: false,
        configurable: true
    });
    PropertyEditorPropertyDescriptionDescription.$t = markType(PropertyEditorPropertyDescriptionDescription, 'PropertyEditorPropertyDescriptionDescription', Description.$);
    return PropertyEditorPropertyDescriptionDescription;
}(Description));
export { PropertyEditorPropertyDescriptionDescription };
