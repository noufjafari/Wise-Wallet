/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var ToolActionDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolActionDescription, _super);
    function ToolActionDescription() {
        var _this = _super.call(this) || this;
        _this.h = null;
        _this.y = 0;
        _this.bc = null;
        _this.ax = null;
        _this.av = null;
        _this.bb = null;
        _this.az = null;
        _this.ay = null;
        _this.an = null;
        _this.v = 0;
        _this.m = 0;
        _this.w = 0;
        _this.n = 0;
        _this.u = 0;
        _this.l = 0;
        _this.x = 0;
        _this.o = 0;
        _this.ar = null;
        _this.a4 = null;
        _this.ap = null;
        _this.aw = null;
        _this.au = null;
        _this.bf = null;
        _this.aq = null;
        _this.a0 = null;
        _this.a1 = null;
        _this.p = 0;
        _this.a2 = null;
        _this.a3 = null;
        _this.j = false;
        _this.a9 = null;
        _this.bg = null;
        _this.be = null;
        _this.a7 = null;
        _this.a5 = null;
        _this.r = 0;
        _this.s = 0;
        _this.t = 0;
        _this.q = 0;
        _this.a6 = null;
        _this.as = null;
        _this.a8 = null;
        _this.at = null;
        _this.bh = null;
        _this.ba = null;
        _this.bd = null;
        return _this;
    }
    ToolActionDescription.prototype.get_type = function () {
        return "ToolAction";
    };
    Object.defineProperty(ToolActionDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actions", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Actions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "width", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "parentId", {
        get: function () {
            return this.bc;
        },
        set: function (a) {
            this.bc = a;
            this.g("ParentId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "beforeId", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.g("BeforeId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "afterId", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.g("AfterId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "overlayId", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            this.bb = a;
            this.g("OverlayId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "commandId", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.g("CommandId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "commandArgument", {
        get: function () {
            return this.ay;
        },
        set: function (a) {
            this.ay = a;
            this.g("CommandArgument");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "commandArgumentValue", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("CommandArgumentValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "paddingLeft", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("PaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualPaddingLeft", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("ActualPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "paddingRight", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("PaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualPaddingRight", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("ActualPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "paddingBottom", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("PaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualPaddingBottom", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("ActualPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "paddingTop", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("PaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualPaddingTop", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("ActualPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualHoverBackground", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("ActualHoverBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "hoverBackground", {
        get: function () {
            return this.a4;
        },
        set: function (a) {
            this.a4 = a;
            this.g("HoverBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualBackground", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("ActualBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "background", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.g("Background");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualTextColor", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("ActualTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "textColor", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.g("TextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualDisabledTextColor", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("ActualDisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "disabledTextColor", {
        get: function () {
            return this.a0;
        },
        set: function (a) {
            this.a0 = a;
            this.g("DisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "fontFamily", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.g("FontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "fontSize", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("FontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "fontStyle", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            this.a2 = a;
            this.g("FontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "fontWeight", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.g("FontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "isDisabled", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("IsDisabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "name", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            this.a9 = a;
            this.g("Name");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "title", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.g("Title");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "subtitle", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            this.be = a;
            this.g("Subtitle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconName", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.g("IconName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconCollectionName", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("IconCollectionName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconViewBoxLeft", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("IconViewBoxLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconViewBoxTop", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("IconViewBoxTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconViewBoxWidth", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("IconViewBoxWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconViewBoxHeight", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("IconViewBoxHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconFill", {
        get: function () {
            return this.a6;
        },
        set: function (a) {
            this.a6 = a;
            this.g("IconFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualIconFill", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("ActualIconFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconStroke", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            this.a8 = a;
            this.g("IconStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualIconStroke", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("ActualIconStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "visibility", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.g("Visibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "onCommandRef", {
        get: function () {
            return this.ba;
        },
        set: function (a) {
            this.ba = a;
            this.g("OnCommandRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "performedRef", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.g("PerformedRef");
        },
        enumerable: false,
        configurable: true
    });
    ToolActionDescription.$t = markType(ToolActionDescription, 'ToolActionDescription', Description.$);
    return ToolActionDescription;
}(Description));
export { ToolActionDescription };
