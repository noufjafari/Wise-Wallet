/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebPivotDimensionStrategyDescriptionMetadata } from "./WebPivotDimensionStrategyDescriptionMetadata";
import { WebPivotKeysDescriptionMetadata } from "./WebPivotKeysDescriptionMetadata";
import { WebPivotConfigurationDescription } from "./WebPivotConfigurationDescription";
/**
 * @hidden
 */
var WebPivotConfigurationDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebPivotConfigurationDescriptionMetadata, _super);
    function WebPivotConfigurationDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebPivotConfigurationDescriptionMetadata.b = function (a) {
        if (WebPivotConfigurationDescriptionMetadata.a == null) {
            WebPivotConfigurationDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebPivotConfigurationDescriptionMetadata.c(WebPivotConfigurationDescriptionMetadata.a);
        }
        if (a.k(WebPivotConfigurationDescriptionMetadata.a)) {
            return;
        }
        a.ab(WebPivotConfigurationDescriptionMetadata.a);
        WebPivotDimensionStrategyDescriptionMetadata.d(a);
        WebPivotKeysDescriptionMetadata.d(a);
    };
    WebPivotConfigurationDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:PivotConfiguration");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__isPlainObject", "Boolean");
        a.item("__skipSuffix", "Boolean");
        a.item("RowStrategy", "ExportedType:WebPivotDimensionStrategy");
        a.item("ColumnStrategy", "ExportedType:WebPivotDimensionStrategy");
        a.item("Rows", "Collection:WebPivotDimension:PivotDimensionCollection:WebPivotDimension");
        a.item("Columns", "Collection:WebPivotDimension:PivotDimensionCollection:WebPivotDimension");
        a.item("Values", "Collection:WebPivotValue:PivotValueCollection:WebPivotValue");
        a.item("Filters", "Collection:WebPivotDimension:PivotDimensionCollection:WebPivotDimension");
        a.item("PivotKeys", "ExportedType:WebPivotKeys");
    };
    WebPivotConfigurationDescriptionMetadata.d = function (a) {
        WebPivotConfigurationDescriptionMetadata.b(a);
        a.ad("WebPivotConfiguration", function () { return new WebPivotConfigurationDescription(); });
        a.ac("WebPivotConfiguration", WebPivotConfigurationDescriptionMetadata.a);
    };
    WebPivotConfigurationDescriptionMetadata.$t = markType(WebPivotConfigurationDescriptionMetadata, 'WebPivotConfigurationDescriptionMetadata');
    WebPivotConfigurationDescriptionMetadata.a = null;
    return WebPivotConfigurationDescriptionMetadata;
}(Base));
export { WebPivotConfigurationDescriptionMetadata };
