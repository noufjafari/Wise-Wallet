/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { AnnotationLayerDescription } from "./AnnotationLayerDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var CrosshairLayerDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CrosshairLayerDescription, _super);
    function CrosshairLayerDescription() {
        var _this = _super.call(this) || this;
        _this.fh = null;
        _this.fl = null;
        _this.fj = null;
        _this.fk = null;
        _this.el = false;
        _this.ej = false;
        _this.fp = null;
        _this.fn = null;
        _this.ep = 0;
        _this.fd = 0;
        _this.fo = null;
        _this.er = 0;
        _this.et = 0;
        _this.es = 0;
        _this.eq = 0;
        _this.ex = 0;
        _this.ez = 0;
        _this.ey = 0;
        _this.ew = 0;
        _this.eu = 0;
        _this.fs = null;
        _this.fq = null;
        _this.ev = 0;
        _this.fe = 0;
        _this.fr = null;
        _this.e0 = 0;
        _this.fm = null;
        _this.fi = null;
        _this.ek = false;
        return _this;
    }
    CrosshairLayerDescription.prototype.get_type = function () {
        return "CrosshairLayer";
    };
    Object.defineProperty(CrosshairLayerDescription.prototype, "horizontalLineStroke", {
        get: function () {
            return this.fh;
        },
        set: function (a) {
            this.fh = a;
            this.g("HorizontalLineStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "verticalLineStroke", {
        get: function () {
            return this.fl;
        },
        set: function (a) {
            this.fl = a;
            this.g("VerticalLineStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "targetSeriesName", {
        get: function () {
            return this.fj;
        },
        set: function (a) {
            this.fj = a;
            this.g("TargetSeriesName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "targetSeriesRef", {
        get: function () {
            return this.fk;
        },
        set: function (a) {
            this.fk = a;
            this.g("TargetSeriesRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "useInterpolation", {
        get: function () {
            return this.el;
        },
        set: function (a) {
            this.el = a;
            this.g("UseInterpolation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "isAxisAnnotationEnabled", {
        get: function () {
            return this.ej;
        },
        set: function (a) {
            this.ej = a;
            this.g("IsAxisAnnotationEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationTextColor", {
        get: function () {
            return this.fp;
        },
        set: function (a) {
            this.fp = a;
            this.g("XAxisAnnotationTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationBackground", {
        get: function () {
            return this.fn;
        },
        set: function (a) {
            this.fn = a;
            this.g("XAxisAnnotationBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationBackgroundCornerRadius", {
        get: function () {
            return this.ep;
        },
        set: function (a) {
            this.ep = a;
            this.g("XAxisAnnotationBackgroundCornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationInterpolatedValuePrecision", {
        get: function () {
            return this.fd;
        },
        set: function (a) {
            this.fd = a;
            this.g("XAxisAnnotationInterpolatedValuePrecision");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationOutline", {
        get: function () {
            return this.fo;
        },
        set: function (a) {
            this.fo = a;
            this.g("XAxisAnnotationOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationPaddingLeft", {
        get: function () {
            return this.er;
        },
        set: function (a) {
            this.er = a;
            this.g("XAxisAnnotationPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationPaddingTop", {
        get: function () {
            return this.et;
        },
        set: function (a) {
            this.et = a;
            this.g("XAxisAnnotationPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationPaddingRight", {
        get: function () {
            return this.es;
        },
        set: function (a) {
            this.es = a;
            this.g("XAxisAnnotationPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationPaddingBottom", {
        get: function () {
            return this.eq;
        },
        set: function (a) {
            this.eq = a;
            this.g("XAxisAnnotationPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationPaddingLeft", {
        get: function () {
            return this.ex;
        },
        set: function (a) {
            this.ex = a;
            this.g("YAxisAnnotationPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationPaddingTop", {
        get: function () {
            return this.ez;
        },
        set: function (a) {
            this.ez = a;
            this.g("YAxisAnnotationPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationPaddingRight", {
        get: function () {
            return this.ey;
        },
        set: function (a) {
            this.ey = a;
            this.g("YAxisAnnotationPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationPaddingBottom", {
        get: function () {
            return this.ew;
        },
        set: function (a) {
            this.ew = a;
            this.g("YAxisAnnotationPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationStrokeThickness", {
        get: function () {
            return this.eu;
        },
        set: function (a) {
            this.eu = a;
            this.g("XAxisAnnotationStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationTextColor", {
        get: function () {
            return this.fs;
        },
        set: function (a) {
            this.fs = a;
            this.g("YAxisAnnotationTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationBackground", {
        get: function () {
            return this.fq;
        },
        set: function (a) {
            this.fq = a;
            this.g("YAxisAnnotationBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationBackgroundCornerRadius", {
        get: function () {
            return this.ev;
        },
        set: function (a) {
            this.ev = a;
            this.g("YAxisAnnotationBackgroundCornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationInterpolatedValuePrecision", {
        get: function () {
            return this.fe;
        },
        set: function (a) {
            this.fe = a;
            this.g("YAxisAnnotationInterpolatedValuePrecision");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationOutline", {
        get: function () {
            return this.fr;
        },
        set: function (a) {
            this.fr = a;
            this.g("YAxisAnnotationOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationStrokeThickness", {
        get: function () {
            return this.e0;
        },
        set: function (a) {
            this.e0 = a;
            this.g("YAxisAnnotationStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "verticalLineVisibility", {
        get: function () {
            return this.fm;
        },
        set: function (a) {
            this.fm = a;
            this.g("VerticalLineVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "horizontalLineVisibility", {
        get: function () {
            return this.fi;
        },
        set: function (a) {
            this.fi = a;
            this.g("HorizontalLineVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "skipUnknownValues", {
        get: function () {
            return this.ek;
        },
        set: function (a) {
            this.ek = a;
            this.g("SkipUnknownValues");
        },
        enumerable: false,
        configurable: true
    });
    CrosshairLayerDescription.$t = markType(CrosshairLayerDescription, 'CrosshairLayerDescription', AnnotationLayerDescription.$);
    return CrosshairLayerDescription;
}(AnnotationLayerDescription));
export { CrosshairLayerDescription };
