/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { MarkerSeriesDescription } from "./MarkerSeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var ScatterBaseDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ScatterBaseDescription, _super);
    function ScatterBaseDescription() {
        var _this = _super.call(this) || this;
        _this.el = null;
        _this.ep = null;
        _this.eo = null;
        _this.es = null;
        _this.em = null;
        _this.eq = null;
        _this.en = null;
        _this.er = null;
        _this.ek = null;
        _this.ej = null;
        _this.ee = null;
        _this.d3 = 0;
        _this.dx = null;
        _this.d7 = 0;
        _this.ei = null;
        _this.d8 = 0;
        _this.d6 = 0;
        _this.eh = null;
        _this.d5 = 0;
        _this.ed = null;
        _this.d0 = false;
        _this.dz = false;
        _this.eg = null;
        _this.ef = null;
        return _this;
    }
    ScatterBaseDescription.prototype.get_type = function () {
        return "ScatterBase";
    };
    Object.defineProperty(ScatterBaseDescription.prototype, "xAxisRef", {
        get: function () {
            return this.el;
        },
        set: function (a) {
            this.el = a;
            this.g("XAxisRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "yAxisRef", {
        get: function () {
            return this.ep;
        },
        set: function (a) {
            this.ep = a;
            this.g("YAxisRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "xMemberPath", {
        get: function () {
            return this.eo;
        },
        set: function (a) {
            this.eo = a;
            this.g("XMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "yMemberPath", {
        get: function () {
            return this.es;
        },
        set: function (a) {
            this.es = a;
            this.g("YMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "xMemberAsLegendLabel", {
        get: function () {
            return this.em;
        },
        set: function (a) {
            this.em = a;
            this.g("XMemberAsLegendLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "yMemberAsLegendLabel", {
        get: function () {
            return this.eq;
        },
        set: function (a) {
            this.eq = a;
            this.g("YMemberAsLegendLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "xMemberAsLegendUnit", {
        get: function () {
            return this.en;
        },
        set: function (a) {
            this.en = a;
            this.g("XMemberAsLegendUnit");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "yMemberAsLegendUnit", {
        get: function () {
            return this.er;
        },
        set: function (a) {
            this.er = a;
            this.g("YMemberAsLegendUnit");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLineType", {
        get: function () {
            return this.ek;
        },
        set: function (a) {
            this.ek = a;
            this.g("TrendLineType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLineBrush", {
        get: function () {
            return this.ej;
        },
        set: function (a) {
            this.ej = a;
            this.g("TrendLineBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "actualTrendLineBrush", {
        get: function () {
            return this.ee;
        },
        set: function (a) {
            this.ee = a;
            this.g("ActualTrendLineBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLineThickness", {
        get: function () {
            return this.d3;
        },
        set: function (a) {
            this.d3 = a;
            this.g("TrendLineThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLineDashArray", {
        get: function () {
            return this.dx;
        },
        set: function (a) {
            this.dx = a;
            this.g("TrendLineDashArray");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLinePeriod", {
        get: function () {
            return this.d7;
        },
        set: function (a) {
            this.d7 = a;
            this.g("TrendLinePeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "markerCollisionAvoidance", {
        get: function () {
            return this.ei;
        },
        set: function (a) {
            this.ei = a;
            this.g("MarkerCollisionAvoidance");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLineZIndex", {
        get: function () {
            return this.d8;
        },
        set: function (a) {
            this.d8 = a;
            this.g("TrendLineZIndex");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "maximumMarkers", {
        get: function () {
            return this.d6;
        },
        set: function (a) {
            this.d6 = a;
            this.g("MaximumMarkers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "itemSearchMode", {
        get: function () {
            return this.eh;
        },
        set: function (a) {
            this.eh = a;
            this.g("ItemSearchMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "itemSearchThreshold", {
        get: function () {
            return this.d5;
        },
        set: function (a) {
            this.d5 = a;
            this.g("ItemSearchThreshold");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "actualItemSearchMode", {
        get: function () {
            return this.ed;
        },
        set: function (a) {
            this.ed = a;
            this.g("ActualItemSearchMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "isCustomScatterStyleAllowed", {
        get: function () {
            return this.d0;
        },
        set: function (a) {
            this.d0 = a;
            this.g("IsCustomScatterStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "isCustomScatterMarkerStyleAllowed", {
        get: function () {
            return this.dz;
        },
        set: function (a) {
            this.dz = a;
            this.g("IsCustomScatterMarkerStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "assigningScatterStyleRef", {
        get: function () {
            return this.eg;
        },
        set: function (a) {
            this.eg = a;
            this.g("AssigningScatterStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "assigningScatterMarkerStyleRef", {
        get: function () {
            return this.ef;
        },
        set: function (a) {
            this.ef = a;
            this.g("AssigningScatterMarkerStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    ScatterBaseDescription.$t = markType(ScatterBaseDescription, 'ScatterBaseDescription', MarkerSeriesDescription.$);
    return ScatterBaseDescription;
}(MarkerSeriesDescription));
export { ScatterBaseDescription };
