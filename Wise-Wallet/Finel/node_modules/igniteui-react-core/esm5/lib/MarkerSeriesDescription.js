/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { SeriesDescription } from "./SeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var MarkerSeriesDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(MarkerSeriesDescription, _super);
    function MarkerSeriesDescription() {
        var _this = _super.call(this) || this;
        _this.dm = null;
        _this.dk = null;
        _this.di = null;
        _this.dl = null;
        _this.dc = 0;
        _this.dg = null;
        _this.dh = null;
        _this.de = null;
        _this.dj = null;
        _this.df = null;
        return _this;
    }
    MarkerSeriesDescription.prototype.get_type = function () {
        return "MarkerSeries";
    };
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerType", {
        get: function () {
            return this.dm;
        },
        set: function (a) {
            this.dm = a;
            this.g("MarkerType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerOutlineMode", {
        get: function () {
            return this.dk;
        },
        set: function (a) {
            this.dk = a;
            this.g("MarkerOutlineMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerFillMode", {
        get: function () {
            return this.di;
        },
        set: function (a) {
            this.di = a;
            this.g("MarkerFillMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerTemplateRef", {
        get: function () {
            return this.dl;
        },
        set: function (a) {
            this.dl = a;
            this.g("MarkerTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerThickness", {
        get: function () {
            return this.dc;
        },
        set: function (a) {
            this.dc = a;
            this.g("MarkerThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "actualMarkerTemplateRef", {
        get: function () {
            return this.dg;
        },
        set: function (a) {
            this.dg = a;
            this.g("ActualMarkerTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerBrush", {
        get: function () {
            return this.dh;
        },
        set: function (a) {
            this.dh = a;
            this.g("MarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "actualMarkerBrush", {
        get: function () {
            return this.de;
        },
        set: function (a) {
            this.de = a;
            this.g("ActualMarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerOutline", {
        get: function () {
            return this.dj;
        },
        set: function (a) {
            this.dj = a;
            this.g("MarkerOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "actualMarkerOutline", {
        get: function () {
            return this.df;
        },
        set: function (a) {
            this.df = a;
            this.g("ActualMarkerOutline");
        },
        enumerable: false,
        configurable: true
    });
    MarkerSeriesDescription.$t = markType(MarkerSeriesDescription, 'MarkerSeriesDescription', SeriesDescription.$);
    return MarkerSeriesDescription;
}(SeriesDescription));
export { MarkerSeriesDescription };
