/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebToastDescription } from "./WebToastDescription";
/**
 * @hidden
 */
var WebToastDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebToastDescriptionMetadata, _super);
    function WebToastDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebToastDescriptionMetadata.b = function (a) {
        if (WebToastDescriptionMetadata.a == null) {
            WebToastDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebToastDescriptionMetadata.c(WebToastDescriptionMetadata.a);
        }
        if (a.k(WebToastDescriptionMetadata.a)) {
            return;
        }
        a.ab(WebToastDescriptionMetadata.a);
    };
    WebToastDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:Toast");
        a.item("__tagNameWC", "String:igc-toast");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
        a.item("Open", "Boolean");
        a.item("DisplayTime", "Number:double");
        a.item("KeepOpen", "Boolean");
    };
    WebToastDescriptionMetadata.d = function (a) {
        WebToastDescriptionMetadata.b(a);
        a.ad("WebToast", function () { return new WebToastDescription(); });
        a.ac("WebToast", WebToastDescriptionMetadata.a);
    };
    WebToastDescriptionMetadata.$t = markType(WebToastDescriptionMetadata, 'WebToastDescriptionMetadata');
    WebToastDescriptionMetadata.a = null;
    return WebToastDescriptionMetadata;
}(Base));
export { WebToastDescriptionMetadata };
