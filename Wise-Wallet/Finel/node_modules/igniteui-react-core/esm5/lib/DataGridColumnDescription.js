/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { DefinitionBaseDescription } from "./DefinitionBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var DataGridColumnDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataGridColumnDescription, _super);
    function DataGridColumnDescription() {
        var _this = _super.call(this) || this;
        _this.dk = 0;
        _this.dm = 0;
        _this.dl = 0;
        _this.dj = 0;
        _this.ej = null;
        _this.ed = null;
        _this.ef = null;
        _this.d1 = null;
        _this.en = null;
        _this.d5 = null;
        _this.el = null;
        _this.d3 = null;
        _this.em = null;
        _this.d4 = null;
        _this.cc = null;
        _this.b8 = null;
        _this.da = 0;
        _this.cq = false;
        _this.ck = false;
        _this.b6 = null;
        _this.ca = null;
        _this.ce = null;
        _this.cp = false;
        _this.cs = false;
        _this.cr = false;
        _this.ct = false;
        _this.eo = null;
        _this.ek = null;
        _this.dx = null;
        _this.d6 = null;
        _this.dz = null;
        _this.d8 = null;
        _this.d7 = null;
        _this.dy = null;
        _this.ch = false;
        _this.cl = false;
        _this.cj = false;
        _this.cn = false;
        _this.ci = false;
        _this.cm = false;
        _this.co = false;
        _this.d9 = null;
        _this.d0 = null;
        _this.c9 = 0;
        _this.c7 = 0;
        _this.ea = null;
        _this.c8 = 0;
        _this.eb = null;
        _this.ec = null;
        _this.eh = null;
        _this.eg = null;
        _this.ei = null;
        _this.dg = 0;
        _this.di = 0;
        _this.dh = 0;
        _this.df = 0;
        _this.ee = null;
        _this.b4 = null;
        _this.d2 = null;
        return _this;
    }
    DataGridColumnDescription.prototype.get_type = function () {
        return "DataGridColumn";
    };
    Object.defineProperty(DataGridColumnDescription.prototype, "paddingLeft", {
        get: function () {
            return this.dk;
        },
        set: function (a) {
            this.dk = a;
            this.g("PaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "paddingTop", {
        get: function () {
            return this.dm;
        },
        set: function (a) {
            this.dm = a;
            this.g("PaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "paddingRight", {
        get: function () {
            return this.dl;
        },
        set: function (a) {
            this.dl = a;
            this.g("PaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "paddingBottom", {
        get: function () {
            return this.dj;
        },
        set: function (a) {
            this.dj = a;
            this.g("PaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "name", {
        get: function () {
            return this.ej;
        },
        set: function (a) {
            this.ej = a;
            this.g("Name");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "field", {
        get: function () {
            return this.ed;
        },
        set: function (a) {
            this.ed = a;
            this.g("Field");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "headerText", {
        get: function () {
            return this.ef;
        },
        set: function (a) {
            this.ef = a;
            this.g("HeaderText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualHeaderText", {
        get: function () {
            return this.d1;
        },
        set: function (a) {
            this.d1 = a;
            this.g("ActualHeaderText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "selectedBackground", {
        get: function () {
            return this.en;
        },
        set: function (a) {
            this.en = a;
            this.g("SelectedBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualSelectedBackground", {
        get: function () {
            return this.d5;
        },
        set: function (a) {
            this.d5 = a;
            this.g("ActualSelectedBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "rowHoverBackground", {
        get: function () {
            return this.el;
        },
        set: function (a) {
            this.el = a;
            this.g("RowHoverBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualHoverBackground", {
        get: function () {
            return this.d3;
        },
        set: function (a) {
            this.d3 = a;
            this.g("ActualHoverBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "rowHoverTextColor", {
        get: function () {
            return this.em;
        },
        set: function (a) {
            this.em = a;
            this.g("RowHoverTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualRowHoverTextColor", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            this.d4 = a;
            this.g("ActualRowHoverTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "animationSettings", {
        get: function () {
            return this.cc;
        },
        set: function (a) {
            this.cc = a;
            this.g("AnimationSettings");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "width", {
        get: function () {
            return this.b8;
        },
        set: function (a) {
            this.b8 = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "minWidth", {
        get: function () {
            return this.da;
        },
        set: function (a) {
            this.da = a;
            this.g("MinWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isFromMarkup", {
        get: function () {
            return this.cq;
        },
        set: function (a) {
            this.cq = a;
            this.g("IsFromMarkup");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isAutoGenerated", {
        get: function () {
            return this.ck;
        },
        set: function (a) {
            this.ck = a;
            this.g("IsAutoGenerated");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "filter", {
        get: function () {
            return this.b6;
        },
        set: function (a) {
            this.b6 = a;
            this.g("Filter");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "filterExpression", {
        get: function () {
            return this.ca;
        },
        set: function (a) {
            this.ca = a;
            this.g("FilterExpression");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "header", {
        get: function () {
            return this.ce;
        },
        set: function (a) {
            this.ce = a;
            this.g("Header");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isFilteringEnabled", {
        get: function () {
            return this.cp;
        },
        set: function (a) {
            this.cp = a;
            this.g("IsFilteringEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isResizingEnabled", {
        get: function () {
            return this.cs;
        },
        set: function (a) {
            this.cs = a;
            this.g("IsResizingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isHidden", {
        get: function () {
            return this.cr;
        },
        set: function (a) {
            this.cr = a;
            this.g("IsHidden");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "shouldRemoveWhenHidden", {
        get: function () {
            return this.ct;
        },
        set: function (a) {
            this.ct = a;
            this.g("ShouldRemoveWhenHidden");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "sortDirection", {
        get: function () {
            return this.eo;
        },
        set: function (a) {
            this.eo = a;
            this.g("SortDirection");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "pinned", {
        get: function () {
            return this.ek;
        },
        set: function (a) {
            this.ek = a;
            this.g("Pinned");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualColumnOptionsIconAlignment", {
        get: function () {
            return this.dx;
        },
        set: function (a) {
            this.dx = a;
            this.g("ActualColumnOptionsIconAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "columnOptionsIconAlignment", {
        get: function () {
            return this.d6;
        },
        set: function (a) {
            this.d6 = a;
            this.g("ColumnOptionsIconAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualColumnOptionsIconColor", {
        get: function () {
            return this.dz;
        },
        set: function (a) {
            this.dz = a;
            this.g("ActualColumnOptionsIconColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "columnOptionsIconColor", {
        get: function () {
            return this.d8;
        },
        set: function (a) {
            this.d8 = a;
            this.g("ColumnOptionsIconColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "columnOptionsIconBehavior", {
        get: function () {
            return this.d7;
        },
        set: function (a) {
            this.d7 = a;
            this.g("ColumnOptionsIconBehavior");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualColumnOptionsIconBehavior", {
        get: function () {
            return this.dy;
        },
        set: function (a) {
            this.dy = a;
            this.g("ActualColumnOptionsIconBehavior");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualIsColumnOptionsEnabled", {
        get: function () {
            return this.ch;
        },
        set: function (a) {
            this.ch = a;
            this.g("ActualIsColumnOptionsEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isColumnOptionsEnabled", {
        get: function () {
            return this.cl;
        },
        set: function (a) {
            this.cl = a;
            this.g("IsColumnOptionsEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualIsColumnOptionsSummariesEnabled", {
        get: function () {
            return this.cj;
        },
        set: function (a) {
            this.cj = a;
            this.g("ActualIsColumnOptionsSummariesEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isColumnOptionsSummariesEnabled", {
        get: function () {
            return this.cn;
        },
        set: function (a) {
            this.cn = a;
            this.g("IsColumnOptionsSummariesEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualIsColumnOptionsGroupingEnabled", {
        get: function () {
            return this.ci;
        },
        set: function (a) {
            this.ci = a;
            this.g("ActualIsColumnOptionsGroupingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isColumnOptionsGroupingEnabled", {
        get: function () {
            return this.cm;
        },
        set: function (a) {
            this.cm = a;
            this.g("IsColumnOptionsGroupingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isEditable", {
        get: function () {
            return this.co;
        },
        set: function (a) {
            this.co = a;
            this.g("IsEditable");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "deletedTextColor", {
        get: function () {
            return this.d9;
        },
        set: function (a) {
            this.d9 = a;
            this.g("DeletedTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualDeletedTextColor", {
        get: function () {
            return this.d0;
        },
        set: function (a) {
            this.d0 = a;
            this.g("ActualDeletedTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "editOpacity", {
        get: function () {
            return this.c9;
        },
        set: function (a) {
            this.c9 = a;
            this.g("EditOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualEditOpacity", {
        get: function () {
            return this.c7;
        },
        set: function (a) {
            this.c7 = a;
            this.g("ActualEditOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "editFontFamily", {
        get: function () {
            return this.ea;
        },
        set: function (a) {
            this.ea = a;
            this.g("EditFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "editFontSize", {
        get: function () {
            return this.c8;
        },
        set: function (a) {
            this.c8 = a;
            this.g("EditFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "editFontStyle", {
        get: function () {
            return this.eb;
        },
        set: function (a) {
            this.eb = a;
            this.g("EditFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "editFontWeight", {
        get: function () {
            return this.ec;
        },
        set: function (a) {
            this.ec = a;
            this.g("EditFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "mergedCellMode", {
        get: function () {
            return this.eh;
        },
        set: function (a) {
            this.eh = a;
            this.g("MergedCellMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "mergedCellEvaluationCriteria", {
        get: function () {
            return this.eg;
        },
        set: function (a) {
            this.eg = a;
            this.g("MergedCellEvaluationCriteria");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "mergedCellVerticalAlignment", {
        get: function () {
            return this.ei;
        },
        set: function (a) {
            this.ei = a;
            this.g("MergedCellVerticalAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "mergedCellPaddingLeft", {
        get: function () {
            return this.dg;
        },
        set: function (a) {
            this.dg = a;
            this.g("MergedCellPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "mergedCellPaddingTop", {
        get: function () {
            return this.di;
        },
        set: function (a) {
            this.di = a;
            this.g("MergedCellPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "mergedCellPaddingRight", {
        get: function () {
            return this.dh;
        },
        set: function (a) {
            this.dh = a;
            this.g("MergedCellPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "mergedCellPaddingBottom", {
        get: function () {
            return this.df;
        },
        set: function (a) {
            this.df = a;
            this.g("MergedCellPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "filterComparisonType", {
        get: function () {
            return this.ee;
        },
        set: function (a) {
            this.ee = a;
            this.g("FilterComparisonType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "filterOperands", {
        get: function () {
            return this.b4;
        },
        set: function (a) {
            this.b4 = a;
            this.g("FilterOperands");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualHeaderTextChangeRef", {
        get: function () {
            return this.d2;
        },
        set: function (a) {
            this.d2 = a;
            this.g("ActualHeaderTextChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    DataGridColumnDescription.$t = markType(DataGridColumnDescription, 'DataGridColumnDescription', DefinitionBaseDescription.$);
    DataGridColumnDescription.__canMarshalByValue = true;
    DataGridColumnDescription.__marshalByValueAlias = "DataGridColumn";
    return DataGridColumnDescription;
}(DefinitionBaseDescription));
export { DataGridColumnDescription };
