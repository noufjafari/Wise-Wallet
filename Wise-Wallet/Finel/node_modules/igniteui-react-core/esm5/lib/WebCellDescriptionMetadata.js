/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebCellDescription } from "./WebCellDescription";
/**
 * @hidden
 */
var WebCellDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebCellDescriptionMetadata, _super);
    function WebCellDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebCellDescriptionMetadata.b = function (a) {
        if (WebCellDescriptionMetadata.a == null) {
            WebCellDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebCellDescriptionMetadata.c(WebCellDescriptionMetadata.a);
        }
        if (a.k(WebCellDescriptionMetadata.a)) {
            return;
        }
        a.ab(WebCellDescriptionMetadata.a);
    };
    WebCellDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:Cell");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("PrimaryKey", "Unknown");
        a.item("State", "Unknown");
        a.item("PendingValue", "Unknown");
        a.item("EditValue", "Unknown");
    };
    WebCellDescriptionMetadata.d = function (a) {
        WebCellDescriptionMetadata.b(a);
        a.ad("WebCell", function () { return new WebCellDescription(); });
        a.ac("WebCell", WebCellDescriptionMetadata.a);
    };
    WebCellDescriptionMetadata.$t = markType(WebCellDescriptionMetadata, 'WebCellDescriptionMetadata');
    WebCellDescriptionMetadata.a = null;
    return WebCellDescriptionMetadata;
}(Base));
export { WebCellDescriptionMetadata };
