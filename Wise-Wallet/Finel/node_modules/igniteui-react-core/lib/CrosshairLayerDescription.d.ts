import { AnnotationLayerDescription } from "./AnnotationLayerDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class CrosshairLayerDescription extends AnnotationLayerDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private fh;
    get horizontalLineStroke(): string;
    set horizontalLineStroke(a: string);
    private fl;
    get verticalLineStroke(): string;
    set verticalLineStroke(a: string);
    private fj;
    get targetSeriesName(): string;
    set targetSeriesName(a: string);
    private fk;
    get targetSeriesRef(): string;
    set targetSeriesRef(a: string);
    private el;
    get useInterpolation(): boolean;
    set useInterpolation(a: boolean);
    private ej;
    get isAxisAnnotationEnabled(): boolean;
    set isAxisAnnotationEnabled(a: boolean);
    private fp;
    get xAxisAnnotationTextColor(): string;
    set xAxisAnnotationTextColor(a: string);
    private fn;
    get xAxisAnnotationBackground(): string;
    set xAxisAnnotationBackground(a: string);
    private ep;
    get xAxisAnnotationBackgroundCornerRadius(): number;
    set xAxisAnnotationBackgroundCornerRadius(a: number);
    private fd;
    get xAxisAnnotationInterpolatedValuePrecision(): number;
    set xAxisAnnotationInterpolatedValuePrecision(a: number);
    private fo;
    get xAxisAnnotationOutline(): string;
    set xAxisAnnotationOutline(a: string);
    private er;
    get xAxisAnnotationPaddingLeft(): number;
    set xAxisAnnotationPaddingLeft(a: number);
    private et;
    get xAxisAnnotationPaddingTop(): number;
    set xAxisAnnotationPaddingTop(a: number);
    private es;
    get xAxisAnnotationPaddingRight(): number;
    set xAxisAnnotationPaddingRight(a: number);
    private eq;
    get xAxisAnnotationPaddingBottom(): number;
    set xAxisAnnotationPaddingBottom(a: number);
    private ex;
    get yAxisAnnotationPaddingLeft(): number;
    set yAxisAnnotationPaddingLeft(a: number);
    private ez;
    get yAxisAnnotationPaddingTop(): number;
    set yAxisAnnotationPaddingTop(a: number);
    private ey;
    get yAxisAnnotationPaddingRight(): number;
    set yAxisAnnotationPaddingRight(a: number);
    private ew;
    get yAxisAnnotationPaddingBottom(): number;
    set yAxisAnnotationPaddingBottom(a: number);
    private eu;
    get xAxisAnnotationStrokeThickness(): number;
    set xAxisAnnotationStrokeThickness(a: number);
    private fs;
    get yAxisAnnotationTextColor(): string;
    set yAxisAnnotationTextColor(a: string);
    private fq;
    get yAxisAnnotationBackground(): string;
    set yAxisAnnotationBackground(a: string);
    private ev;
    get yAxisAnnotationBackgroundCornerRadius(): number;
    set yAxisAnnotationBackgroundCornerRadius(a: number);
    private fe;
    get yAxisAnnotationInterpolatedValuePrecision(): number;
    set yAxisAnnotationInterpolatedValuePrecision(a: number);
    private fr;
    get yAxisAnnotationOutline(): string;
    set yAxisAnnotationOutline(a: string);
    private e0;
    get yAxisAnnotationStrokeThickness(): number;
    set yAxisAnnotationStrokeThickness(a: number);
    private fm;
    get verticalLineVisibility(): string;
    set verticalLineVisibility(a: string);
    private fi;
    get horizontalLineVisibility(): string;
    set horizontalLineVisibility(a: string);
    private ek;
    get skipUnknownValues(): boolean;
    set skipUnknownValues(a: boolean);
}
