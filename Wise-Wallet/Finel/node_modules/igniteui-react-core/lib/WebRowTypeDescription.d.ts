import { Description } from "./Description";
import { WebGroupByRecordDescription } from "./WebGroupByRecordDescription";
import { Type } from "./type";
import { WebGridValidationStateDescription } from "./WebGridValidationStateDescription";
import { WebCellTypeDescription } from "./WebCellTypeDescription";
import { WebTreeGridRecordDescription } from "./WebTreeGridRecordDescription";
import { WebGridBaseDirectiveDescription } from "./WebGridBaseDirectiveDescription";
/**
 * @hidden
 */
export declare class WebRowTypeDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    private static __marshalByValue;
    private static __marshalByValueAlias;
    constructor();
    private as;
    get index(): number;
    set index(a: number);
    private at;
    get viewIndex(): number;
    set viewIndex(a: number);
    private ad;
    get isGroupByRow(): boolean;
    set isGroupByRow(a: boolean);
    private ae;
    get isSummaryRow(): boolean;
    set isSummaryRow(a: boolean);
    private p;
    get groupRow(): WebGroupByRecordDescription;
    set groupRow(a: WebGroupByRecordDescription);
    private ax;
    get key(): any;
    set key(a: any);
    private n;
    get validation(): WebGridValidationStateDescription;
    set validation(a: WebGridValidationStateDescription);
    private aw;
    get data(): any;
    set data(a: any);
    private h;
    get cells(): WebCellTypeDescription[];
    set cells(a: WebCellTypeDescription[]);
    private y;
    get disabled(): boolean;
    set disabled(a: boolean);
    private af;
    get pinned(): boolean;
    set pinned(a: boolean);
    private ag;
    get selected(): boolean;
    set selected(a: boolean);
    private z;
    get expanded(): boolean;
    set expanded(a: boolean);
    private x;
    get deleted(): boolean;
    set deleted(a: boolean);
    private ac;
    get inEditMode(): boolean;
    set inEditMode(a: boolean);
    private i;
    get children(): WebRowTypeDescription[];
    set children(a: WebRowTypeDescription[]);
    private r;
    get rowParent(): WebRowTypeDescription;
    set rowParent(a: WebRowTypeDescription);
    private ab;
    get hasChildren(): boolean;
    set hasChildren(a: boolean);
    private t;
    get treeRow(): WebTreeGridRecordDescription;
    set treeRow(a: WebTreeGridRecordDescription);
    private w;
    get addRowUI(): boolean;
    set addRowUI(a: boolean);
    private aa;
    get focused(): boolean;
    set focused(a: boolean);
    private l;
    get grid(): WebGridBaseDirectiveDescription;
    set grid(a: WebGridBaseDirectiveDescription);
}
