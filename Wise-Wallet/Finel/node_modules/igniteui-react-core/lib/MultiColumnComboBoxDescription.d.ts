import { Description } from "./Description";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class MultiColumnComboBoxDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private u;
    get showClearButton(): boolean;
    set showClearButton(a: boolean);
    private j;
    get fields(): string[];
    set fields(a: string[]);
    private cz;
    get backgroundColor(): string;
    set backgroundColor(a: string);
    private cl;
    get actualBackgroundColor(): string;
    set actualBackgroundColor(a: string);
    private c0;
    get baseTheme(): string;
    set baseTheme(a: string);
    private cm;
    get actualBaseTheme(): string;
    set actualBaseTheme(a: string);
    private c1;
    get borderColor(): string;
    set borderColor(a: string);
    private cn;
    get actualBorderColor(): string;
    set actualBorderColor(a: string);
    private at;
    get borderWidth(): number;
    set borderWidth(a: number);
    private ab;
    get actualBorderWidth(): number;
    set actualBorderWidth(a: number);
    private r;
    get columnHeadersVisible(): boolean;
    set columnHeadersVisible(a: boolean);
    private au;
    get contentPaddingBottom(): number;
    set contentPaddingBottom(a: number);
    private av;
    get contentPaddingLeft(): number;
    set contentPaddingLeft(a: number);
    private aw;
    get contentPaddingRight(): number;
    set contentPaddingRight(a: number);
    private ax;
    get contentPaddingTop(): number;
    set contentPaddingTop(a: number);
    private ac;
    get actualContentPaddingBottom(): number;
    set actualContentPaddingBottom(a: number);
    private ad;
    get actualContentPaddingLeft(): number;
    set actualContentPaddingLeft(a: number);
    private ae;
    get actualContentPaddingRight(): number;
    set actualContentPaddingRight(a: number);
    private af;
    get actualContentPaddingTop(): number;
    set actualContentPaddingTop(a: number);
    private az;
    get cornerRadiusBottomRight(): number;
    set cornerRadiusBottomRight(a: number);
    private ay;
    get cornerRadiusBottomLeft(): number;
    set cornerRadiusBottomLeft(a: number);
    private a0;
    get cornerRadiusTopLeft(): number;
    set cornerRadiusTopLeft(a: number);
    private a1;
    get cornerRadiusTopRight(): number;
    set cornerRadiusTopRight(a: number);
    private ah;
    get actualCornerRadiusBottomRight(): number;
    set actualCornerRadiusBottomRight(a: number);
    private ag;
    get actualCornerRadiusBottomLeft(): number;
    set actualCornerRadiusBottomLeft(a: number);
    private ai;
    get actualCornerRadiusTopLeft(): number;
    set actualCornerRadiusTopLeft(a: number);
    private aj;
    get actualCornerRadiusTopRight(): number;
    set actualCornerRadiusTopRight(a: number);
    private i;
    get dataSourceDesiredProperties(): string[];
    set dataSourceDesiredProperties(a: string[]);
    private c5;
    get density(): string;
    set density(a: string);
    private co;
    get actualDensity(): string;
    set actualDensity(a: string);
    private s;
    get dropDownButtonVisible(): boolean;
    set dropDownButtonVisible(a: boolean);
    private c6;
    get focusBorderColor(): string;
    set focusBorderColor(a: string);
    private cp;
    get actualFocusBorderColor(): string;
    set actualFocusBorderColor(a: string);
    private a3;
    get focusBorderWidth(): number;
    set focusBorderWidth(a: number);
    private ak;
    get actualFocusBorderWidth(): number;
    set actualFocusBorderWidth(a: number);
    private c7;
    get focusUnderlineColor(): string;
    set focusUnderlineColor(a: string);
    private cq;
    get actualFocusUnderlineColor(): string;
    set actualFocusUnderlineColor(a: string);
    private a4;
    get focusUnderlineOpacity(): number;
    set focusUnderlineOpacity(a: number);
    private al;
    get actualFocusUnderlineOpacity(): number;
    set actualFocusUnderlineOpacity(a: number);
    private a5;
    get focusUnderlineRippleOpacity(): number;
    set focusUnderlineRippleOpacity(a: number);
    private am;
    get actualFocusUnderlineRippleOpacity(): number;
    set actualFocusUnderlineRippleOpacity(a: number);
    private dc;
    get hoverUnderlineColor(): string;
    set hoverUnderlineColor(a: string);
    private cr;
    get actualHoverUnderlineColor(): string;
    set actualHoverUnderlineColor(a: string);
    private a7;
    get hoverUnderlineOpacity(): number;
    set hoverUnderlineOpacity(a: number);
    private an;
    get actualHoverUnderlineOpacity(): number;
    set actualHoverUnderlineOpacity(a: number);
    private a8;
    get hoverUnderlineWidth(): number;
    set hoverUnderlineWidth(a: number);
    private ao;
    get actualHoverUnderlineWidth(): number;
    set actualHoverUnderlineWidth(a: number);
    private c4;
    get dataSourceRef(): string;
    set dataSourceRef(a: string);
    private de;
    get label(): string;
    set label(a: string);
    private di;
    get labelTextColor(): string;
    set labelTextColor(a: string);
    private cs;
    get actualLabelTextColor(): string;
    set actualLabelTextColor(a: string);
    private df;
    get labelFontFamily(): string;
    set labelFontFamily(a: string);
    private a9;
    get labelFontSize(): number;
    set labelFontSize(a: number);
    private dg;
    get labelFontStyle(): string;
    set labelFontStyle(a: string);
    private dh;
    get labelFontWeight(): string;
    set labelFontWeight(a: string);
    private p;
    get actualLabelVisible(): boolean;
    set actualLabelVisible(a: boolean);
    private dk;
    get noMatchesFoundLabel(): string;
    set noMatchesFoundLabel(a: string);
    private ct;
    get actualNoMatchesFoundLabel(): string;
    set actualNoMatchesFoundLabel(a: string);
    private dl;
    get noMatchesFoundLabelBackgroundColor(): string;
    set noMatchesFoundLabelBackgroundColor(a: string);
    private cu;
    get actualNoMatchesFoundLabelBackgroundColor(): string;
    set actualNoMatchesFoundLabelBackgroundColor(a: string);
    private dq;
    get noMatchesFoundLabelTextColor(): string;
    set noMatchesFoundLabelTextColor(a: string);
    private cv;
    get actualNoMatchesFoundLabelTextColor(): string;
    set actualNoMatchesFoundLabelTextColor(a: string);
    private dm;
    get noMatchesFoundLabelFontFamily(): string;
    set noMatchesFoundLabelFontFamily(a: string);
    private ba;
    get noMatchesFoundLabelFontSize(): number;
    set noMatchesFoundLabelFontSize(a: number);
    private dn;
    get noMatchesFoundLabelFontStyle(): string;
    set noMatchesFoundLabelFontStyle(a: string);
    private dp;
    get noMatchesFoundLabelFontWeight(): string;
    set noMatchesFoundLabelFontWeight(a: string);
    private dr;
    get placeholder(): string;
    set placeholder(a: string);
    private t;
    get rowSeparatorsVisible(): boolean;
    set rowSeparatorsVisible(a: boolean);
    private dw;
    get textColor(): string;
    set textColor(a: string);
    private cw;
    get actualTextColor(): string;
    set actualTextColor(a: string);
    private c8;
    get fontFamily(): string;
    set fontFamily(a: string);
    private a6;
    get fontSize(): number;
    set fontSize(a: number);
    private c9;
    get fontStyle(): string;
    set fontStyle(a: string);
    private da;
    get fontWeight(): string;
    set fontWeight(a: string);
    private dz;
    get underlineColor(): string;
    set underlineColor(a: string);
    private cx;
    get actualUnderlineColor(): string;
    set actualUnderlineColor(a: string);
    private bb;
    get underlineOpacity(): number;
    set underlineOpacity(a: number);
    private ap;
    get actualUnderlineOpacity(): number;
    set actualUnderlineOpacity(a: number);
    private d0;
    get underlineRippleColor(): string;
    set underlineRippleColor(a: string);
    private cy;
    get actualUnderlineRippleColor(): string;
    set actualUnderlineRippleColor(a: string);
    private bc;
    get underlineRippleOpacity(): number;
    set underlineRippleOpacity(a: number);
    private aq;
    get actualUnderlineRippleOpacity(): number;
    set actualUnderlineRippleOpacity(a: number);
    private bd;
    get underlineRippleWidth(): number;
    set underlineRippleWidth(a: number);
    private ar;
    get actualUnderlineRippleWidth(): number;
    set actualUnderlineRippleWidth(a: number);
    private be;
    get underlineWidth(): number;
    set underlineWidth(a: number);
    private as;
    get actualUnderlineWidth(): number;
    set actualUnderlineWidth(a: number);
    private q;
    get allowFilter(): boolean;
    set allowFilter(a: boolean);
    private dt;
    get sortMode(): string;
    set sortMode(a: string);
    private dx;
    get textField(): string;
    set textField(a: string);
    private du;
    get text(): string;
    set text(a: string);
    private k;
    get valueField(): string[];
    set valueField(a: string[]);
    private h;
    get actualValueField(): string[];
    set actualValueField(a: string[]);
    private cj;
    get value(): any;
    set value(a: any);
    private db;
    get gotFocusRef(): string;
    set gotFocusRef(a: string);
    private dj;
    get lostFocusRef(): string;
    set lostFocusRef(a: string);
    private dy;
    get textValueChangedRef(): string;
    set textValueChangedRef(a: string);
    private ds;
    get selectedValueChangedRef(): string;
    set selectedValueChangedRef(a: string);
    private dd;
    get keyDownRef(): string;
    set keyDownRef(a: string);
    private c2;
    get changeRef(): string;
    set changeRef(a: string);
    private c3;
    get changingRef(): string;
    set changingRef(a: string);
    private dv;
    get textChangeRef(): string;
    set textChangeRef(a: string);
    private d1;
    get valueChangeRef(): string;
    set valueChangeRef(a: string);
    private a2;
    get defaultColumnWidth(): number;
    set defaultColumnWidth(a: number);
}
