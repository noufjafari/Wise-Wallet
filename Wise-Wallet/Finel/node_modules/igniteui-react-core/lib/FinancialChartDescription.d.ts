import { XYChartDescription } from "./XYChartDescription";
import { TimeAxisBreakDescription } from "./TimeAxisBreakDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class FinancialChartDescription extends XYChartDescription {
    static $t: Type;
    private v5;
    get tooltipTemplateRef(): string;
    set tooltipTemplateRef(a: string);
    private v7;
    get width(): string;
    set width(a: string);
    private v4;
    get height(): string;
    set height(a: string);
    private v2;
    get background(): string;
    set background(a: string);
    protected get_type(): string;
    constructor();
    private ur;
    get leftMargin(): number;
    set leftMargin(a: number);
    private t3;
    get isHorizontalZoomEnabled(): boolean;
    set isHorizontalZoomEnabled(a: boolean);
    private uv;
    get toolbarHeight(): number;
    set toolbarHeight(a: number);
    private ub;
    get yAxisIsLogarithmic(): boolean;
    set yAxisIsLogarithmic(a: boolean);
    private vu;
    get yAxisLogarithmBase(): number;
    set yAxisLogarithmBase(a: number);
    private u2;
    get yAxisInterval(): number;
    set yAxisInterval(a: number);
    private u4;
    get yAxisMinimumValue(): number;
    set yAxisMinimumValue(a: number);
    private u3;
    get yAxisMaximumValue(): number;
    set yAxisMaximumValue(a: number);
    private u5;
    get yAxisMinorInterval(): number;
    set yAxisMinorInterval(a: number);
    private v6;
    get volumeType(): string;
    set volumeType(a: string);
    private v8;
    get xAxisMode(): string;
    set xAxisMode(a: string);
    private ux;
    get xAxisZoomMaximumCategoryRange(): number;
    set xAxisZoomMaximumCategoryRange(a: number);
    private u0;
    get xAxisZoomToCategoryStart(): number;
    set xAxisZoomToCategoryStart(a: number);
    private uy;
    get xAxisZoomMaximumItemSpan(): number;
    set xAxisZoomMaximumItemSpan(a: number);
    private uz;
    get xAxisZoomToCategoryRange(): number;
    set xAxisZoomToCategoryRange(a: number);
    private u1;
    get xAxisZoomToItemSpan(): number;
    set xAxisZoomToItemSpan(a: number);
    private wa;
    get yAxisMode(): string;
    set yAxisMode(a: string);
    private t5;
    get isToolbarVisible(): boolean;
    set isToolbarVisible(a: boolean);
    private v3;
    get chartType(): string;
    set chartType(a: string);
    private v9;
    get yAxisLabelHorizontalAlignment(): string;
    set yAxisLabelHorizontalAlignment(a: string);
    private t7;
    get isWindowSyncedToVisibleRange(): boolean;
    set isWindowSyncedToVisibleRange(a: boolean);
    private tf;
    get indicatorTypes(): string[];
    set indicatorTypes(a: string[]);
    private tk;
    get overlayTypes(): string[];
    set overlayTypes(a: string[]);
    private t9;
    get yAxisAbbreviateLargeNumbers(): boolean;
    set yAxisAbbreviateLargeNumbers(a: boolean);
    private uu;
    get resolution(): number;
    set resolution(a: number);
    private t8;
    get xAxisEnhancedIntervalPreferMoreCategoryLabels(): boolean;
    set xAxisEnhancedIntervalPreferMoreCategoryLabels(a: boolean);
    private ua;
    get yAxisEnhancedIntervalPreferMoreCategoryLabels(): boolean;
    set yAxisEnhancedIntervalPreferMoreCategoryLabels(a: boolean);
    private wb;
    get zoomSliderType(): string;
    set zoomSliderType(a: string);
    private tg;
    get negativeBrushes(): string[];
    set negativeBrushes(a: string[]);
    private th;
    get negativeOutlines(): string[];
    set negativeOutlines(a: string[]);
    private ti;
    get overlayBrushes(): string[];
    set overlayBrushes(a: string[]);
    private tj;
    get overlayOutlines(): string[];
    set overlayOutlines(a: string[]);
    private tn;
    get volumeOutlines(): string[];
    set volumeOutlines(a: string[]);
    private tm;
    get volumeBrushes(): string[];
    set volumeBrushes(a: string[]);
    private te;
    get indicatorNegativeBrushes(): string[];
    set indicatorNegativeBrushes(a: string[]);
    private tc;
    get indicatorBrushes(): string[];
    set indicatorBrushes(a: string[]);
    private uw;
    get volumeThickness(): number;
    set volumeThickness(a: number);
    private ut;
    get overlayThickness(): number;
    set overlayThickness(a: number);
    private us;
    get overlayMultiplier(): number;
    set overlayMultiplier(a: number);
    private uq;
    get indicatorThickness(): number;
    set indicatorThickness(a: number);
    private td;
    get indicatorDisplayTypes(): string[];
    set indicatorDisplayTypes(a: string[]);
    private vq;
    get indicatorPeriod(): number;
    set indicatorPeriod(a: number);
    private up;
    get indicatorMultiplier(): number;
    set indicatorMultiplier(a: number);
    private vt;
    get indicatorSmoothingPeriod(): number;
    set indicatorSmoothingPeriod(a: number);
    private vr;
    get indicatorShortPeriod(): number;
    set indicatorShortPeriod(a: number);
    private vp;
    get indicatorLongPeriod(): number;
    set indicatorLongPeriod(a: number);
    private vs;
    get indicatorSignalPeriod(): number;
    set indicatorSignalPeriod(a: number);
    private tl;
    get rangeSelectorOptions(): string[];
    set rangeSelectorOptions(a: string[]);
    private tb;
    get customIndicatorNames(): string[];
    set customIndicatorNames(a: string[]);
    private t6;
    get isVerticalZoomEnabled(): boolean;
    set isVerticalZoomEnabled(a: boolean);
    private wc;
    get zoomSliderXAxisMajorStroke(): string;
    set zoomSliderXAxisMajorStroke(a: string);
    private u6;
    get zoomSliderXAxisMajorStrokeThickness(): number;
    set zoomSliderXAxisMajorStrokeThickness(a: number);
    private t4;
    get isLegendVisible(): boolean;
    set isLegendVisible(a: boolean);
    private um;
    get xAxisMinimumValue(): Date;
    set xAxisMinimumValue(a: Date);
    private ul;
    get xAxisMaximumValue(): Date;
    set xAxisMaximumValue(a: Date);
    private to;
    get xAxisBreaks(): TimeAxisBreakDescription[];
    set xAxisBreaks(a: TimeAxisBreakDescription[]);
    private v1;
    get applyCustomIndicatorsRef(): string;
    set applyCustomIndicatorsRef(a: string);
}
