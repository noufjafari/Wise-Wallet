import { Description } from "./Description";
import { WebFilteringOptionsDescription } from "./WebFilteringOptionsDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class WebComboDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private aj;
    get dataRef(): string;
    set dataRef(a: string);
    private as;
    get name(): string;
    set name(a: string);
    private o;
    get disabled(): boolean;
    set disabled(a: boolean);
    private t;
    get required(): boolean;
    set required(a: boolean);
    private q;
    get invalid(): boolean;
    set invalid(a: boolean);
    private s;
    get outlined(): boolean;
    set outlined(a: boolean);
    private u;
    get singleSelect(): boolean;
    set singleSelect(a: boolean);
    private l;
    get autofocus(): boolean;
    set autofocus(a: boolean);
    private m;
    get autofocusList(): boolean;
    set autofocusList(a: boolean);
    private ar;
    get label(): string;
    set label(a: string);
    private av;
    get placeholder(): string;
    set placeholder(a: string);
    private aw;
    get placeholderSearch(): string;
    set placeholderSearch(a: string);
    private ak;
    get dir(): string;
    set dir(a: string);
    private r;
    get open(): boolean;
    set open(a: boolean);
    private ax;
    get valueKey(): string;
    set valueKey(a: string);
    private al;
    get displayKey(): string;
    set displayKey(a: string);
    private ao;
    get groupKey(): string;
    set groupKey(a: string);
    private ap;
    get groupSorting(): string;
    set groupSorting(a: string);
    private j;
    get filteringOptions(): WebFilteringOptionsDescription;
    set filteringOptions(a: WebFilteringOptionsDescription);
    private n;
    get caseSensitiveIcon(): boolean;
    set caseSensitiveIcon(a: boolean);
    private p;
    get disableFiltering(): boolean;
    set disableFiltering(a: boolean);
    private h;
    get value(): string[];
    set value(a: string[]);
    private aq;
    get itemTemplateRef(): string;
    set itemTemplateRef(a: string);
    private an;
    get groupHeaderTemplateRef(): string;
    set groupHeaderTemplateRef(a: string);
    private ag;
    get changeRef(): string;
    set changeRef(a: string);
    private am;
    get focusRef(): string;
    set focusRef(a: string);
    private af;
    get blurRef(): string;
    set blurRef(a: string);
    private au;
    get openingRef(): string;
    set openingRef(a: string);
    private at;
    get openedRef(): string;
    set openedRef(a: string);
    private ai;
    get closingRef(): string;
    set closingRef(a: string);
    private ah;
    get closedRef(): string;
    set closedRef(a: string);
}
