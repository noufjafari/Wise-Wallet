import { DataGridColumnDescription } from "./DataGridColumnDescription";
import { FormatSpecifierDescription } from "./FormatSpecifierDescription";
import { BaseDataSourceDescription } from "./BaseDataSourceDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class NumericColumnDescription extends DataGridColumnDescription {
    static $t: Type;
    protected get_type(): string;
    private static __canMarshalByValue1;
    private static __marshalByValueAlias1;
    constructor();
    private f1;
    get negativePrefix(): string;
    set negativePrefix(a: string);
    private f3;
    get positivePrefix(): string;
    set positivePrefix(a: string);
    private f2;
    get negativeSuffix(): string;
    set negativeSuffix(a: string);
    private f4;
    get positiveSuffix(): string;
    set positiveSuffix(a: string);
    private fo;
    get maxFractionDigits(): number;
    set maxFractionDigits(a: number);
    private fp;
    get minFractionDigits(): number;
    set minFractionDigits(a: number);
    private fq;
    get minIntegerDigits(): number;
    set minIntegerDigits(a: number);
    private fm;
    get showGroupingSeparator(): boolean;
    set showGroupingSeparator(a: boolean);
    private f0;
    get formatString(): string;
    set formatString(a: string);
    private fh;
    get formatSpecifiers(): FormatSpecifierDescription[];
    set formatSpecifiers(a: FormatSpecifierDescription[]);
    private fz;
    get formatOverrideRef(): string;
    set formatOverrideRef(a: string);
    private fx;
    get editorType(): string;
    set editorType(a: string);
    private fv;
    get editorDataSourceRef(): string;
    set editorDataSourceRef(a: string);
    private fj;
    get editorDataSource(): BaseDataSourceDescription;
    set editorDataSource(a: BaseDataSourceDescription);
    private fw;
    get editorTextField(): string;
    set editorTextField(a: string);
    private fy;
    get editorValueField(): string;
    set editorValueField(a: string);
}
