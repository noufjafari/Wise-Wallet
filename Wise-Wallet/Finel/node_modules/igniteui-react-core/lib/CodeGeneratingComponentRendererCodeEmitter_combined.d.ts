import { Base, Type } from "./type";
import { CodeGenerationTargetPlatforms } from "./CodeGenerationTargetPlatforms";
import { CodeGeneratingRendererResult } from "./CodeGeneratingRendererResult";
import { CodeGenerationRendererOptions } from "./CodeGenerationRendererOptions";
import { CodeGeneratingCodeWriter } from "./CodeGeneratingCodeWriter";
import { CodeGenerationItemBuilderPropertyInfo } from "./CodeGenerationItemBuilderPropertyInfo";
import { List$1 } from "./List$1";
import { TypeDescriptionContext } from "./TypeDescriptionContext";
import { TypeDescriptionMetadata } from "./TypeDescriptionMetadata";
import { DescriptionRef } from "./DescriptionRef";
import { StringBuilder } from "./StringBuilder";
import { CodeGeneratingImportManager } from "./CodeGeneratingImportManager";
import { CodeGenerationLibraryItemContent } from "./CodeGenerationLibraryItemContent";
import { CodeGeneratingComponentRendererHandlerEmitter } from "./CodeGeneratingComponentRendererHandlerEmitter";
import { CodeGeneratingComponentRendererDataEmitter } from "./CodeGeneratingComponentRendererDataEmitter";
import { CodeGeneratingComponentRendererDataEmitterPropertyType } from "./CodeGeneratingComponentRendererDataEmitterPropertyType";
import { CodeGeneratingComponentRendererDataEmitterItemType } from "./CodeGeneratingComponentRendererDataEmitterItemType";
import { CodeGenerationLibraryItemContentLocation } from "./CodeGenerationLibraryItemContentLocation";
import { JsonDictionaryValue } from "./JsonDictionaryValue";
import { JsonDictionaryObject } from "./JsonDictionaryObject";
import { JsonDictionaryItem } from "./JsonDictionaryItem";
import { ComponentRenderer } from "./ComponentRenderer";
import { CodeGeneratingComponentRendererTemplateEmitter } from "./CodeGeneratingComponentRendererTemplateEmitter";
import { CodeGeneratingComponentRendererModuleEmitter } from "./CodeGeneratingComponentRendererModuleEmitter";
import { ICodeGenerationRendererTemplate } from "./ICodeGenerationRendererTemplate";
import { IComponentRendererAdapter } from "./IComponentRendererAdapter";
/**
 * @hidden
 */
export declare abstract class CodeGeneratingComponentRendererCodeEmitter extends Base {
    static $t: Type;
    private l;
    private j;
    protected get_ai(): string;
    protected get ai(): string;
    protected get_aj(): string;
    protected get aj(): string;
    protected get a3(): string;
    protected get m(): CodeGenerationRendererOptions;
    private y;
    protected bn(a: CodeGenerationItemBuilderPropertyInfo): void;
    protected get k(): CodeGeneratingRendererResult;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult);
    private d;
    protected get h(): CodeGeneratingCodeWriter;
    private a;
    protected get e(): CodeGeneratingCodeWriter;
    private c;
    protected get g(): CodeGeneratingCodeWriter;
    private b;
    protected get f(): CodeGeneratingCodeWriter;
    private z;
    protected a7(a: string): void;
    protected abstract get r(): boolean;
    v(a: TypeDescriptionContext, b: CodeGenerationItemBuilderPropertyInfo): boolean;
    q(a: TypeDescriptionContext, b: CodeGenerationItemBuilderPropertyInfo): boolean;
    t(a: CodeGenerationItemBuilderPropertyInfo): boolean;
    private ac;
    protected get an(): string;
    a8(a: string, b: string, c: TypeDescriptionContext): void;
    bm(): void;
    bg(a: number): void;
    bh(a: string): void;
    be(a: number, b: string, c: CodeGenerationItemBuilderPropertyInfo, d: TypeDescriptionContext): void;
    bf(a: number, b: string, c: CodeGenerationItemBuilderPropertyInfo, d: TypeDescriptionContext): void;
    toString(): string;
    protected ax(): string;
    protected a0(a: TypeDescriptionContext, b: CodeGenerationItemBuilderPropertyInfo, c: boolean): string;
    protected abstract i(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult): CodeGeneratingComponentRendererCodeEmitter;
    protected al(a: TypeDescriptionContext, b: CodeGenerationItemBuilderPropertyInfo): string;
    private ak;
    protected ao(a: TypeDescriptionContext, b: CodeGenerationItemBuilder, c: string, d: string): string;
    protected ap(a: CodeGenerationItemBuilderPropertyInfo, b: TypeDescriptionContext, c: List$1<CodeGenerationItemBuilder>, d: List$1<string>, e: string): string;
    protected a5(a: TypeDescriptionContext, b: CodeGenerationItemBuilderPropertyInfo): string;
    protected aq(a: TypeDescriptionContext, b: CodeGenerationItemBuilderPropertyInfo): string;
    protected ad(a: CodeGenerationItemBuilderPropertyInfo): any;
    private az;
    protected s(a: CodeGenerationItemBuilderPropertyInfo): boolean;
    protected ay(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected as(a: CodeGenerationItemBuilderPropertyInfo): string;
    private av;
    protected at(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected aw(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected au(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected get_w(): boolean;
    protected get w(): boolean;
    protected ah(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected ag(a: any): string;
    protected af(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected ae(a: any): string;
    private aa;
    private ab;
    bl(a: string): void;
    bk(a: string): void;
    private ar;
    bi(): void;
    protected get_a4(): string;
    protected get a4(): string;
    get am(): string;
    protected get u(): boolean;
    protected get o(): boolean;
    protected get p(): boolean;
    a2: string;
    protected get_x(): boolean;
    get x(): boolean;
    a1: string;
    protected get_n(): boolean;
    get n(): boolean;
    bj(): void;
    ba(a: StringBuilder): void;
    bd(a: StringBuilder): void;
    a9(a: StringBuilder): void;
    bb(a: TypeDescriptionContext, b: CodeGeneratingImportManager): void;
    protected bc(a: TypeDescriptionContext, b: List$1<string>, c: CodeGeneratingImportManager): void;
}
/**
 * @hidden
 */
export declare class BlazorRazorCodeGeneratingComponentRendererCodeEmitter extends CodeGeneratingComponentRendererCodeEmitter {
    static $t: Type;
    protected get_r(): boolean;
    protected get r(): boolean;
    protected ao(a: TypeDescriptionContext, b: CodeGenerationItemBuilder, c: string, d: string): string;
    protected ap(a: CodeGenerationItemBuilderPropertyInfo, b: TypeDescriptionContext, c: List$1<CodeGenerationItemBuilder>, d: List$1<string>, e: string): string;
    protected i(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult): CodeGeneratingComponentRendererCodeEmitter;
    protected get_x(): boolean;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult);
    protected br(a: TypeDescriptionContext, b: string, c: CodeGenerationItemBuilderPropertyInfo): string;
    protected aq(a: TypeDescriptionContext, b: CodeGenerationItemBuilderPropertyInfo): string;
    a8(a: string, b: string, c: TypeDescriptionContext): void;
    bm(): void;
    bh(a: string): void;
    private bq;
    private bo;
    private bp;
    be(a: number, b: string, c: CodeGenerationItemBuilderPropertyInfo, d: TypeDescriptionContext): void;
    protected at(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected a0(a: TypeDescriptionContext, b: CodeGenerationItemBuilderPropertyInfo, c: boolean): string;
    protected ad(a: CodeGenerationItemBuilderPropertyInfo): any;
    protected ax(): string;
    protected as(a: CodeGenerationItemBuilderPropertyInfo): string;
    private bs;
    protected ay(a: CodeGenerationItemBuilderPropertyInfo): string;
    bf(a: number, b: string, c: CodeGenerationItemBuilderPropertyInfo, d: TypeDescriptionContext): void;
    protected get_a4(): string;
}
/**
 * @hidden
 */
export declare class BlazorCodeBehindCodeGeneratingComponentRendererCodeEmitter extends CodeGeneratingComponentRendererCodeEmitter {
    static $t: Type;
    protected get_r(): boolean;
    protected get r(): boolean;
    protected i(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult): CodeGeneratingComponentRendererCodeEmitter;
    protected get_x(): boolean;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult);
    protected br(a: string, b: CodeGenerationItemBuilderPropertyInfo): string;
    protected aq(a: TypeDescriptionContext, b: CodeGenerationItemBuilderPropertyInfo): string;
    a8(a: string, b: string, c: TypeDescriptionContext): void;
    bm(): void;
    bh(a: string): void;
    private bq;
    private bo;
    private bp;
    be(a: number, b: string, c: CodeGenerationItemBuilderPropertyInfo, d: TypeDescriptionContext): void;
    protected at(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected a0(a: TypeDescriptionContext, b: CodeGenerationItemBuilderPropertyInfo, c: boolean): string;
    protected ad(a: CodeGenerationItemBuilderPropertyInfo): any;
    protected ax(): string;
    protected as(a: CodeGenerationItemBuilderPropertyInfo): string;
    private bs;
    protected ay(a: CodeGenerationItemBuilderPropertyInfo): string;
    bf(a: number, b: string, c: CodeGenerationItemBuilderPropertyInfo, d: TypeDescriptionContext): void;
    protected get_a4(): string;
}
/**
 * @hidden
 */
export declare class ReactMarkupCodeGeneratingComponentRendererCodeEmitter extends CodeGeneratingComponentRendererCodeEmitter {
    static $t: Type;
    protected get_r(): boolean;
    protected get r(): boolean;
    protected ao(a: TypeDescriptionContext, b: CodeGenerationItemBuilder, c: string, d: string): string;
    protected ap(a: CodeGenerationItemBuilderPropertyInfo, b: TypeDescriptionContext, c: List$1<CodeGenerationItemBuilder>, d: List$1<string>, e: string): string;
    protected i(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult): CodeGeneratingComponentRendererCodeEmitter;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult);
    protected aq(a: TypeDescriptionContext, b: CodeGenerationItemBuilderPropertyInfo): string;
    protected get_w(): boolean;
    protected get_a4(): string;
    private bo;
    private bp;
    a8(a: string, b: string, c: TypeDescriptionContext): void;
    private br;
    bm(): void;
    private bq;
    protected au(a: CodeGenerationItemBuilderPropertyInfo): string;
    bh(a: string): void;
    be(a: number, b: string, c: CodeGenerationItemBuilderPropertyInfo, d: TypeDescriptionContext): void;
    protected ad(a: CodeGenerationItemBuilderPropertyInfo): any;
    protected ax(): string;
    protected as(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected ay(a: CodeGenerationItemBuilderPropertyInfo): string;
    bf(a: number, b: string, c: CodeGenerationItemBuilderPropertyInfo, d: TypeDescriptionContext): void;
    protected bc(a: TypeDescriptionContext, b: List$1<string>, c: CodeGeneratingImportManager): void;
}
/**
 * @hidden
 */
export declare abstract class WebCodeBehindCodeGeneratingComponentRendererCodeEmitter extends CodeGeneratingComponentRendererCodeEmitter {
    static $t: Type;
    protected get_r(): boolean;
    protected get r(): boolean;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult);
    private bo;
    protected at(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected aq(a: TypeDescriptionContext, b: CodeGenerationItemBuilderPropertyInfo): string;
    protected get_w(): boolean;
    a8(a: string, b: string, c: TypeDescriptionContext): void;
    private bs;
    bm(): void;
    bg(a: number): void;
    bh(a: string): void;
    private br;
    private bp;
    private bq;
    be(a: number, b: string, c: CodeGenerationItemBuilderPropertyInfo, d: TypeDescriptionContext): void;
    protected ad(a: CodeGenerationItemBuilderPropertyInfo): any;
    protected ax(): string;
    protected as(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected ay(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected au(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected a0(a: TypeDescriptionContext, b: CodeGenerationItemBuilderPropertyInfo, c: boolean): string;
    bf(a: number, b: string, c: CodeGenerationItemBuilderPropertyInfo, d: TypeDescriptionContext): void;
}
/**
 * @hidden
 */
export declare class ReactCodeBehindCodeGeneratingComponentRendererCodeEmitter extends WebCodeBehindCodeGeneratingComponentRendererCodeEmitter {
    static $t: Type;
    protected get_r(): boolean;
    protected i(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult): CodeGeneratingComponentRendererCodeEmitter;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult);
    protected get_a4(): string;
    protected bc(a: TypeDescriptionContext, b: List$1<string>, c: CodeGeneratingImportManager): void;
}
/**
 * @hidden
 */
export declare class WebComponentsMarkupCodeGeneratingComponentRendererCodeEmitter extends CodeGeneratingComponentRendererCodeEmitter {
    static $t: Type;
    protected get_r(): boolean;
    protected get r(): boolean;
    private bo;
    protected at(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected i(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult): CodeGeneratingComponentRendererCodeEmitter;
    protected ao(a: TypeDescriptionContext, b: CodeGenerationItemBuilder, c: string, d: string): string;
    protected ap(a: CodeGenerationItemBuilderPropertyInfo, b: TypeDescriptionContext, c: List$1<CodeGenerationItemBuilder>, d: List$1<string>, e: string): string;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult);
    protected aq(a: TypeDescriptionContext, b: CodeGenerationItemBuilderPropertyInfo): string;
    protected get_w(): boolean;
    a8(a: string, b: string, c: TypeDescriptionContext): void;
    private bs;
    bm(): void;
    bh(a: string): void;
    private br;
    private bp;
    private bq;
    protected get_a4(): string;
    protected bc(a: TypeDescriptionContext, b: List$1<string>, c: CodeGeneratingImportManager): void;
    be(a: number, b: string, c: CodeGenerationItemBuilderPropertyInfo, d: TypeDescriptionContext): void;
    protected ad(a: CodeGenerationItemBuilderPropertyInfo): any;
    protected ax(): string;
    protected as(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected ay(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected au(a: CodeGenerationItemBuilderPropertyInfo): string;
    bf(a: number, b: string, c: CodeGenerationItemBuilderPropertyInfo, d: TypeDescriptionContext): void;
}
/**
 * @hidden
 */
export declare class WebComponentsCodeBehindCodeGeneratingComponentRendererCodeEmitter extends WebCodeBehindCodeGeneratingComponentRendererCodeEmitter {
    static $t: Type;
    protected i(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult): CodeGeneratingComponentRendererCodeEmitter;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult);
    protected get_a4(): string;
    protected bc(a: TypeDescriptionContext, b: List$1<string>, c: CodeGeneratingImportManager): void;
}
/**
 * @hidden
 */
export declare class TSCodeGeneratingComponentRendererHandlerEmitter extends CodeGeneratingComponentRendererHandlerEmitter {
    static $t: Type;
    private w;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult, c: CodeGenerationTargetPlatforms);
    protected t(a: string, b: boolean): void;
    protected u(a: string, b: boolean): void;
    protected get x(): string;
    protected get y(): string;
    protected v(a: CodeGeneratingImportManager, b: string): void;
    protected q(a: string): string;
}
/**
 * @hidden
 */
export declare class TSCodeGeneratingComponentRendererDataEmitter extends CodeGeneratingComponentRendererDataEmitter {
    static $t: Type;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult);
    protected w(a: string, b?: boolean): string;
    protected v(a: string): string;
    protected ap(a: string): string;
    protected get_s(): string;
    private al;
    protected ak(a: string, b: string[], c: CodeGeneratingComponentRendererDataEmitterPropertyType[], d: CodeGeneratingCodeWriter, e: CodeGeneratingImportManager): void;
    protected ag(a: string, b: CodeGenerationLibraryItemContentLocation, c: CodeGenerationLibraryItemContent): void;
    protected ah(a: string, b: JsonDictionaryValue): void;
    protected ai(a: string, b: string[], c: CodeGeneratingComponentRendererDataEmitterPropertyType[], d: JsonDictionaryObject): void;
    protected y(a: string, b: CodeGeneratingImportManager): void;
    protected z(a: string, b: string, c: CodeGeneratingImportManager): void;
    protected aa(a: string, b: CodeGeneratingImportManager): void;
    protected ac(a: CodeGeneratingComponentRendererDataEmitterItemType, b: CodeGeneratingCodeWriter, c: CodeGeneratingImportManager): void;
    private am;
    private ao;
    protected aj(a: string, b: string[], c: CodeGeneratingComponentRendererDataEmitterPropertyType[], d: CodeGeneratingCodeWriter): void;
    protected x(a: string, b: string[], c: CodeGeneratingComponentRendererDataEmitterPropertyType[], d: JsonDictionaryItem, e: number, f: CodeGeneratingCodeWriter): void;
    private aq;
    protected t(a: CodeGeneratingComponentRendererDataEmitterPropertyType, b: JsonDictionaryValue): string;
    protected an(a: JsonDictionaryValue): string;
}
/**
 * @hidden
 */
export declare class AngularTemplateCodeGeneratingComponentRendererCodeEmitter extends CodeGeneratingComponentRendererCodeEmitter {
    static $t: Type;
    protected get_r(): boolean;
    protected get r(): boolean;
    protected ao(a: TypeDescriptionContext, b: CodeGenerationItemBuilder, c: string, d: string): string;
    protected ap(a: CodeGenerationItemBuilderPropertyInfo, b: TypeDescriptionContext, c: List$1<CodeGenerationItemBuilder>, d: List$1<string>, e: string): string;
    protected i(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult): CodeGeneratingComponentRendererCodeEmitter;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult);
    protected aq(a: TypeDescriptionContext, b: CodeGenerationItemBuilderPropertyInfo): string;
    protected get_w(): boolean;
    protected get_a4(): string;
    private bq;
    private bo;
    private bp;
    a8(a: string, b: string, c: TypeDescriptionContext): void;
    protected bc(a: TypeDescriptionContext, b: List$1<string>, c: CodeGeneratingImportManager): void;
    private br;
    bm(): void;
    bh(a: string): void;
    be(a: number, b: string, c: CodeGenerationItemBuilderPropertyInfo, d: TypeDescriptionContext): void;
    protected au(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected ad(a: CodeGenerationItemBuilderPropertyInfo): any;
    protected ax(): string;
    protected as(a: CodeGenerationItemBuilderPropertyInfo): string;
    protected ay(a: CodeGenerationItemBuilderPropertyInfo): string;
    bf(a: number, b: string, c: CodeGenerationItemBuilderPropertyInfo, d: TypeDescriptionContext): void;
}
/**
 * @hidden
 */
export declare class AngularCodeBehindCodeGeneratingComponentRendererCodeEmitter extends WebCodeBehindCodeGeneratingComponentRendererCodeEmitter {
    static $t: Type;
    protected get_r(): boolean;
    protected i(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult): CodeGeneratingComponentRendererCodeEmitter;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult);
    protected get_a4(): string;
    protected bc(a: TypeDescriptionContext, b: List$1<string>, c: CodeGeneratingImportManager): void;
}
/**
 * @hidden
 */
export declare class DotNetCodeGeneratingComponentRendererDataEmitter extends CodeGeneratingComponentRendererDataEmitter {
    static $t: Type;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult);
    protected aa(a: string, b: CodeGeneratingImportManager): void;
    protected ae(a: CodeGeneratingCodeWriter): void;
    private al;
    protected ad(a: CodeGeneratingCodeWriter): void;
    protected w(a: string, b?: boolean): string;
    protected v(a: string): string;
    protected ap(a: string): string;
    protected ak(a: string, b: string[], c: CodeGeneratingComponentRendererDataEmitterPropertyType[], d: CodeGeneratingCodeWriter, e: CodeGeneratingImportManager): void;
    protected ag(a: string, b: CodeGenerationLibraryItemContentLocation, c: CodeGenerationLibraryItemContent): void;
    protected ah(a: string, b: JsonDictionaryValue): void;
    protected ai(a: string, b: string[], c: CodeGeneratingComponentRendererDataEmitterPropertyType[], d: JsonDictionaryObject): void;
    protected get_s(): string;
    protected ac(a: CodeGeneratingComponentRendererDataEmitterItemType, b: CodeGeneratingCodeWriter, c: CodeGeneratingImportManager): void;
    private am;
    private ao;
    protected aj(a: string, b: string[], c: CodeGeneratingComponentRendererDataEmitterPropertyType[], d: CodeGeneratingCodeWriter): void;
    protected x(a: string, b: string[], c: CodeGeneratingComponentRendererDataEmitterPropertyType[], d: JsonDictionaryItem, e: number, f: CodeGeneratingCodeWriter): void;
    private aq;
    protected t(a: CodeGeneratingComponentRendererDataEmitterPropertyType, b: JsonDictionaryValue): string;
    protected an(a: JsonDictionaryValue): string;
}
/**
 * @hidden
 */
export declare class WPFXamlCodeGeneratingComponentRendererCodeEmitter extends CodeGeneratingComponentRendererCodeEmitter {
    static $t: Type;
    protected get_r(): boolean;
    protected get r(): boolean;
    protected i(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult): CodeGeneratingComponentRendererCodeEmitter;
    protected get_x(): boolean;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult);
    protected aq(a: TypeDescriptionContext, b: CodeGenerationItemBuilderPropertyInfo): string;
    a8(a: string, b: string, c: TypeDescriptionContext): void;
    bm(): void;
    bh(a: string): void;
    be(a: number, b: string, c: CodeGenerationItemBuilderPropertyInfo, d: TypeDescriptionContext): void;
    protected ad(a: CodeGenerationItemBuilderPropertyInfo): any;
    protected ax(): string;
    protected as(a: CodeGenerationItemBuilderPropertyInfo): string;
    private bo;
    protected ay(a: CodeGenerationItemBuilderPropertyInfo): string;
    bf(a: number, b: string, c: CodeGenerationItemBuilderPropertyInfo, d: TypeDescriptionContext): void;
    protected get_a4(): string;
}
/**
 * @hidden
 */
export declare class WPFCodeBehindCodeGeneratingComponentRendererCodeEmitter extends CodeGeneratingComponentRendererCodeEmitter {
    static $t: Type;
    protected get_r(): boolean;
    protected get r(): boolean;
    protected i(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult): CodeGeneratingComponentRendererCodeEmitter;
    protected get_x(): boolean;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult);
}
/**
 * @hidden
 */
export declare class CodeGeneratingComponentRenderer extends ComponentRenderer {
    static $t: Type;
    loadCodeJson(a: string): void;
    protected cw(a: boolean): void;
    protected n(): boolean;
    static d4(a: string): string;
    static d6(a: string): string;
    static d5(a: string): string;
    static d7(a: string): string;
    protected aq(): boolean;
    ad(a: JsonDictionaryItem): boolean;
    ak(a: JsonDictionaryItem): boolean;
    ae(a: JsonDictionaryItem): boolean;
    af(a: JsonDictionaryItem): boolean;
    ag(a: JsonDictionaryItem): boolean;
    dq(a: CodeGenerationItemBuilder, b: CodeGenerationRendererOptions, c: CodeGeneratingRendererResult): CodeGeneratingComponentRendererCodeEmitter;
    dr(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult): CodeGeneratingComponentRendererDataEmitter;
    ds(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult): CodeGeneratingComponentRendererHandlerEmitter;
    du(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult): CodeGeneratingComponentRendererTemplateEmitter;
    dt(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult): CodeGeneratingComponentRendererModuleEmitter;
    emitCode(a: ICodeGenerationRendererTemplate): CodeGeneratingRendererResult;
    private eb;
    protected bb(): (arg1: string) => string;
    private d8;
    private d9;
    private dw;
    private dx;
    private d0;
    private d1;
    private d2;
    private dz;
    private dy;
    constructor(a: CodeGenerationTargetPlatforms, b: CodeGenerationRendererOptions);
    private static d3;
}
/**
 * @hidden
 */
export declare class CodeGenerationContainer extends Base {
    static $t: Type;
    private _id;
    get id(): string;
    set id(a: string);
    constructor();
    a: List$1<CodeGenerationItemBuilder>;
    c(a: TypeDescriptionContext, b: CodeGeneratingRendererResult, c: CodeGeneratingComponentRenderer, d: CodeGenerationRendererOptions): void;
}
/**
 * @hidden
 */
export declare class CodeGenerationItemBuilder extends Base {
    static $t: Type;
    private g;
    private f;
    private c;
    private b;
    private j;
    private h;
    o(): string;
    constructor(a: CodeGenerationTargetPlatforms, b: string, c: TypeDescriptionContext, d: any);
    a(a: string): CodeGenerationItemBuilder;
    r(a: TypeDescriptionMetadata): string;
    x(a: string, b: TypeDescriptionMetadata, c: any, d: DescriptionRef): void;
    v(a: string, b: TypeDescriptionMetadata, c: DescriptionRef): void;
    w(a: string, b: TypeDescriptionMetadata): void;
    i(a: string): any;
    t: string;
    u(a: CodeGeneratingComponentRendererCodeEmitter, b: boolean): void;
    protected e(a: TypeDescriptionContext, b: CodeGeneratingComponentRendererCodeEmitter): boolean;
    private d;
    q(): string;
    protected get s(): string;
    static n(a: CodeGenerationTargetPlatforms, b: string, c: TypeDescriptionContext, d: string, e: string): string;
    m(): string;
    private p;
    protected get_k(): string;
    protected get k(): string;
    protected get_l(): string;
    protected get l(): string;
}
/**
 * @hidden
 */
export declare class CodeGenerationRendererAdapter extends Base implements IComponentRendererAdapter {
    static $t: Type;
    private a;
    private b;
    constructor(a: CodeGenerationTargetPlatforms, b: IComponentRendererAdapter);
    createColorCollection(a: any[]): any;
    createBrushCollection(a: any[]): any;
    createDoubleCollection(a: any[]): any;
    createObject(a: string, b: any, c: TypeDescriptionContext): any;
    coerceToEnum(a: string, b: TypeDescriptionContext, c: string): any;
    onUIThread(a: any, b: () => void): void;
    setOrUpdateCollectionOnTarget(a: any, b: string, c: TypeDescriptionMetadata, d: TypeDescriptionContext, e: any, f: any): void;
    private c;
    onPendingRef(a: any, b: string, c: TypeDescriptionMetadata, d: DescriptionRef): void;
    setPropertyValue(a: any, b: string, c: TypeDescriptionMetadata, d: any, e: any, f: DescriptionRef): void;
    getPropertyValue(a: any, b: string): any;
    getRootObject(a: any): any;
    clearContainer(a: any, b: TypeDescriptionContext, c: (arg1: boolean) => void): void;
    forPropertyValueItem(a: any, b: string, c: (arg1: any) => void): void;
    clearCollection(a: any, b: string, c: TypeDescriptionMetadata): void;
    addItemToCollection(a: string, b: TypeDescriptionMetadata, c: any, d: number, e: any): void;
    resetPropertyOnTarget(a: any, b: string, c: TypeDescriptionMetadata, d: any): void;
    replaceItemInCollection(a: string, b: TypeDescriptionMetadata, c: any, d: number, e: any): void;
    replaceRootItem(a: any, b: string, c: TypeDescriptionContext, d: (arg1: boolean) => void): void;
    removeItemFromCollection(a: string, b: TypeDescriptionMetadata, c: any, d: number): void;
    removeRootItem(a: any, b: TypeDescriptionContext, c: (arg1: boolean) => void): void;
    flushChanges(a: any): void;
}
