import { Description } from "./Description";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class DatePickerDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private w;
    get value(): Date;
    set value(a: Date);
    private v;
    get today(): Date;
    set today(a: Date);
    private ap;
    get label(): string;
    set label(a: string);
    private at;
    get labelTextColor(): string;
    set labelTextColor(a: string);
    private aq;
    get labelFontFamily(): string;
    set labelFontFamily(a: string);
    private ab;
    get labelFontSize(): number;
    set labelFontSize(a: number);
    private ar;
    get labelFontStyle(): string;
    set labelFontStyle(a: string);
    private as;
    get labelFontWeight(): string;
    set labelFontWeight(a: string);
    private av;
    get placeholder(): string;
    set placeholder(a: string);
    private u;
    get minDate(): Date;
    set minDate(a: Date);
    private t;
    get maxDate(): Date;
    set maxDate(a: Date);
    private ai;
    get density(): string;
    set density(a: string);
    private af;
    get baseTheme(): string;
    set baseTheme(a: string);
    private ay;
    get textFontFamily(): string;
    set textFontFamily(a: string);
    private ac;
    get textFontSize(): number;
    set textFontSize(a: number);
    private az;
    get textFontStyle(): string;
    set textFontStyle(a: string);
    private a0;
    get textFontWeight(): string;
    set textFontWeight(a: string);
    private ax;
    get textColor(): string;
    set textColor(a: string);
    private an;
    get iconColor(): string;
    set iconColor(a: string);
    private k;
    get showClearButton(): boolean;
    set showClearButton(a: boolean);
    private l;
    get showTodayButton(): boolean;
    set showTodayButton(a: boolean);
    private h;
    get allowTextInput(): boolean;
    set allowTextInput(a: boolean);
    private j;
    get openOnFocus(): boolean;
    set openOnFocus(a: boolean);
    private aj;
    get firstDayOfWeek(): string;
    set firstDayOfWeek(a: string);
    private ak;
    get firstWeekOfYear(): string;
    set firstWeekOfYear(a: string);
    private m;
    get showWeekNumbers(): boolean;
    set showWeekNumbers(a: boolean);
    private ah;
    get dateFormat(): string;
    set dateFormat(a: string);
    private al;
    get formatString(): string;
    set formatString(a: string);
    private i;
    get isDisabled(): boolean;
    set isDisabled(a: boolean);
    private aw;
    get selectedValueChangedRef(): string;
    set selectedValueChangedRef(a: string);
    private am;
    get gotFocusRef(): string;
    set gotFocusRef(a: string);
    private au;
    get lostFocusRef(): string;
    set lostFocusRef(a: string);
    private ao;
    get keyDownRef(): string;
    set keyDownRef(a: string);
    private ag;
    get changingRef(): string;
    set changingRef(a: string);
    private a1;
    get valueChangeRef(): string;
    set valueChangeRef(a: string);
}
